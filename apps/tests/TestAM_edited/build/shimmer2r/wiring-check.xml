<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="10:TestAMAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fa6dd7840f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fa6de284a60"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fa6de284a60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fa6de0af590"/></to>
    </wire>
    <wire loc="11:TestAMAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6dd784710"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dd761800"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:TestAMAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa6dd784d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa6dd7635c0"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:TestAMAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd775ad0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd766550"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd766550"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd73bc10"/></to>
    </wire>
    <wire loc="14:TestAMAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dd799a20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6dd9f8a70"/></to>
    </wire>
    <wire loc="15:TestAMAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7fa6dd778820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6dcb348c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6dcb348c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa6dcd362c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:TestAMAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa6dd7735d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa6dd760a40"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa6dd760a40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa6dd7358f0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dcc0add0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dcc92020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dccb39c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dccd4080"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dce0c920"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dcf00620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dcfef820"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dd5bc7e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dc31a460"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dd264020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dd66d020"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dd795020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dc50be50"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6ddf87280"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dd7c3a60"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fa6de0afc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fa6de9433a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fa6de9433a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fa6de31bc30"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fa6de0ae6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6de281020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6de281020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6de281e00"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de0aedc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fa6de27e550"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fa6de27fe70"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fa6de27fe70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6de248d50"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fa6de27ec30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6de280b70"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fa6de274380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dd9cf2e0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6de248d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6de22e940"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fa6de23d380"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fa6de22d020"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa6de5c44c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa6de22c360"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fa6de1e95a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de1276d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fa6de1d7020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de11fb30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fa6de1e0700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de12c160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fa6de1c4a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de106cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fa6de1e7aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de12d480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fa6de1ca020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de106020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fa6de1c1a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de0eecb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fa6de1d25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de0ff220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fa6de1eab10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de17c9d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fa6de1c6a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de1142f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fa6de1cd3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de116610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fa6de1d65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de117220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fa6de1df700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de1247a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fa6de1c3a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de0fd2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fa6de1d5be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de10f6d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fa6de1e6890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de125ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fa6de1fa060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de18a540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fa6de1cada0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de0fe610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fa6de1f00c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de12e020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fa6de1d1a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de0f86d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fa6de1da6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de134a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fa6de1c5a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de10d7a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fa6de1e2cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de135de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fa6de1cb1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de10eac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fa6de1c2a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de0f67a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fa6de1d30c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de108b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de1833e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fa6de1c9b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de0f7ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fa6de1c7a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6de11dcb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fa6de1c8a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de0ee020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fa6de1ce570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa6de11d020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fa6de1cf020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa6de0f0b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fa6de188450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de189d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fa6de188aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fa6de0e9a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fa6de187120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fa6de0e6260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de133930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de18a540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de131020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de189d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de12b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de18a540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de12a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de189d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de123610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de18a540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de122c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de189d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fa6de1802f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de182bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fa6de180940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fa6de0e69f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fa6de17f020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fa6de0e5240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de11cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de1833e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de11a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de182bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de113160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de1833e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de1127a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de182bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de10c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de1833e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de10bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de182bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de104b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de1833e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de1022f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de182bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de0fc160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de1833e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de0fb7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de182bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de0f4610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de1833e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de0f3c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de182bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6de0edb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6de1833e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa6de0eb2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa6de182bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de31ab70"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fa6de3132c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fa6de9353b0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa6dd7bca20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fa6dd7ecbf0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa6dd7b9440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa6dd7f2020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa6dd7f2020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa6dc9a4580"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa6dd7b70c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa6dd7f2c30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa6dd7f2c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa6ddff97e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fa6dd79bbe0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fa6dd7bc1a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa6ddff97e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa6ddf8ea40"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa6dd7f18b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa6ddff8470"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa6ddff8470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa6ddf8f490"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa6dd7ef020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6ddff6b20"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6ddff6b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6ddf8d720"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa6dc9a32d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6de056ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa6dc9a2020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa6ddff8470"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa6de056ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6de00a580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa6de009400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa6ddffe3f0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa6ddffe3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa6ddf91110"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa6de008060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa6ddff8470"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa6de006720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa6ddff97e0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fa6de005480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fa6de005c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa6ddffb3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa6ddf878d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa6ddf878d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa6ddf76810"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6ddff91d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6ddf91e70"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6ddf87280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6ddf761c0"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6ddf82dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6ddfe60d0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa6ddf8c120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6ddf85480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa6ddf8cd70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6ddf86940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fa6ddf824a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fa6dd80aa30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa6ddf85480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6dde45830"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6ddf86940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dde45110"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fa6dde44760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fa6ddf824a0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6ddf6f430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6ddf82dc0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dde42590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6ddf82dc0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dde39cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6ddf82dc0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fa6dde430e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fa6ddf73080"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fa6dde439d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fa6ddf707d0"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fa6ddf65410"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fa6dde3db60"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fa6ddf61530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa6dde120c0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fa6dde120c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa6dd81e0c0"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fa6dde30d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fa6dde128d0"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fa6dde128d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fa6dd825440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fa6ddf0fe40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fa6ddf46d50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fa6ddf11400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fa6ddf0a0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fa6dde40c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fa6dde3f480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fa6dde10020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fa6dd824440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fa6dd824440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fa6ddda5210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fa6dd825440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fa6ddda9b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6dd822020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6dd81e920"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd81d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd826020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd826020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dddab320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd826c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc8e1020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc8e1020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd9822c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6ddda3600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6dd822020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc8d3760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6ddda7dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa6ddda4370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dc8e2340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dc8e2340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd983020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6ddd9ebe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6dc8dbc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6dc8dbc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd9864d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6ddda7dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6ddd13e70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fa6ddda5210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fa6ddd11890"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fa6ddda9b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fa6ddd12790"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dddab320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6ddd130d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6ddd0f3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6ddda3600"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa6ddd105b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fa6ddda4370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6ddd0a5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6ddd9ebe0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fa6ddd0fa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6ddd00b60"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6ddd00b60"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fa6ddcf4360"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6ddd08020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dda1ed20"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dda1ed20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa6dda18d90"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6ddd06120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa6ddcf8bd0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa6ddcef970"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6ddcf96d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa6ddcef020"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fa6ddcb3860"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fa6ddbcbcc0"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fa6ddbcbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb1c100"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fa6ddcbd800"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fa6ddbc7cc0"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fa6ddbc7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb18d10"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fa6ddcb1800"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fa6ddbc5cc0"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fa6ddbc5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb13740"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fa6ddcaf800"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fa6ddbbecc0"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fa6ddbbecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb0ad10"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fa6ddcad800"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fa6ddbc0cc0"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fa6ddbc0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb0e100"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fa6ddcc5bc0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fa6dd8df940"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fa6ddc27810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb5b740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fa6ddc12810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb2b100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fa6ddbc9ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb1c100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fa6ddba4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda91740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fa6ddc0e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb21740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fa6ddbfa9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaf1460"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fa6ddbe59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddac2d10"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fa6ddbd59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda9b100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fa6ddbb0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaae740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fa6ddb9ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda8c100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fa6ddc20810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb4d740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fa6ddc1c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb43d10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fa6ddc08810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb13740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fa6ddbf49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddae3100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fa6ddbdf9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddab3d10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fa6ddbcf9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda8c100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fa6ddc2b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb64100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fa6ddc16810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb35d80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fa6ddc02810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb05740"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fa6ddbaacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaa0740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fa6ddb9ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda8c100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fa6ddbb6cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddac6100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fa6ddbfe810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddafbe60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fa6ddbe99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddacb740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fa6ddbd99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaa5d10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fa6ddba8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda9b100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fa6ddbbccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddad4100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fa6ddc25810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb56100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fa6ddc10810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb26d10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fa6ddbdd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaae740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fa6ddc0c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb1c100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fa6ddbf89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaede00"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fa6ddbe39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddabd740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fa6ddbd39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda97d10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fa6ddbb8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddacb740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fa6ddc31800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb95d10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fa6ddc1a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb3e740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fa6ddc06810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb0e100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fa6ddbf19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddadfd10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fa6ddbb4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb05740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fa6ddbaecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaa9100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fa6ddba2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda8c100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fa6ddbed9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddad4100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fa6ddbb2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaff100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fa6ddc29810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb60d10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fa6ddc14810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb30740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fa6ddc00810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaff100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fa6ddbbacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddad0d10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fa6ddba6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda97d10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fa6ddbfc9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaf69f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fa6ddbe79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddac6100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fa6ddbd79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaa0740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fa6ddc23810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb52d10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fa6ddbdb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaa9100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fa6ddc1e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb47100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fa6ddc0a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb18d10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fa6ddbf69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddae8740"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fa6ddbe19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddab7100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fa6ddbd19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda91740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fa6ddc2d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb69740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fa6ddc18810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb39100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fa6ddc04810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb0ad10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fa6ddbef9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddad9740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fa6ddbc2ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb13740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fa6ddbaccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddaa5d10"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fa6ddbeb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddad0d10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fa6ddba0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6dda91740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fa6ddb9acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddab3d10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fa6ddbcd9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa6ddb21740"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa6dda18d90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dda12e50"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dda00020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6dd9cf2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dd9f8470"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fa6dd9f5060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fa6dd9f9b10"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fa6dd9f9b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd9cc020"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fa6dd9f4340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fa6dd9d2e70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fa6dd9d2e70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd9b7b90"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fa6dd9ee660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fa6dd9d00f0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fa6dd9d00f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd9b2710"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd9bb2f0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x7fa6ddbfe810"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd9b6de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fa6ddbfa9a0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd9b1930"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x7fa6ddbf89a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa6dc8da440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa6dd9843f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa6dc8daa50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa6dd8e9d70"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa6dd8e9d70"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fa6dd8df940"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6dc8df020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6ddd00b60"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc8e17c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd982ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd982ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd8f0400"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd9818a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc8d3760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd9822c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd8f2020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd8f2020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc506530"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd9864d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd97fd60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd983020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd8f3210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd8f3210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dc507740"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa6dd9843f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa6dd97e710"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd8f0400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc505930"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd8f0cd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd9818a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd96cbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd8f0400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fa6dd97ed80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6ddcf96d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fa6dd96c5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa6ddcf8bd0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dd8f27a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dc506cb0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc504270"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd8f0cd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa6dc504a30"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa6dc50a4a0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa6dc502c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fa6dd8d6700"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fa6ddcf4360"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fa6dd8d1250"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fa6ddbcbcc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fa6dd8cf1f0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fa6ddbc5cc0"/></to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7fa6dd7b2500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fa6dd795680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fa6dd79bbe0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fa6dd78f380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fa6de284a60"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fa6dd78faa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa6ddffb3b0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd73bc10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd716b70"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa6dd7635c0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa6dd73aca0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa6dd73aca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa6dcbcc020"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa6dd760430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa6dd738c00"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa6dd738c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa6dcbcbdf0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa6dd7358f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa6dcbc9a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa6dd75c060"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa6dce7b550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa6dce7b550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa6dce6da80"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dd748d90"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dd72acb0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dd72acb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dd709080"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6dd761800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dd738020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6dd738020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dcbcb210"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dd75ee40"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dd733990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dd733990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dd70a020"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa6dd75f780"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa6dd7362d0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa6dd7362d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa6dcbca470"/></to>
    </wire>
    <wire loc="87:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa6dd751130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa6dce78660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa6dce78660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa6dce69af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd716b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa6dcbfeb80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dd721e30"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dcbc78b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fa6dd714d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fa6dcbc8ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dd72c9b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dd70b140"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dd70b140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce81670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dd709080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dcbfe080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dd70a020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fa6dce7e6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa6dd71f020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa6dd709b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa6dd709b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa6dcbe9020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dd729c70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dd70a9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dd70a9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dce7da70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fa6dcbbe0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd711d00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa6dcbc6860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fa6dd70dd10"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fa6dd70dd10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fa6dcc66020"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcbc4690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fa6dd70ca90"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fa6dd70ca90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fa6dcc66d50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa6dcbc04d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa6dd022b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dcbc4ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce81670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce81670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce72d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcbc3b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce7d0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce7d0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce6e640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dcbc2610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dd676670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dd676670"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dd66b4c0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fa6dcbbf1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dd7023b0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dd7023b0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dd6faad0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dcbbed30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa6dcbfeb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fa6dcbfbd90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dce7da70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dce6d020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa6dcbe9020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa6dcbe7410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fa6dcc66020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fa6dcc5cbb0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dcbfe080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dcbf72d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fa6dd70e820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dcc67900"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6dcc67900"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fa6dcc5c500"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa6dce7e6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fa6dce6fc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd711d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dcc68020"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dcc68020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dcc5e910"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fa6dd710a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6dcc68c60"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa6dcc68c60"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fa6dcc5d660"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fa6dd70d020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fa6dcc65440"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fa6dcc65440"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fa6dcc5a0d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fa6dcc66d50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fa6dcc5b9d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa6dcbfbd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd704460"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd704460"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd6fb2d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa6dcc63890"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6dccba4d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa6dccba4d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6dccb6d50"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa6dccb73b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6dcbec350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa6dcbec350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa6dcbe9d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa6dcbe9d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6dcc02ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa6dcc02ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa6dcbfc860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa6dcbfc860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6dd703020"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa6dd703020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6dd6fbdc0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc63200"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dcbff980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6dcbff980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcbfb690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcbfb690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dcc9bd00"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6dcc9bd00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dcc931e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc98b80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dd703cc0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6dd703cc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dcf047c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa6dcf047c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa6dcefe020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420RxState" scoped="" ref="0x7fa6dd6fec60"/></from>
      <to><interface-ref name="CC2420RxState" scoped="" ref="0x7fa6dd6f9980"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd6f8310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd684220"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd684220"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd66d690"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fa6dd6f0880"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fa6dd6815b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fa6dd6815b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fa6dd669320"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa6dd6f6ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa6dcffb6c0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa6dd6f6ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa6dcf075c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fa6dcf075c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa6dcf00ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fa6dcffb6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa6dcfee020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa6dd6e8810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa6dcff8020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa6dcff8020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa6dcfee8c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fa6dd6ef700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dcff8cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dcff8cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dcfed650"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dd6e6b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce81670"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dd6dc130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce7d0c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa6dd6e4b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa6dccd9a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa6dccd9a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa6dccd2a20"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fa6dd6d7850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa6dccdbaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa6dccdbaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa6dd2691d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dd6e7470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fa6dd6d2730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fa6dd6d47d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fa6dd6d5890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fa6dd6709e0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fa6dd6686a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fa6dd65d960"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa6dd5b9220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa6dd5b9220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa6dd5b22e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa6dd65bb60"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fa6dd4cd370"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa6dd4cd370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4bf1b0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fa6dd65ae70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fa6dd4cace0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fa6dd4cace0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4b1710"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fa6dd6580f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fa6dd4c7380"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fa6dd4c7380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4a7d70"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fa6dd652c00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fa6dd491210"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fa6dd491210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa6dd33aa30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa6dd63fb60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd0ade20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd0ade20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd2e94d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa6dd640b60"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fa6dd0aa7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa6dd0aa7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dd6423b0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dd0a9ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dd0a9ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dd63f440"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dd0abad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dd0abad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dd642ae0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dd0a7160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dd0a7160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dd645420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dd09f870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dd09f870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dd645cd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dd09d880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dd09d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dd6485d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dd09c0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dd09c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dd647020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dd0a4e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dd0a4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dd6478f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dd0a3670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dd0a3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa6dd649e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fa6dd08f500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa6dd08f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dd6494a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dd090ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dd090ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dd6441e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dd0a0e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dd0a0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa6dd644a80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fa6dd0a3e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa6dd0a3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dd6433c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dd0a1e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dd0a1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fa6dd63d880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd07ba80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd07ba80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd2e94d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fa6dd63ea10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd04e9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd04e9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd2e94d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa6dd64d390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa6dd022b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa6dd666bc0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa6dd021d70"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fa6dd6322f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fa6dd633410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6dd5bc7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dd5b4a20"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6dd5b4a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dc4a03d0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa6dd5b22e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa6dc4a0c20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6dc4a03d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dc4983d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa6dc4a0c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa6dc491020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6dc4983d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dc47dca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fa6dc48b780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa6dc498c20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa6dc498c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa6dc47b5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dc48e3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dd53b020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dd53b020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dd5365f0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc478710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc4829d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc4829d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc477da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc480120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc480120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc4750c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc47f440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc47f440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fa6de1d7020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fa6de1ce570"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fa6de1d65a0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB1" scoped="" ref="0x7fa6de1cd3e0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fa6de1d5be0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fa6de1cb1f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fa6de1d30c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fa6de1ca020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fa6de1d25a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fa6de1cada0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fa6de1d1a50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fa6de1c9b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fa6de1cf020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fa6de1c8a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fa6dd519950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa6dda18d90"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fa6dd4cc6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4bbd70"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fa6dd4cb9d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4b6b70"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fa6dd4ce020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4c5710"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fa6dd4c8020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4ab1b0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4c3930"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fa6ddc10810"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4be480"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fa6ddbe59a0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4b9020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fa6ddc25810"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4b5de0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fa6ddc31800"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4b0930"/></from>
      <to><interface-ref name="Port57" scoped="" ref="0x7fa6ddbdf9a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4aa480"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fa6ddc2b810"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4a5020"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fa6ddbe19a0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fa6dd48d5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa6dd4701f0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa6dd491e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa6dd32ba70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd470cb0"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7fa6de1f00c0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fa6dd46e020"/></from>
      <to><interface-ref name="CaptureA1" scoped="" ref="0x7fa6de1e0700"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd46ee40"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fa6ddc2b810"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dd45a300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dd53b020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fa6dd46cce0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa6dd45b020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dd439020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dd453020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dd453020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dd442210"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTimeMicro" scoped="" ref="0x7fa6dd469020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa6dd43bcf0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fa6dd339610"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fa6dd41f020"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fa6dd41f020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fa6dd40cbc0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fa6dd329610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fa6dd42d170"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fa6dd42d170"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fa6dd41ed30"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fa6dd43f6d0"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fa6dd44e120"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fa6dd44e120"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dd44a990"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd448a60"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fa6de1fa060"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fa6dd42a020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fa6dd418bc0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fa6dd420020"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fa6dd40dbc0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fa6dd427020"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fa6dd415bc0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fa6dd425020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fa6dd413bc0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fa6dd431060"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fa6dd41ac40"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fa6dd422020"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fa6dd40fbc0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fa6dd429020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fa6dd417bc0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fa6dd424020"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fa6dd412bc0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fa6dd42c020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fa6dd419bc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fa6dd421060"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fa6dd40ec40"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fa6dd428020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fa6dd416bc0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fa6dd426020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fa6dd414bc0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fa6dd432100"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fa6dd41bc80"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fa6dd423020"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fa6dd410bc0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa6dd0aa160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dd09e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa6dd0960a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa6dd09d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dd08a500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa6dd08c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dd0a9490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa6dd092880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dd08e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dd098880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa6dd0990a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd0aca90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd2e8350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd2e8350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd2e0660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dd0a7e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa6dd0a6490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dd091c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dd0a6be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dd08ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa6dd0920a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dd0a1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dd0930a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa6dd096880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dd093880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dd08bce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa6dd08cce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa6dd099880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa6dd0950a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dd08fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dd09c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dd08ace0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa6dd0ab480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa6dd0a4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dd0a0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dd0970a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dd097880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dd09e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dd0a52f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa6dd0a4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dd0a77b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dd090500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa6dd08b500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dd0980a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa6dd095880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa6dd0aae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dd09a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa6dd0a5940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa6dd09a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa6dd0910a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dd0899b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2de890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2ddba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2dba30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd2e94d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd2df510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2da8b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fa6dd2ccb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa6dd26e770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa6dd26e770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa6dd2691d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa6dd2d9060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd24a140"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd24a140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dc388770"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd2d6c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd24ad90"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd24ad90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa6dc387be0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd2cc2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd0d4410"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd0d4410"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dc386d70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dd2d7a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fa6dd2c9bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa6dd2691d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa6dd264b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dc386d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd236850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa6dc387be0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd237020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dc388770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd239430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc387440"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc37ed90"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc37ed90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd1192c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd237020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd1daa10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fa6dc3862b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fa6dd2376a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fa6dd2376a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fa6dd1d9060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa6dd233a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa6dc3855a0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc376020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd2386b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa6dd234690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dc37e140"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dc37e140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd11a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6dd2322a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6dc377760"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6dc377760"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd11b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd2386b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd1da250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd236850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd1d9c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd239430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd1db470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa6dd1d73e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa6dd233a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa6dd1d85b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fa6dd234690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6dd1d1480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6dd2322a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fa6dd1d7a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6dd1c60c0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6dd1c60c0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fa6dd1bd970"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dd1d1c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fa6dd1cf2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6dd1c1d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd1b8460"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dd1c4840"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dd1bd0c0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fa6dd1b8d30"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fa6ddbbacc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fa6dd1b6cb0"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fa6ddbb8cc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fa6dd1b4cb0"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fa6ddbb6cc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fa6dd1b2cb0"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fa6ddbb2cc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fa6dd1afcb0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fa6ddbb4cc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6dc37cd40"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6dd1c60c0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc37c5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd119ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd119ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd10fe80"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd1188a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc376020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd1192c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd1109e0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd1109e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc317a60"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd11b1d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd115060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd11a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd111b60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dd111b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dc318c80"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd10fe80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc315e80"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fa6dd114060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6dd1c1d10"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd10d770"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd1188a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd114e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd10fe80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dd0f35f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dd10f270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dd10f270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dc315270"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dd108880"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dd1c4840"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc314790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd10d770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa6dc313020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa6dc31aa70"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa6dc311160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dc2e2900"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dd108880"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa6dc2e10e0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa6dd0f3020"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dc2e16b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dd0f35f0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc2df400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd0f2270"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dd06ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa6dd079da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dd071b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dd06b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa6dd064e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa6dd06be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dd0582f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa6dd05a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dd076120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa6dd060670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dd05b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa6dd070c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dd06fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dd066670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa6dd068e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dd06a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd07a760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd2e8350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dd075aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa6dd074120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dd05fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dd074870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dd05bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dd076dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa6dd061e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dd06f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dd070480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dd079750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dd062e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa6dd063670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dd061670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dd059ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa6dd05aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa6dd067670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa6dd063e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dd05cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dd069670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dd058ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa6dd079100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa6dd071370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dd06e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dd066e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dd06ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dd064670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dd06d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa6dd077450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dd06de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dd073020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa6dd073cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa6dd05c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dd05dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dd075450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dd05d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa6dd0592f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dd067e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa6dd062670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa6dd077aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dd076770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dd069e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa6dd073670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa6dd068670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa6dd060e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dd0567a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dd041c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa6dd04cda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dd045b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dd03f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa6dd038e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa6dd03fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dd02b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa6dd02d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dd04a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa6dd033670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dd02f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa6dd044c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dd042c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dd039670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa6dd03be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dd03e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd04d760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd2e8350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dd048aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa6dd047120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dd032a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dd047870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dd02fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dd04adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa6dd034e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dd042480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dd044480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dd04c750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dd035e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa6dd037670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dd034670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dd02cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa6dd02dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa6dd03a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa6dd037e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dd030ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dd03d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dd02bad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa6dd04c100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa6dd045370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dd041480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dd039e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dd03ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dd038670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dd040670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa6dd04b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dd040e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dd046020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa6dd046cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa6dd0302f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dd031ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dd048450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dd0312f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa6dd02c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dd03ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa6dd035670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa6dd04baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dd04a770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dd03de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa6dd046670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa6dd03b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa6dd033e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dd02a7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa6dcff4990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa6dcfec5e0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fa6dcff6150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fa6dcfecd70"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fa6dcfeb7f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa6dd5b9220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fa6dcfdf500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fa6dd4ce020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa6dcfd6820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fa6dd4cd370"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fa6dcfd5b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fa6dd4c8020"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fa6dcfe0880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fa6dd48d5a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa6dcfd3020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dcf38c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dcf38c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd2e94d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dcfd3d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dcf378f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dcf378f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd2e8350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa6dcfd06d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fa6dcf362f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa6dcf362f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa6dcfd0de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fa6dcf34cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa6dcf34cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dcfcf530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dcf33370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dcf33370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dcfcfc60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dcf32d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dcf32d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dcfd1e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dcf2cc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dcf2cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dcfd2780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dcf137a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dcf137a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dcfd1550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dcf182f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dcf182f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dcfce3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dcf2d480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dcf2d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dcfcd5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dcf2ae50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dcf2ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dcfcc020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dcf28670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dcf28670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa6dcfcee80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fa6dcf307b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa6dcf307b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dcfca9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dcf16ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dcf16ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa6dcfcc890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fa6dcf172f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa6dcf172f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa6dcfca130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fa6dcf17ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa6dcf17ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fa6dcfc5d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fa6dcf07df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fa6dcf07df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fa6dceff550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dcfe7a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce81670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcfe69a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce7d0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa6dcfe57c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa6dce7b550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa6dcfd8b30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa6dce74480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa6dce74480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa6dce658b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dcfc86c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dcf2bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa6dcf34020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dcf2ec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa6dcf21e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa6dcf28e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dcf152f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa6dcf1d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa6dcf2dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dcf23670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa6dcf25e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dcf27670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa6dcf31370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dcf1ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dcf31ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dcf18ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dcf32060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa6dcf1ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dcf2c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dcf36940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dcf1fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa6dcf20670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dcf1e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa6dcf24670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa6dcf20e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dcf19ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dcf26670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dcf15ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa6dcf2e490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dcf2b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dcf23e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dcf27e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dcf21670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dcf2a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa6dcf34670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dcf30160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa6dcf30e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa6dcf192f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dcf1aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dcf326b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dcf1a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa6dcf162f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dcf24e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa6dcf1f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dcf339c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dcf26e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa6dcf25670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa6dcf1de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fa6dcf03020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fa6dcefe7c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa6dcee9150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa6dcefd020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fa6dd4cd370"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fa6dcefc380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fa6dd4cc6a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fa6dcefb6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fa6dd4cb9d0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa6dcefaa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa6dd491e30"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa6dcef96e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dcd27d00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa6dcd27d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa6dd2e94d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dcef8530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dcd04ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dcd04ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dcef7ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dcd216b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dcd216b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa6dcef73a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fa6dcd20370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa6dcd20370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dcef5330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce81670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcef41e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce7d0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa6dcef2d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa6dce7b550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dcef4b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dd676670"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dceed3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dcd19e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dcd19e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dceedcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dcd18670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dcd18670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dceefb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dcd1f160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dcd1f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dceeb6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dcd042f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dcd042f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa6dceec590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fa6dcd062f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa6dcd062f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa6dceece00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fa6dcd06ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa6dcd06ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dceea020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dcd07ad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dcd07ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa6dceea8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fa6dcd25300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa6dcd25300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fa6dcedd9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dce10020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dd53b020"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fa6dce633b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa6dce12cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fa6dce626e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa6dce04b80"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fa6dce04b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa6dcd4a2b0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fa6dce09700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6dcd58150"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6dce0c920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dcdd52a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6dcdd52a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dc1ff9d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fa6dcd52640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa6dcda7830"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa6dcda2cd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa6dcdd5af0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa6dcdd5af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa6dc1f85f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dcd48690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dcdf1080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dcdf1080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dcdedcd0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6dc1ff9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dc1e0360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fa6dc1f2d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa6dc1fe260"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa6dc1fe260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa6dc1e0bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa6dc1f49b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa6dcdf1080"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc1dddd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc1e6020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc1e6020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc1da440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc1e4760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc1e4760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc1d9760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc1e3a80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc1e3a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fa6dcde90f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa6dda18d90"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fa6dcd9d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fa6dcd4da00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa6dcd3f8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa6dcd362c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fa6dcd362c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa6dce09700"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dcd1ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa6dcd24020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dcd1ec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa6dcd11e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa6dcd18e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dcd22370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa6dcd0c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dcd072f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa6dcd1cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dcd1bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dcd12670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa6dcd14e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dcd17670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dcd26970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd2e8350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dcd21d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dcd0ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dcd20ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dcd21060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa6dcd0de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dcd1b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dcd1c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dcd25950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dcd0ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa6dcd10670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dcd0d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dcd05ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa6dcd13670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa6dcd10e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dcd09ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dcd15670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa6dcd1e490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dcd1a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dcd12e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dcd17e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dcd11670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dcd19670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa6dcd24670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa6dcd1fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa6dcd092f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dcd0aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dcd0a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa6dcd052f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dcd13e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa6dcd0e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa6dcd24cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dcd229c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dcd15e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa6dcd1f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa6dcd14670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa6dcd0ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dcd037a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fa6dccd7920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fa6dccd4940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa6dccdd990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa6dccd4080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa6dccb2110"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa6dccb73b0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa6dccb2d60"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa6dccb4b00"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa6dccb4b00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa6dd2691d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa6dccb1be0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa6dccd9a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dccb04b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce7d0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa6dcc98430"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa6dcc938f0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc92770"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc98b80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcc92df0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce7d0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa6dcc5ae20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa6dcc63890"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc59b50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc63200"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dcc582f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce81670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcc57170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce7d0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa6dcc57b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa6dcc09410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fa6dcc2adb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fa6dcbfd800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa6dcbf9580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa6dcbf9580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa6dd2691d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dcbe41c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dd70a020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="38:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P.UartP" loc="41(Msp430Uart0P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.2 $ $Date: 2010/07/29 13:19:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="46:../../../tos/platforms/shimmer2r/LedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="45:../../../tos/platforms/shimmer2r/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/platforms/shimmer2r/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="39(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2013/04/09 14:28:58 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ShimmerSerialP" loc="35:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestAMC" loc="5:TestAMC.nc">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="56:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <documentation loc="48:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the SHIMMER platform.</short>
        <long>&#10; The Active Message layer on the SHIMMER platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-07-26 17:51:39 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-03-02 16:52:48 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;&#10; @author Steve Ayer&#10; @date April, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="44(HplCC2420InterruptsC.CaptureSFDC):../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterToLocalTimeC" loc="46(HplCC2420InterruptsC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="41:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <documentation loc="33:../../../tos/platforms/shimmer/CounterMicro32C.nc">
        <short>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.</short>
        <long>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform" loc="54(CounterMicro32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterMicroToLocalTime" loc="46(HplCC2420InterruptsC.CounterMicroToLocalTime):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="45(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P.SpiP" loc="73(Msp430SpiNoDma1P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="40(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestAMAppC.TimerMilliC" loc="44(TestAMAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fa6de1bc890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fa6de1bcc30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fa6de1bb020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fa6de1bb3a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fa6de1bb720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fa6de1bba90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fa6de1bbe20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fa6de1ba200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fa6de1ba5d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fa6de17ee70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fa6de17b270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fa6de0a03c0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fa6de0720d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fa6de04f0d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart0C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fa6ddb94190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fa6ddb94540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fa6ddb948f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fa6ddb94ca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fa6ddb92060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fa6dda13e60" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fa6dda13e60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fa6dd9675b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fa6dd95a5b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fa6dd941d80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fa6dd7ed490" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fa6dd7ed490"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fa6dd7ed810" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fa6dd5719c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fa6dd5719c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fa6dd538ba0" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fa6dd538ba0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fa6dd5353b0" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fa6dd5353b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fa6dd5357a0" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fa6dd5357a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fa6dd533020" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fa6dd533020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fa6dd5333f0" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fa6dd533bf0" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fa6dd533bf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fa6dd53cdc0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fa6dd53cdc0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fa6dd512600" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fa6dd512600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fa6dd5129f0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fa6dd5129f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fa6dd511210" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fa6dd511210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fa6dd5115e0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420GpioCaptureC" loc="44:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa6dd4634b0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa6dd4634b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi1C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa6dcdce160" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa6dcdce160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa6dcd9b730" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa6dcd9b730"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fa6dcd9ba60" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fa6de285020" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de285020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de2853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fa6de284a60" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fa6de284a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa6de284de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6de281020" loc="40:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6de281020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de2813a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fa6de27ec30" loc="6:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fa6de27ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de274020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6de281e00" loc="4:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6de281e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de27e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fa6de27e550" loc="5:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fa6de27e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de27e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fa6de274380" loc="7:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fa6de274380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de274700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6de280b70" loc="39:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6de280b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de26e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fa6de27fe70" loc="39:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fa6de27fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de248220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fa6de23d380" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fa6de23d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fa6de243340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fa6de23d890"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fa6de23da20"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fa6de23dbb0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fa6de23d700"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fa6de23dd40"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fa6de243020"/>
        <function-ref name="initClocks" scoped="" ref="0x7fa6de2431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6de248d50" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6de248d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de244100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fa6de22d020" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fa6de22d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fa6de22c020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fa6de22d530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fa6de22d6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fa6de22d850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fa6de22d3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fa6de22d9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fa6de22db70"/>
        <function-ref name="initClocks" scoped="" ref="0x7fa6de22dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fa6de22c360" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa6de22c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fa6de22c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6de22e940" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6de22e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de22ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fa6de1e95a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fa6de1e95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1e9920"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1e9ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1e9c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1e9dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1e8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1e81b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1e8340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1e84d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fa6de1d7020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fa6de1d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1d73a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1d7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1d76c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1d7850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1d79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1d7b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1d7d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1d6020"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fa6de1e0700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fa6de1e0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1e0a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1e0c10"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1e0da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1df020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1df1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fa6de1c4a20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fa6de1c4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c4da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1c3020"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1c31b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1c3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1c34d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fa6de1e7aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fa6de1e7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1e7e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1e6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1e61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1e6340"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fa6de1ca020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fa6de1ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1ca3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1ca530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1ca6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1ca850"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1ca9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fa6de1c1a20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fa6de1c1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c1da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1c0020"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1c01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1c0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1c04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1c0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fa6de1d25a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fa6de1d25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1d2920"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1d2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1d2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1d2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1d1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1d11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1d1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1d14d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fa6de1eab10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fa6de1eab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1f1020"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1f11b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1f1340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1f14d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1f1660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1f17f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1f1980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1f1b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1f1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fa6de1c6a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fa6de1c6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c6da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1c5020"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1c51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1c5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1c54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fa6de1cd3e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fa6de1cd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1cd760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1cd8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1cda80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1cdc10"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1cdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fa6de1d65a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fa6de1d65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1d6a20"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1d6bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1d6d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1d5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1d51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1d5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1d54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1d5660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1d57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fa6de1df700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fa6de1df700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1dfa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1dfc10"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1dfda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1d9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1d91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fa6de1c3a20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fa6de1c3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c3da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1c2020"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1c21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1c2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1c24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1c2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fa6de1d5be0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fa6de1d5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1d4020"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1d41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1d4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1d44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1d4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1d47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1d4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1d4b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1d4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fa6de1e6890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fa6de1e6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1e6c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1e6da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1e1020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1e11b0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fa6de1fa060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fa6de1fa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de1fa3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de1fa570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1fa700"/>
        <function-ref name="get" scoped="" ref="0x7fa6de1fa890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1faa20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1fabb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de1fad40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1f9020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de1f91b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de1f9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de1f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fa6de1cada0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fa6de1cada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c9180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1c9310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1c94a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1c9630"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1c97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fa6de1f00c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fa6de1f00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1f0440"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1f05d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1f0760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1f08f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1f0a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1f0c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1f0da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1e9020"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fa6de1d1a50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fa6de1d1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1d1dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1d0020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1d01b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1d0340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1d04d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1d0660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1d07f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1d0980"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1d0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fa6de1da6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fa6de1da6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1daa50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1dabe0"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1dad70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1e0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1e01b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1e0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fa6de1c5a20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fa6de1c5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c5da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1c4020"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1c41b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1c4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1c44d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fa6de1e2cf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fa6de1e2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1e70a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1e7230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1e73c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1e7550"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1e76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fa6de1cb1f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fa6de1cb1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1cb570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1cb700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1cb890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1cba20"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1cbbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fa6de1c2a20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fa6de1c2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c2da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1c1020"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1c11b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1c1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1c14d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1c1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fa6de1d30c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fa6de1d30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1d3440"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1d35d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1d3760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1d38f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1d3a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1d3c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1d3da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1d2020"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fa6de1d96c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fa6de1d96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de1d9a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de1d9bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1d9d60"/>
        <function-ref name="get" scoped="" ref="0x7fa6de1d8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1d81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1d8340"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de1d84d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1d8660"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de1d87f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de1d8980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de1d8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fa6de1c9b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fa6de1c9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c8020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1c81b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1c8340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1c84d0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fa6de1c7a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fa6de1c7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c7da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de1c6020"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1c61b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1c6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1c64d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de1c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fa6de1c8a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fa6de1c8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1c7020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1c71b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1c7340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1c74d0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fa6de1ce570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fa6de1ce570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1ce8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de1cea80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1cec10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de1ceda0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fa6de1cf020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fa6de1cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1cf3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1cf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1cf6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1cf850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1cf9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1cfb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1cfd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1ce020"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fa6de188aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fa6de188aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de188e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fa6de188450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fa6de188450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de1887d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fa6de187120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fa6de187120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de1874a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fa6de189d80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de189d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de188180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa6de18a540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de18a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de18a8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de18aa50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de18abe0"/>
        <function-ref name="get" scoped="" ref="0x7fa6de18ad70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de189020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1891b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de189340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1894d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de189660"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de1897f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de189980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fa6de180940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fa6de180940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de180cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fa6de1802f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fa6de1802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de180670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fa6de17f020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fa6de17f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de17f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fa6de182bf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de182bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de180020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa6de1833e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de1833e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de183760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de1838f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de183a80"/>
        <function-ref name="get" scoped="" ref="0x7fa6de183c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de183da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de182020"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de1821b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de182340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de1824d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de182660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de1827f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de134a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de134a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de134e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de133020"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1331b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de133340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1334d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de133660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de17c9d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de17c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de17cd50"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de135020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1351b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de135340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1354d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de135660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1357f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de135980"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de135b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de131020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de131020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de1313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de135de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de135de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de134180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de134310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1344a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de134630"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1347c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de133930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de133930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de133cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de133e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de132020"/>
        <function-ref name="get" scoped="" ref="0x7fa6de1321b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de132340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1324d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de132660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1327f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de132980"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de132b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de132ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de12c160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de12c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de12c4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de12c670"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de12c800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de12c990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de12cb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de12ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de12e020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de12e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de12e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de12e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de12e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de12e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de12e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de12eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de12ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de12d020"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de12d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de12a7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de12a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de12ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de12d480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de12d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de12d800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de12d990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de12db20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de12dcb0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de12de40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de12b020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de12b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de12b3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de12b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de12b6c0"/>
        <function-ref name="get" scoped="" ref="0x7fa6de12b850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de12b9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de12bb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de12bd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de12a020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de12a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de12a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de12a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de1247a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de1247a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de124b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de124cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de124e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de123020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1231b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de123340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de1276d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de1276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de127a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de127be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de127d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de125020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de1251b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de125340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de1254d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de125660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de1257f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de122c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de122c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de121020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de125ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de125ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de125e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de124020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1241b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de124340"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1244d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de123610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de123610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de123990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de123b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de123cb0"/>
        <function-ref name="get" scoped="" ref="0x7fa6de123e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de122020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1221b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de122340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1224d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de122660"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de1227f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de122980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de11dcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de11dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de11c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de11c230"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de11c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de11c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de11c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de11c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de11fb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de11fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de11e020"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de11e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de11e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de11e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de11e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de11e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de11e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de11eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de11eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de11a2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de11a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de11a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de11d020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de11d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de11d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de11d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de11d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de11d850"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de11d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de11cb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de11cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de11b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de11b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de11b340"/>
        <function-ref name="get" scoped="" ref="0x7fa6de11b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de11b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de11b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de11b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de11bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de11bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de11be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de11a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de1142f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de1142f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de114670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de114800"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de114990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de114b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de114cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de114e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de117220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de117220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de1175a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de117730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de1178c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de117a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de117be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de117d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de116020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de1161b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de116340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de1127a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de1127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de112b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de116610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de116610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de116990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de116b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de116cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de116e40"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de114020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de113160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de113160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de1134e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de113670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de113800"/>
        <function-ref name="get" scoped="" ref="0x7fa6de113990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de113b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de113cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de113e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de112020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de1121b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de112340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de1124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de10d7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de10d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de10db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de10dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de10de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de10c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de10c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de10c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de10f6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de10f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de10fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de10fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de10fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de10e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de10e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de10e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de10e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de10e660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de10e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de10bc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de10bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de10a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de10eac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de10eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de10ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de10d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de10d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de10d340"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de10d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de10c610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de10c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de10c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de10cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de10ccb0"/>
        <function-ref name="get" scoped="" ref="0x7fa6de10ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de10b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de10b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de10b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de10b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de10b660"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de10b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de10b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de106cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de106cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1040a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de104230"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de1043c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de104550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de1046e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de104870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de108b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de108b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de107020"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de1071b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de107340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de1074d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de107660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de1077f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de107980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de107b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de107ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de1022f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de1022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de102670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de106020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de106020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de1063a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de106530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de1066c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de106850"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de1069e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de104b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de104b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de103020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de1031b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de103340"/>
        <function-ref name="get" scoped="" ref="0x7fa6de1034d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de103660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de1037f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de103980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de103b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de103ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de103e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de102020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de0fd2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de0fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de0fd670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de0fd800"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de0fd990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de0fdb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de0fdcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de0fde40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de0ff220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de0ff220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de0ff5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de0ff730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de0ff8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de0ffa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de0ffbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de0ffd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de0fe020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de0fe1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de0fe340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de0fb7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de0fb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de0fbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de0fe610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de0fe610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de0fe990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de0feb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de0fecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de0fee40"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de0fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de0fc160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de0fc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de0fc4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de0fc670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de0fc800"/>
        <function-ref name="get" scoped="" ref="0x7fa6de0fc990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de0fcb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de0fccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de0fce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de0fb020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de0fb1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de0fb340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de0fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de0f67a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de0f67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de0f6b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de0f6cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de0f6e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de0f4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de0f41b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de0f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de0f86d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de0f86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de0f8a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de0f8be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de0f8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de0f7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de0f71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de0f7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de0f74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de0f7660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de0f77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de0f3c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de0f3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de0f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de0f7ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de0f7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de0f7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de0f6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de0f61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de0f6340"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de0f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de0f4610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de0f4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de0f4990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de0f4b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de0f4cb0"/>
        <function-ref name="get" scoped="" ref="0x7fa6de0f4e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de0f3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de0f31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de0f3340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de0f34d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de0f3660"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de0f37f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de0f3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6de0eecb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6de0eecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de0ed0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6de0ed230"/>
        <function-ref name="captured" scoped="" ref="0x7fa6de0ed3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de0ed550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de0ed6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6de0ed870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa6de0f0b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa6de0f0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6de0ef020"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6de0ef1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de0ef340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6de0ef4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6de0ef660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de0ef7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6de0ef980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6de0efb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6de0efca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa6de0eb2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa6de0eb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de0eb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa6de0ee020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa6de0ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6de0ee3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6de0ee530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6de0ee6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6de0ee850"/>
        <function-ref name="fired" scoped="" ref="0x7fa6de0ee9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa6de0edb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6de0edb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de0ec020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6de0ec1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6de0ec340"/>
        <function-ref name="get" scoped="" ref="0x7fa6de0ec4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6de0ec660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6de0ec7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6de0ec980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6de0ecb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6de0ecca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6de0ece30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6de0eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fa6de0e5240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fa6de0e5240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de0e55c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fa6de0e9a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fa6de0e9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de0e9e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fa6de0e6260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fa6de0e6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de0e65e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fa6de0e69f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fa6de0e69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6de0e6d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fa6de5c44c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa6de5c44c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fa6de5c4840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fa6de9353b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fa6de9353b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fa6de935730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fa6de9358c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fa6de935a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fa6de79ebc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fa6de79ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fa6de8da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fa6de0aedc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fa6de0aedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de0ad180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fa6de0af590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fa6de0af590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa6de0af910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fa6de0ae6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fa6de0ae6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de0aea40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fa6de0afc00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fa6de0afc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de0ae020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fa6de0ae1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fa6de0ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fa6de9b2410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de9b2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6de9b2790"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6de9b2920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fa6de9433a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fa6de9433a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de943720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fa6de9438b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fa6de943a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fa6de31ab70" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fa6de31ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6de319020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6de3191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fa6de3132c0" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fa6de3132c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fa6de313640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fa6de3137d0"/>
        <function-ref name="sleep" scoped="" ref="0x7fa6de313960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fa6de31bc30" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fa6de31bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6de31a020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fa6de31a1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fa6de31a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa6dd7f2020" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6dd7f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd7f23a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd7f2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd7f26c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd7f2850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd7f29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa6dd7f2c30" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6dd7f2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd7f1020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dd7f11b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd7f1340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd7f14d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dd7f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa6dd7f18b0" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa6dd7f18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa6dd7f1c30"/>
        <function-ref name="source" scoped="" ref="0x7fa6dd7f1dc0"/>
        <function-ref name="address" scoped="" ref="0x7fa6dd7f0020"/>
        <function-ref name="destination" scoped="" ref="0x7fa6dd7f01b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa6dd7f0340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa6dd7f04d0"/>
        <function-ref name="type" scoped="" ref="0x7fa6dd7f0660"/>
        <function-ref name="setType" scoped="" ref="0x7fa6dd7f07f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa6dd7f0980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa6dd7f0b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa6dd7f0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa6dd7ef020" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa6dd7ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa6dd7ef3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa6dd7ef530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa6dd7ef6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa6dc9a4580" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6dc9a4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dc9a4900"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dc9a4a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dc9a4c20"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dc9a4db0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dc9a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fa6dc9a32d0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dc9a32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dc9a3650"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dc9a37e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dc9a3970"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dc9a3b00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dc9a3c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa6dc9a2020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa6dc9a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa6dc9a23a0"/>
        <function-ref name="source" scoped="" ref="0x7fa6dc9a2530"/>
        <function-ref name="address" scoped="" ref="0x7fa6dc9a26c0"/>
        <function-ref name="destination" scoped="" ref="0x7fa6dc9a2850"/>
        <function-ref name="setSource" scoped="" ref="0x7fa6dc9a29e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa6dc9a2b70"/>
        <function-ref name="type" scoped="" ref="0x7fa6dc9a2d00"/>
        <function-ref name="setType" scoped="" ref="0x7fa6dc9a0020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa6dc9a01b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa6dc9a0340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa6dc9a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6de056ce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6de056ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6de0530a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6de053230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6de0533c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6de053550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6de0536e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa6de009400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6de009400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6de0097a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6de009930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6de009ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6de009c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6de009de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6de00a580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6de00a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6de00a920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6de00aab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6de00ac40"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6de00add0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6de009020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa6de006720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6de006720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6de006aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6de006c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6de006dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6de005020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6de0051b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fa6de005480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fa6de005480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6de005800"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6de005990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fa6de005c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fa6de005c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6de004020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6de0041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa6de008060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa6de008060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa6de0083e0"/>
        <function-ref name="source" scoped="" ref="0x7fa6de008570"/>
        <function-ref name="address" scoped="" ref="0x7fa6de008700"/>
        <function-ref name="destination" scoped="" ref="0x7fa6de008890"/>
        <function-ref name="setSource" scoped="" ref="0x7fa6de008a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa6de008bb0"/>
        <function-ref name="type" scoped="" ref="0x7fa6de008d40"/>
        <function-ref name="setType" scoped="" ref="0x7fa6de006020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa6de0061b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa6de006340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa6de0064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa6ddffb3b0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6ddffb3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6ddffb730"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6ddffb8c0"/>
        <function-ref name="start" scoped="" ref="0x7fa6ddffba50"/>
        <function-ref name="stop" scoped="" ref="0x7fa6ddffbbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa6ddffe3f0" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6ddffe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6ddffe770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6ddffe900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6ddffea90"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6ddffec20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6ddffedb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa6ddff97e0" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6ddff97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6ddff9b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6ddff9cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6ddff9e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6ddff8030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6ddff81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6ddff91d0" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6ddff91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6ddff9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6ddfe60d0" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6ddfe60d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6ddfe6450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6ddfe65e0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6ddfe6770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6ddfe6900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6ddfe6a90"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddfe6c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6ddfe6db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6ddff24d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddff2020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6ddff21b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6ddff2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa6ddff6b20" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6ddff6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa6ddff3020"/>
        <function-ref name="noAck" scoped="" ref="0x7fa6ddff31b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa6ddff3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa6ddff8470" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa6ddff8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa6ddff87f0"/>
        <function-ref name="source" scoped="" ref="0x7fa6ddff8980"/>
        <function-ref name="address" scoped="" ref="0x7fa6ddff8b10"/>
        <function-ref name="destination" scoped="" ref="0x7fa6ddff8ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa6ddff8e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa6ddff6020"/>
        <function-ref name="type" scoped="" ref="0x7fa6ddff61b0"/>
        <function-ref name="setType" scoped="" ref="0x7fa6ddff6340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa6ddff64d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa6ddff6660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa6ddff67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa6ddf8c120" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa6ddf8c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6ddf8c4a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6ddf8c630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6ddf8c7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6ddf8c950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6ddf8cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa6ddf8cd70" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa6ddf8cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6ddf8b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa6ddf91110" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6ddf91110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6ddf914b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6ddf91640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6ddf917d0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6ddf91960"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6ddf91af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa6ddf8ea40" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6ddf8ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6ddf8edc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6ddf8d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6ddf8d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6ddf8d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6ddf8d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6ddf91e70" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6ddf91e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6ddf8f240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa6ddf8d720" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6ddf8d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa6ddf8daa0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa6ddf8dc30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa6ddf8ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa6ddf8f490" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa6ddf8f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa6ddf8f810"/>
        <function-ref name="source" scoped="" ref="0x7fa6ddf8f9a0"/>
        <function-ref name="address" scoped="" ref="0x7fa6ddf8fb30"/>
        <function-ref name="destination" scoped="" ref="0x7fa6ddf8fcc0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa6ddf8fe50"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa6ddf8e020"/>
        <function-ref name="type" scoped="" ref="0x7fa6ddf8e1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fa6ddf8e340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa6ddf8e4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa6ddf8e660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa6ddf8e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa6ddf878d0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6ddf878d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6ddf87c50"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6ddf87de0"/>
        <function-ref name="start" scoped="" ref="0x7fa6ddf86020"/>
        <function-ref name="stop" scoped="" ref="0x7fa6ddf861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6ddf85480" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6ddf85480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fa6de29b0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6ddf85800"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6ddf85990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6ddf85b20"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6ddf85cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6ddf85e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6ddf87280" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6ddf87280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6ddf87600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6ddf86940" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6ddf86940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fa6de29b0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6ddf86cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6ddf82dc0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6ddf82dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6ddf81180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6ddf81310"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6ddf814a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6ddf81630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6ddf817c0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddf81950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6ddf81ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6ddf7e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddf81c70"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6ddf81e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6ddf7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fa6ddf824a0" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fa6ddf824a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fa6de29b0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fa6ddf82820"/>
        <function-ref name="offset" scoped="" ref="0x7fa6ddf829b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fa6ddf82b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa6ddf76810" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6ddf76810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6ddf76b90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6ddf76d20"/>
        <function-ref name="start" scoped="" ref="0x7fa6ddf75020"/>
        <function-ref name="stop" scoped="" ref="0x7fa6ddf751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fa6ddf0fe40" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7fa6ddf0fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6ddf0e1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6ddf0e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fa6ddf61530" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fa6ddf61530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6ddf618b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6ddf61a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fa6ddf46d50" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7fa6ddf46d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6ddf45100"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6ddf45290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6ddf761c0" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6ddf761c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6ddf76540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fa6ddf5e130" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7fa6ddf5e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fa6ddf5e4b0"/>
        <function-ref name="flush" scoped="" ref="0x7fa6ddf5e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fa6ddf11400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7fa6ddf11400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6ddf11780"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6ddf11910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fa6ddf65410" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fa6ddf65410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fa6ddf65790"/>
        <function-ref name="resetSend" scoped="" ref="0x7fa6ddf65920"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fa6ddf65ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fa6ddf65c40"/>
        <function-ref name="putData" scoped="" ref="0x7fa6ddf65dd0"/>
        <function-ref name="putDone" scoped="" ref="0x7fa6ddf6f020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fa6ddf6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6ddf6f430" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6ddf6f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6ddf6f7b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6ddf6f940"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6ddf6fad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6ddf6fc60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6ddf6fdf0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddf6b020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6ddf6b1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6ddf6b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddf6b340"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6ddf6b4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6ddf6b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fa6ddf0a0c0" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fa6ddf0a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6ddf0a440"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6ddf0a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fa6ddf707d0" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fa6ddf707d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fa6ddf70b50"/>
        <function-ref name="nextByte" scoped="" ref="0x7fa6ddf70ce0"/>
        <function-ref name="startSend" scoped="" ref="0x7fa6ddf70e70"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fa6ddf74030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fa6ddf73080" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fa6ddf73080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fa6ddf73400"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fa6ddf73590"/>
        <function-ref name="endPacket" scoped="" ref="0x7fa6ddf73720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fa6dde40c50" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7fa6dde40c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dde3f020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dde3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6dde45830" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dde45830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fa6de29b0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dde45bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dde45d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dde44020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dde441b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dde44340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fa6dde3f480" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7fa6dde3f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dde3f800"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dde3f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dde45110" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dde45110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fa6de29b0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dde454b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fa6dde44760" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7fa6dde44760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fa6de29b0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fa6dde44b00"/>
        <function-ref name="offset" scoped="" ref="0x7fa6dde44c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fa6dde44e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dde42590" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dde42590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dde42910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dde42aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dde42c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dde42dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dde40020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dde401b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dde40340"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dde40980"/>
        <function-ref name="set" scoped="" ref="0x7fa6dde40660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dde404d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dde407f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fa6dde439d0" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fa6dde439d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fa6dde43d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7fa6dde42020"/>
        <function-ref name="startSend" scoped="" ref="0x7fa6dde421b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fa6dde42340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fa6dde430e0" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fa6dde430e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fa6dde43460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fa6dde435f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fa6dde43780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fa6dde30d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa6dde30d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dde390e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa6dde39270"/>
        <function-ref name="receive" scoped="" ref="0x7fa6dde39400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa6dde39590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa6dde39720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa6dde398b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dde39a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fa6dde3db60" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fa6dde3db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fa6dde3a020"/>
        <function-ref name="resetSend" scoped="" ref="0x7fa6dde3a1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fa6dde3a340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fa6dde3a4d0"/>
        <function-ref name="putData" scoped="" ref="0x7fa6dde3a660"/>
        <function-ref name="putDone" scoped="" ref="0x7fa6dde3a7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fa6dde3a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dde39cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dde39cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dde380a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dde38230"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dde383c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dde38550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dde386e0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dde38870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dde38a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dde2d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dde38b90"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dde38d20"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dde2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fa6dde10020" loc="40:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fa6dde10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dde103a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fa6dde10530"/>
        <function-ref name="receive" scoped="" ref="0x7fa6dde106c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fa6dde10850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fa6dde128d0" loc="39:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa6dde128d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dde12c50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa6dde12de0"/>
        <function-ref name="receive" scoped="" ref="0x7fa6dde11020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa6dde111b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa6dde11340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa6dde114d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dde11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa6dde120c0" loc="38:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa6dde120c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dde12440"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dde125d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dd826c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd826c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dd825020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dd8251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fa6dd824440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fa6dd824440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd8247c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fa6dd824950"/>
        <function-ref name="receive" scoped="" ref="0x7fa6dd824ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fa6dd824c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fa6dd822020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6dd822020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa6dd8223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fa6dd825440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa6dd825440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd8257c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa6dd825950"/>
        <function-ref name="receive" scoped="" ref="0x7fa6dd825ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa6dd825c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa6dd825e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa6dd824020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd8241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd826020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd826020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd8263a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd826530"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd8266c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd826850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd8269e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa6ddda7dd0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6ddda7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6ddda9180"/>
        <function-ref name="configure" scoped="" ref="0x7fa6ddda9310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fa6ddda5210" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fa6ddda5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6ddda5590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fa6ddda5720"/>
        <function-ref name="receive" scoped="" ref="0x7fa6ddda58b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fa6ddda5a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fa6ddda3600" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6ddda3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa6ddda3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fa6ddda9b50" loc="43:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa6ddda9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6ddda8020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa6ddda81b0"/>
        <function-ref name="receive" scoped="" ref="0x7fa6ddda8340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa6ddda84d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa6ddda8660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa6ddda87f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6ddda8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa6ddda4370" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa6ddda4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6ddda46f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6ddda4880"/>
        <function-ref name="request" scoped="" ref="0x7fa6ddda4a10"/>
        <function-ref name="granted" scoped="" ref="0x7fa6ddda4ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6ddda4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dddab320" loc="41:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dddab320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dddab6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dddab830"/>
        <function-ref name="request" scoped="" ref="0x7fa6dddab9c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dddabb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dddabce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa6ddd9ebe0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6ddd9ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6ddda2020"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6ddda21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa6ddd13e70" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6ddd13e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6ddd12240"/>
        <function-ref name="configure" scoped="" ref="0x7fa6ddd123d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fa6ddd11890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fa6ddd11890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6ddd11c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fa6ddd11dc0"/>
        <function-ref name="receive" scoped="" ref="0x7fa6ddd10020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fa6ddd101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fa6ddd0f3e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6ddd0f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa6ddd0f780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fa6ddd0fa50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa6ddd0fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa6ddd0fdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa6ddd0e020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa6ddd0e1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa6ddd0e340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa6ddd0e4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa6ddd0e660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa6ddd0e7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa6ddd0e980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa6ddd0eb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa6ddd0eca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa6ddd0ee30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa6ddd0d020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa6ddd0d1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa6ddd0d440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa6ddd0d5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa6ddd0d760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa6ddd0d8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fa6ddd0da80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa6ddd0dc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa6ddd0dda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa6ddd0c020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa6ddd0c1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa6ddd0c340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa6ddd0c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6ddd0c660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa6ddd0c9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa6ddd0cb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa6ddd0cd10"/>
        <function-ref name="tx" scoped="" ref="0x7fa6ddd0b020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa6ddd0b1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa6ddd0b340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa6ddd0b4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa6ddd0b660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa6ddd0b7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fa6ddd0b980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa6ddd0bb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa6ddd0bca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa6ddd0be30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa6ddd0a020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa6ddd0a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fa6ddd12790" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fa6ddd12790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6ddd12b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fa6ddd12cc0"/>
        <function-ref name="receive" scoped="" ref="0x7fa6ddd12e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fa6ddd11020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fa6ddd111b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fa6ddd11340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6ddd114d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa6ddd08020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6ddd08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6ddd08e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6ddd07800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6ddd07340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6ddd07cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa6ddd105b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa6ddd105b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6ddd10950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6ddd10ae0"/>
        <function-ref name="request" scoped="" ref="0x7fa6ddd10c70"/>
        <function-ref name="granted" scoped="" ref="0x7fa6ddd10e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6ddd0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6ddd130d0" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6ddd130d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6ddd13470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6ddd13600"/>
        <function-ref name="request" scoped="" ref="0x7fa6ddd13790"/>
        <function-ref name="granted" scoped="" ref="0x7fa6ddd13920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6ddd13ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa6ddd0a5b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6ddd0a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6ddd0a950"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6ddd0aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6ddd06120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6ddd06120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6ddd064a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6ddd06630"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6ddd067c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6ddd06950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6ddd06ae0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddd06c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6ddd06e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6ddd054d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddd051b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6ddd05020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6ddd05340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fa6ddcf8bd0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa6ddcf8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6ddcf7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa6ddcf96d0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6ddcf96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6ddcf9a50"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6ddcf9be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa6ddd00b60" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6ddd00b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa6ddcfd020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa6ddcfd1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa6ddcfd340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa6ddcfd4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa6ddcfd660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa6ddcfd7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa6ddcfd980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa6ddcfdb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa6ddcfdca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa6ddcfde30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa6ddcfc020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa6ddcfc1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa6ddcfc340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa6ddcfc5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa6ddcfc760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa6ddcfc8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa6ddcfca80"/>
        <function-ref name="isUart" scoped="" ref="0x7fa6ddcfcc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa6ddcfcda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa6ddcfb020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa6ddcfb1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa6ddcfb340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa6ddcfb4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa6ddcfb660"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6ddcfb7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa6ddcfbb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa6ddcfbd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa6ddcfa020"/>
        <function-ref name="tx" scoped="" ref="0x7fa6ddcfa1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa6ddcfa340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa6ddcfa4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa6ddcfa660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa6ddcfa7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa6ddcfa980"/>
        <function-ref name="rx" scoped="" ref="0x7fa6ddcfab10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa6ddcfaca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa6ddcfae30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa6ddcf9020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa6ddcf91b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa6ddcf9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fa6ddcb1800" loc="82:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fa6ddcb1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddcb1b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddcb1d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddcb0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddcb01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddcb0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddcb04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddcb0660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddcb07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddcb0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddcb0b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddcb0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddcb0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddcaf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddcaf2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddcaf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa6ddcef020" loc="76:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa6ddcef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6ddcef3a0"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6ddcef530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fa6ddcaf800" loc="83:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fa6ddcaf800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddcafb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddcafd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddcae020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddcae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddcae340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddcae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddcae660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddcae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddcae980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddcaeb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddcaeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddcaee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddcad020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddcad2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddcad440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fa6ddcad800" loc="84:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fa6ddcad800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddcadb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddcadd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddcac020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddcac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddcac340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddcac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddcac660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddcac7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddcac980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddcacb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddcacca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddcace30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddcab020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddcab2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddcab440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fa6ddcf4360" loc="75:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa6ddcf4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa6ddcf46e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa6ddcf4870"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa6ddcf4a00"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa6ddcf4b90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa6ddcf4d20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa6ddcf3020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa6ddcf31b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa6ddcf3340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa6ddcf34d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa6ddcf3660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa6ddcf37f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa6ddcf3980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa6ddcf3b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa6ddcf3da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa6ddcf2020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa6ddcf21b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa6ddcf2340"/>
        <function-ref name="isUart" scoped="" ref="0x7fa6ddcf24d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa6ddcf2660"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa6ddcf27f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa6ddcf2980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa6ddcf2b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa6ddcf2ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa6ddcf2e30"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6ddcf1020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa6ddcf13b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa6ddcf1540"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa6ddcf16d0"/>
        <function-ref name="tx" scoped="" ref="0x7fa6ddcf1860"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa6ddcf19f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa6ddcf1b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa6ddcf1d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa6ddcf0020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa6ddcf01b0"/>
        <function-ref name="rx" scoped="" ref="0x7fa6ddcf0340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa6ddcf04d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa6ddcf0660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa6ddcf07f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa6ddcf0980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa6ddcf0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6ddcab700" loc="86:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6ddcab700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6ddcaba80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6ddcabc10"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6ddcabda0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6ddcaa020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6ddcaa1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddcaa340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6ddcaa4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6ddcaab10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddcaa660"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6ddcaa7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6ddcaa980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fa6ddcc5bc0" loc="79:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fa6ddcc5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa6ddcec020"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa6ddcec1b0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa6ddcec340"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa6ddcec4d0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa6ddcec660"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa6ddcec7f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa6ddcec980"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa6ddcecb10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6ddcecca0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa6ddcece30"/>
        <function-ref name="getData" scoped="" ref="0x7fa6ddceb020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa6ddceb1b0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa6ddceb340"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa6ddceb5d0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa6ddceb760"/>
        <function-ref name="getIV" scoped="" ref="0x7fa6ddceb8f0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa6ddceba80"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa6ddcebc10"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa6ddcebda0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa6ddcc3020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa6ddcc31b0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa6ddcc3340"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa6ddcc34d0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa6ddcc3660"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa6ddcc37f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa6ddcc3b80"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa6ddcc3d10"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa6ddcc2020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa6ddcc21b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa6ddcc2340"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa6ddcc24d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa6ddcc2660"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa6ddcc27f0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa6ddcc2980"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa6ddcc2b10"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa6ddcc2ca0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa6ddcc2e30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa6ddcc1020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa6ddcc11b0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa6ddcc1340"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa6ddcc14d0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa6ddcc1660"/>
        <function-ref name="setData" scoped="" ref="0x7fa6ddcc17f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa6ddcc1980"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa6ddcc1b10"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa6ddcc1ca0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa6ddcc1e30"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa6ddcc0020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa6ddcc01b0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa6ddcc0740"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa6ddcc08d0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa6ddcc0a60"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa6ddcc0bf0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa6ddcc0d80"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa6ddcbf020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa6ddcbf1b0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa6ddcbf340"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa6ddcbf4d0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa6ddcbf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fa6ddcbd800" loc="81:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fa6ddcbd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddcbdb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddcbdd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddcb2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddcb21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddcb2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddcb24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddcb2660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddcb27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddcb2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddcb2b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddcb2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddcb2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddcb1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddcb12b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddcb1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa6ddcef970" loc="77:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa6ddcef970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6ddcefcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fa6ddcb3860" loc="80:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fa6ddcb3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddcb3be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddcb3d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddcbe020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddcbe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddcbe340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddcbe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddcbe660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddcbe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddcbe980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddcbeb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddcbeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddcbee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddcbd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddcbd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddcbd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fa6ddc27810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fa6ddc27810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc27b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc27d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc26020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc26340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc26660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc267f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc26980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc26b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc26ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc26e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc25020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc252b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc25440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fa6ddc12810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fa6ddc12810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc12b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc12d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc11020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc11340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc11660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc117f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc11980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc11b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc11ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc11e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc10020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc102b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc10440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fa6ddbc9ca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fa6ddbc9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbc80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbc8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbc83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbc8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbc86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbc8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbc8a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbc8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbc8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbc7020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbc71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbc7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbc74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbc7760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbc78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fa6ddba4cb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fa6ddba4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddba30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddba3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddba33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddba3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddba36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddba3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddba3a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddba3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddba3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddba2020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddba21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddba2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddba24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddba2760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddba28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fa6ddbc7cc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fa6ddbc7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbc60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbc6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbc63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbc6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbc66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbc6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbc6a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbc6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbc6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbc5020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbc51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbc5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbc54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbc5760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbc58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fa6ddc0e810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fa6ddc0e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc0eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc0ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc0d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc0d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc0d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc0d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc0d660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc0d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc0d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc0db10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc0dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc0de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc0c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc0c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc0c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fa6ddbfa9a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fa6ddbfa9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbfad20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbf9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbf91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbf9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbf94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbf9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbf97f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbf9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbf9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbf9ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbf9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbf8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbf81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbf8440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbf85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fa6ddbe59a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fa6ddbe59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbe5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbe4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbe41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbe4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbe44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbe4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbe47f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbe4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbe4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbe4ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbe4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbe3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbe31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbe3440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbe35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fa6ddbd59a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fa6ddbd59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbd5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbd4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbd41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbd4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbd44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbd4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbd47f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbd4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbd4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbd4ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbd4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbd3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbd31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbd3440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbd35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fa6ddbc0cc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fa6ddbc0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbbf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbbf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbbf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbbf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbbf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbbf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbbfa00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbbfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbbfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbbe020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbbe1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbbe340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbbe4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbbe760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbbe8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fa6ddbb0cb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fa6ddbb0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbaf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbaf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbaf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbaf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbaf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbaf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbafa00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbafb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbafd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbae020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbae760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fa6ddb9ccc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fa6ddb9ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb9b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb9b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb9b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb9b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb9b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb9b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb9ba00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb9bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb9bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb9a020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb9a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb9a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb9a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb9a760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb9a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fa6ddc20810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fa6ddc20810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc20b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc20d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc1f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc1f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc1f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc1f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc1f660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc1f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc1f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc1fb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc1fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc1fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc1e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc1e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc1e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fa6ddbbecc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fa6ddbbecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbbd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbbd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbbd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbbd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbbd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbbd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbbda00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbbdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbbdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbbc020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbbc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbbc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbbc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbbc760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbbc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fa6ddc1c810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fa6ddc1c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc1cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc1cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc1b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc1b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc1b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc1b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc1b660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc1b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc1b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc1bb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc1bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc1be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc1a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc1a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc1a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fa6ddc08810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fa6ddc08810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc08b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc08d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc07020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc07340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc07660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc077f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc07980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc07b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc07ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc07e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc06020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc062b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc06440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fa6ddbf49a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fa6ddbf49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbf4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbf2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbf21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbf2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbf24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbf2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbf27f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbf2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbf2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbf2ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbf2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbf1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbf11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbf1440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbf15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fa6ddbdf9a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fa6ddbdf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbdfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbde020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbde1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbde340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbde4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbde660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbde7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbde980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbdeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbdeca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbdee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbdd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbdd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbdd440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbdd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fa6ddbcf9a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fa6ddbcf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbcfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbce020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbce1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbce340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbce4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbce7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbce980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbceb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbceca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbcee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbcd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbcd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbcd440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbcd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fa6ddc2b810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fa6ddc2b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc2bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc2bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc2a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc2a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc2a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc2a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc2a660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc2a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc2a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc2ab10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc2aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc2ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc29020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc292b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc29440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fa6ddc16810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fa6ddc16810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc16c90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc16e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc15020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc151b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc15340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc154d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc15660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc157f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc15980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc15b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc15ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc15e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc14020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc142b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc14440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fa6ddc02810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fa6ddc02810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc02b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc02d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc01020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc01340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc01660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc017f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc01980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc01b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc01ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc01e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc00020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc002b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc00440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fa6ddbcbcc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fa6ddbcbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbca0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbca230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbca3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbca550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbca6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbca870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbcaa00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbcab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbcad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbc9020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbc91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbc9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbc94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbc9760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbc98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fa6ddbaacb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fa6ddbaacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddba90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddba9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddba93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddba9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddba96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddba9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddba9a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddba9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddba9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddba8020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddba81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddba8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddba84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddba8760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddba88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fa6ddb9ecb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fa6ddb9ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb9d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb9d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb9d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb9d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb9d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb9d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb9da00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb9db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb9dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb9c020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb9c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb9c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb9c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb9c760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb9c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fa6ddbb6cc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fa6ddbb6cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbb50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbb5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbb53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbb5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbb56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbb5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbb5a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbb5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbb5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbb4020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbb41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbb4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbb44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbb4760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbb48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fa6ddbfe810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fa6ddbfe810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbfed90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbfd020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbfd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbfd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbfd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbfd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbfd7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbfd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbfdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbfdca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbfde30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbfc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbfc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbfc440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbfc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fa6ddbe99a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fa6ddbe99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbe9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbe8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbe81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbe8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbe84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbe8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbe87f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbe8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbe8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbe8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbe8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbe7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbe71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbe7440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbe75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fa6ddbd99a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fa6ddbd99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbd9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbd8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbd81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbd8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbd84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbd8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbd87f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbd8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbd8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbd8ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbd8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbd7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbd71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbd7440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbd75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fa6ddba8cb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fa6ddba8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddba70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddba7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddba73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddba7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddba76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddba7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddba7a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddba7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddba7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddba6020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddba61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddba6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddba64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddba6760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddba68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fa6ddbbccb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fa6ddbbccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbbb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbbb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbbb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbbb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbbb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbbb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbbba00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbbbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbbbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbba020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbba760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fa6ddc25810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fa6ddc25810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc25b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc25d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc24020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc24340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc24660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc247f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc24980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc24b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc24ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc24e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc23020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc232b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc23440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fa6ddc10810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fa6ddc10810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc10b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc10d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc0f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc0f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc0f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc0f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc0f660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc0f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc0f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc0fb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc0fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc0fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc0e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc0e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc0e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fa6ddbdd9a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fa6ddbdd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbddd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbdc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbdc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbdc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbdc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbdc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbdc7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbdc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbdcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbdcca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbdce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbdb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbdb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbdb440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbdb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fa6ddc0c810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fa6ddc0c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc0cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc0cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc0b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc0b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc0b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc0b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc0b660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc0b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc0b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc0bb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc0bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc0be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc0a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc0a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc0a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fa6ddbf89a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fa6ddbf89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbf8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbf7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbf71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbf7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbf74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbf7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbf77f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbf7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbf7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbf7ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbf7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbf6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbf61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbf6440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbf65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fa6ddbe39a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fa6ddbe39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbe3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbe2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbe21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbe2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbe24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbe2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbe27f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbe2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbe2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbe2ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbe2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbe1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbe11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbe1440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbe15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fa6ddbd39a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fa6ddbd39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbd3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbd2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbd21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbd2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbd24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbd2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbd27f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbd2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbd2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbd2ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbd2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbd1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbd11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbd1440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbd15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fa6ddbb8cc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fa6ddbb8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbb70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbb7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbb73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbb7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbb76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbb7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbb7a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbb7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbb7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbb6020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbb61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbb6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbb64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbb6760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbb68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fa6ddc31800" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fa6ddc31800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc31b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc31d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc2e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc2e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc2e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc2e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc2e660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc2e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc2e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc2eb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc2eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc2ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc2d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc2d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc2d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fa6ddc1a810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fa6ddc1a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc1ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc1ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc19020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc19340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc19660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc197f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc19980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc19b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc19ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc19e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc18020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc182b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc18440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fa6ddc06810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fa6ddc06810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc06b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc06d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc05020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc05340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc05660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc057f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc05980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc05b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc05ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc05e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc04020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc042b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc04440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fa6ddbf19a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fa6ddbf19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbf1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbf0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbf01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbf0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbf04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbf0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbf07f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbf0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbf0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbf0ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbf0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbef020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbef1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbef440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbef5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fa6ddbb4cc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fa6ddbb4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbb30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbb3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbb33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbb3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbb36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbb3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbb3a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbb3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbb3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbb2020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbb21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbb2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbb24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbb2760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbb28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fa6ddbaecb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fa6ddbaecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbad230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbad3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbad550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbad6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbad870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbada00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbadb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbadd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbac020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbac760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fa6ddba2cb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fa6ddba2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddba10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddba1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddba13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddba1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddba16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddba1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddba1a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddba1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddba1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddba0020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddba01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddba0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddba04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddba0760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddba08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fa6ddbed9a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fa6ddbed9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbedd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbec020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbec340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbec4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbec660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbec7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbec980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbecb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbecca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbece30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbeb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbeb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbeb440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbeb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fa6ddbb2cc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fa6ddbb2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbb10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbb1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbb13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbb1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbb16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbb1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbb1a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbb1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbb1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbb0020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbb01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbb0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbb04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbb0760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbb08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fa6ddc29810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fa6ddc29810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc29b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc29d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc28020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc28340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc28660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc287f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc28980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc28b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc28ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc28e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc27020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc272b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc27440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fa6ddc14810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fa6ddc14810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc14b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc14d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc13020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc13340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc13660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc137f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc13980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc13b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc13ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc13e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc12020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc122b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc12440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fa6ddc00810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fa6ddc00810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc00b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc00d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbff020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbff340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbff660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbff7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbff980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbffb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbffca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbffe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbfe020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbfe2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbfe440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fa6ddbbacc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fa6ddbbacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbb90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbb9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbb93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbb9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbb96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbb9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbb9a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbb9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbb9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbb8020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbb81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbb8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbb84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbb8760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbb88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fa6ddba6cb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fa6ddba6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddba50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddba5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddba53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddba5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddba56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddba5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddba5a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddba5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddba5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddba4020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddba41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddba4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddba44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddba4760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddba48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fa6ddbfc9a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fa6ddbfc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbfcd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbfb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbfb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbfb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbfb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbfb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbfb7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbfb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbfbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbfbca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbfbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbfa020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbfa1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbfa440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbfa5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fa6ddbe79a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fa6ddbe79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbe7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbe6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbe61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbe6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbe64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbe6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbe67f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbe6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbe6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbe6ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbe6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbe5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbe51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbe5440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbe55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fa6ddbd79a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fa6ddbd79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbd7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbd6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbd61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbd6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbd64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbd6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbd67f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbd6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbd6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbd6ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbd6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbd5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbd51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbd5440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbd55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fa6ddc23810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fa6ddc23810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc23b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc23d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc21020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc21340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc21660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc217f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc21980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc21b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc21ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc21e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc20020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc202b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc20440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fa6ddbdb9a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fa6ddbdb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbdbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbda020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbda1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbda340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbda4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbda660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbda7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbda980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbdab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbdaca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbdae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbd9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbd91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbd9440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbd95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fa6ddc1e810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fa6ddc1e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc1eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc1ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc1d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc1d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc1d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc1d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc1d660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc1d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc1d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc1db10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc1dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc1de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc1c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc1c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc1c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fa6ddc0a810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fa6ddc0a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc0ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc0ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc09020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc09340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc09660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc097f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc09980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc09b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc09ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc09e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc08020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc082b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc08440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fa6ddbf69a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fa6ddbf69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbf6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbf5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbf51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbf5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbf54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbf5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbf57f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbf5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbf5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbf5ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbf5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbf4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbf41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbf4440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbf45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fa6ddbe19a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fa6ddbe19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbe1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbe0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbe01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbe0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbe04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbe0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbe07f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbe0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbe0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbe0ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbe0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbdf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbdf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbdf440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbdf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fa6ddbd19a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fa6ddbd19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbd1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbd0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbd01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbd0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbd04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbd0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbd07f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbd0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbd0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbd0ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbd0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbcf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbcf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbcf440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbcf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fa6ddc2d810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fa6ddc2d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc2db90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc2dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc2c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc2c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc2c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc2c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc2c660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc2c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc2c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc2cb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc2cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc2ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc2b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc2b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc2b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fa6ddc18810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fa6ddc18810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc18b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc18d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc17020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc171b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc17340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc174d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc17660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc177f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc17980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc17b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc17ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc17e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc16020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc162b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc16440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fa6ddc04810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fa6ddc04810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddc04b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddc04d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddc03020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddc031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddc03340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddc034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddc03660"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddc037f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddc03980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddc03b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddc03ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddc03e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddc02020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddc022b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddc02440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fa6ddbef9a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fa6ddbef9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbefd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbee020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbee4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbee7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbee980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbeeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbeeca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbeee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbed020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbed1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbed440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbed5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fa6ddbc2ca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fa6ddbc2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbc10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbc1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbc13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbc1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbc16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbc1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbc1a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbc1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbc1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbc0020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbc01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbc0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbc04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbc0760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbc08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fa6ddbaccb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fa6ddbaccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbab230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbab3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbab550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbab6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbab870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbaba00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbabb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbabd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbaa020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbaa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbaa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbaa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbaa760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbaa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fa6ddbc5cc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fa6ddbc5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbc30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbc3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbc33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbc3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbc36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbc3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbc3a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbc3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbc3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbc2020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbc21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbc2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbc24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbc2760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbc28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fa6ddbeb9a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fa6ddbeb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbebd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbea020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbea1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbea340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbea4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbea660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbea7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbea980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbeab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbeaca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbeae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbe9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbe91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbe9440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbe95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fa6ddba0cb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fa6ddba0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb9f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb9f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb9f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb9f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb9f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb9f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb9fa00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb9fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb9fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb9e020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb9e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb9e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb9e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb9e760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb9e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fa6ddb9acc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fa6ddb9acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb990a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb99230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb993c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb99550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb996e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb99870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb99a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb99b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb99d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb98020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb981b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb98340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb984d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb98760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb988f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fa6ddbcd9f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fa6ddbcd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddbcc1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddbcc350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddbcc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddbcc670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddbcc800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddbcc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddbccb20"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddbcccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddbcce40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddbcb020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddbcb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddbcb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddbcb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddbcb760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddbcb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb95d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb95d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb6d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb6d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb6d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb6d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb6d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb6d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb6da40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb6dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb6dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb6c020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb6c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb6c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb6c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb6c760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb6c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb69740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb69740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb69ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb69c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb69de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb68020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb681b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb68340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb684d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb68660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb68980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb68b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb68ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb68e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb67120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb64100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb64100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb64480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb64610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb647a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb64930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb64ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb64c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb64de0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb63020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb631b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb63340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb634d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb63660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb637f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb63a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb63c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb60d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb60d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb5f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb5f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb5f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb5f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb5f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb5f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb5fa40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb5fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb5fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb5e020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb5e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb5e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb5e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb5e760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb5e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb5b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb5b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb5bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb5bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb5bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb5a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb5a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb5a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb5a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb5a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb5a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb5a980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb5ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb5aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb5ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb59120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb56100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb56100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb56480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb56610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb567a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb56930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb56ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb56c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb56de0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb55020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb551b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb55340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb554d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb55660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb557f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb55a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb55c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb52d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb52d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb510e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb51270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb51400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb51590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb51720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb518b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb51a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb51bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb51d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb50020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb50340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb50760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb4d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb4d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb4dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb4dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb4dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb4b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb4b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb4b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb4b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb4b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb4b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb4b980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb4bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb4bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb4be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb4a120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb47100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb47100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb47480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb47610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb477a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb47930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb47ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb47c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb47de0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb46020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb461b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb46340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb464d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb46660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb467f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb46a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb46c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb43d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb43d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb420e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb42270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb42400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb42590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb42720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb428b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb42a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb42bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb42d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb41020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb411b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb41340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb414d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb41760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb418f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb3e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb3e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb3eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb3ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb3ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb3d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb3d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb3d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb3d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb3d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb3d980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb3db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb3dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb3de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb3c120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb3c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb39100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb39100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb39480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb39610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb397a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb39930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb39ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb39c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb39de0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb38020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb38340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb38660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb38a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb38c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb35d80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb35d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb34180"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb34310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb344a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb34630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb347c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb34950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb34ae0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb34c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb34e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb33020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb331b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb33340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb334d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb33760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb338f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb30740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb30740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb30ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb30c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb30de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb2f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb2f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb2f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb2f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb2f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb2f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb2f980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb2fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb2fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb2fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb2e120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb2e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb2b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb2b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb2b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb2b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb2b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb2b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb2bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb2bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb2bde0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb2a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb2a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb2a340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb2a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb2a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb2a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb2aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb2ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb26d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb26d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb250e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb25270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb25400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb25590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb25720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb258b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb25a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb25bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb25d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb24020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb241b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb24340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb244d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb24760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb248f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb21740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb21740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb21ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb21c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb21de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb20020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb201b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb20340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb204d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb20660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb207f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb20980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb20b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb20ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb20e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb1f120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb1f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb1c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb1c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb1c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb1c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb1c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb1c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb1cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb1cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb1cde0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb1b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb1b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb1b340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb1b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb1b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb1b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb1ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb1bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb18d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb18d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb170e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb17270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb17400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb17590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb17720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb178b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb17a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb17bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb17d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb16020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb16340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb16760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb13740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb13740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb13ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb13c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb13de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb12020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb121b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb12340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb124d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb12660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb127f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb12980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb12b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb12ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb12e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb11120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb0e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb0e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb0e480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb0e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb0e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb0e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb0eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb0ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb0ede0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb0d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb0d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb0d340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb0d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb0d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb0d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb0da80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb0dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb0ad10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb0ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb090e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb09270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb09400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb09590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb09720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb098b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb09a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb09bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb09d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb08020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb08340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb08760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddb05740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddb05740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddb05ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddb05c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddb05de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddb03020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddb031b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddb03340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddb034d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddb03660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddb037f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddb03980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddb03b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddb03ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddb03e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddb02120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddb022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddaff100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddaff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddaff480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddaff610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddaff7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddaff930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddaffac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddaffc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddaffde0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddafe020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddafe1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddafe340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddafe4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddafe660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddafe7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddafea80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddafec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddafbe60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddafbe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddafa210"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddafa3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddafa530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddafa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddafa850"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddafa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddafab70"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddafad00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddaf9020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddaf91b0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddaf9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddaf94d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddaf9660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddaf98f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddaf9a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddaf69f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddaf69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddaf6d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddaf5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddaf51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddaf5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddaf54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddaf5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddaf57f0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddaf5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddaf5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddaf5ca0"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddaf5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddaf4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddaf41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddaf4440"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddaf45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddaf1460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddaf1460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddaf17e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddaf1970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddaf1b00"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddaf1c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddaf1e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddaf0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddaf01b0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddaf0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddaf04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddaf0660"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddaf07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddaf0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddaf0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddaf0da0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddaef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddaede00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddaede00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddaec1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddaec350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddaec4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddaec670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddaec800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddaec990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddaecb20"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddaeccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddaece40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddaeb020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddaeb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddaeb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddaeb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddaeb760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddaeb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddae8740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddae8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddae8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddae8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddae8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddae7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddae71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddae7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddae74d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddae7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddae77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddae7980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddae7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddae7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddae7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddae6120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddae62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddae3100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddae3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddae3480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddae3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddae37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddae3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddae3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddae3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddae3de0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddae2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddae21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddae2340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddae24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddae2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddae27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddae2a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddae2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddadfd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddadfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddadd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddadd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddadd400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddadd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddadd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddadd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddadda40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddaddbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddaddd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddadc020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddadc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddadc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddadc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddadc760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddadc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddad9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddad9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddad9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddad9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddad9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddad8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddad81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddad8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddad84d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddad8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddad87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddad8980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddad8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddad8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddad8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddad7120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddad72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddad4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddad4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddad4480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddad4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddad47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddad4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddad4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddad4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddad4de0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddad3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddad31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddad3340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddad34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddad3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddad37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddad3a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddad3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddad0d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddad0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddacf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddacf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddacf400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddacf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddacf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddacf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddacfa40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddacfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddacfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddace020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddace1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddace340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddace4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddace760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddace8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddacb740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddacb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddacbac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddacbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddacbde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddaca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddaca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddaca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddaca4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddaca660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddaca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddaca980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddacab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddacaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddacae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddac9120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddac92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddac6100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddac6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddac6480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddac6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddac67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddac6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddac6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddac6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddac6de0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddac5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddac51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddac5340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddac54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddac5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddac57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddac5a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddac5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddac2d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddac2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddac10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddac1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddac1400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddac1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddac1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddac18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddac1a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddac1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddac1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddac0020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddac01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddac0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddac04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddac0760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddac08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddabd740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddabd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddabdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddabdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddabdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddabc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddabc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddabc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddabc4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddabc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddabc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddabc980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddabcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddabcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddabce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddabb120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddabb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddab7100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddab7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddab7480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddab7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddab77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddab7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddab7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddab7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddab7de0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddab6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddab61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddab6340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddab64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddab6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddab67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddab6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddab6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddab3d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddab3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddab20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddab2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddab2400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddab2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddab2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddab28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddab2a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddab2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddab2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddab1020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddab11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddab1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddab14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddab1760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddab18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddaae740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddaae740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddaaeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddaaec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddaaede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddaad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddaad1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddaad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddaad4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddaad660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddaad7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddaad980"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddaadb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddaadca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddaade30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddaac120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddaac2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddaa9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddaa9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddaa9480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddaa9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddaa97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddaa9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddaa9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddaa9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddaa9de0"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddaa8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddaa81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddaa8340"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddaa84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddaa8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddaa87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddaa8a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddaa8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddaa5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddaa5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddaa40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddaa4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddaa4400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6ddaa4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6ddaa4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6ddaa48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6ddaa4a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6ddaa4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6ddaa4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6ddaa3020"/>
        <function-ref name="set" scoped="" ref="0x7fa6ddaa31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6ddaa3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6ddaa34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6ddaa3760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6ddaa38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6ddaa0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6ddaa0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6ddaa0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6ddaa0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6ddaa0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dda9f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dda9f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dda9f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dda9f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dda9f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dda9f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dda9f980"/>
        <function-ref name="set" scoped="" ref="0x7fa6dda9fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dda9fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dda9fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dda9e120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dda9e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6dda9b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6dda9b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dda9b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dda9b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dda9b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dda9b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dda9bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dda9bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dda9bde0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dda9a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dda9a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dda9a340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dda9a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dda9a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dda9a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dda9aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dda9ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6dda97d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6dda97d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dda950e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dda95270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dda95400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dda95590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dda95720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dda958b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dda95a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6dda95bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dda95d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dda94020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dda941b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dda94340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dda944d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dda94760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dda948f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6dda91740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6dda91740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dda91ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dda91c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dda91de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dda90020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dda901b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dda90340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dda904d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dda90660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dda907f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dda90980"/>
        <function-ref name="set" scoped="" ref="0x7fa6dda90b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dda90ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dda90e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dda8f120"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dda8f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa6dda8c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa6dda8c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dda8c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dda8c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dda8c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dda8c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dda8cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dda8cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dda8cde0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dda8b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dda8b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dda8b340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dda8b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dda8b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dda8b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dda8ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dda8bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa6dda1ed20" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dda1ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dda1bb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dda1a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dda1a090"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dda1aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fa6dda18d90" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa6dda18d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dda15bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dda14590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dda140d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dda14a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa6dda00020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dda00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dda003a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dda00530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dda006c0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dda00850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dda009e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dda00b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dda00d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd9ff020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd9ff1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6dd9ff340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6dd9ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa6dda12e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dda12e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dda02ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dda01670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dda011b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dda01b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fa6dd9fc020" loc="47:../../../tos/platforms/shimmer2r/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dd9fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dd9fc3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dd9fc530"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dd9fc6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dd9fc850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dd9fc9e0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9fcb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dd9fcd00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dd9fb4d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9fb020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dd9fb1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dd9fb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fa6dd9f5060" loc="51:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fa6dd9f5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9f53e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9f5570"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9f5700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9f5890"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9f5a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9f5bb0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9f5d40"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dd9f8470" loc="47:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dd9f8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dd9f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fa6dd9f4340" loc="52:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fa6dd9f4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9f46c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9f4850"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9f49e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9f4b70"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9f4d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9ee020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9ee1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fa6dd9f8a70" loc="48:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dd9f8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dd9f8df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dd9f7020"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dd9f71b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dd9f7340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dd9f74d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9f7660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dd9f77f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dd9f7e30"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9f7980"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dd9f7b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dd9f7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fa6dd9ee660" loc="53:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fa6dd9ee660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9ee9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9eeb70"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9eed00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9ed020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9ed1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9ed340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9ed4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fa6dd9f9b10" loc="42:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fa6dd9f9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9d2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9d21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9d2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9d24d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9d2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9d27f0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9d2980"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9d2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fa6dd9d2e70" loc="43:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fa6dd9d2e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9d1220"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9d13b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9d1540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9d16d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9d1860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9d19f0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9d1b80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9d1d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fa6dd9cf2e0" loc="45:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dd9cf2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dd9cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fa6dd9d00f0" loc="44:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fa6dd9d00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9d0470"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9d0600"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9d0790"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9d0920"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9d0ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9d0c40"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9d0dd0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd9bb2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd9bb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9bb670"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9bb800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd9bb990"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9bbb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9bbcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd9bbe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9ba020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9ba1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd9ba340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd9ba4d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9ba660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd9ba7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd9ba980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd9bac10"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9bada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd9cc020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd9cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9cc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9cc530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9cc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9cc850"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9cc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9ccb70"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9ccd00"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd9b6de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd9b6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9b5180"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9b5310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd9b54a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9b5630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9b57c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd9b5950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9b5ae0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9b5c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd9b5e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd9b4020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9b41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd9b4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd9b44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd9b4760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd9b7b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd9b7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9b6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9b61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9b6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9b64d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9b6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9b67f0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9b6980"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9b6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd9b1930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd9b1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9b1cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9b1e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd9b0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9b01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9b0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd9b04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9b0660"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9b07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd9b0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd9b0b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9b0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd9b0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd9af020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd9af2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9af440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd9b2710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd9b2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd9b2a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd9b2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd9b2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd9b1020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd9b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd9b1340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd9b14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd9b1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dc8e1020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc8e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dc8e13a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dc8e1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fa6dc8da440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa6dc8da440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dc8da7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa6dc8d3760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc8d3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dc8d3ae0"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dc8d3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fa6dc8daa50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa6dc8daa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa6dc8dadd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa6dc8d9020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa6dc8d91b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa6dc8d9340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa6dc8d94d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa6dc8d9660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa6dc8d97f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa6dc8d9980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dc8d9b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa6dc8d9ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fa6dc8d9e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa6dc8d8020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa6dc8d81b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa6dc8d8440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa6dc8d85d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fa6dc8d8760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa6dc8d88f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa6dc8d8a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa6dc8d8c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa6dc8d8da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa6dc8d7020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa6dc8d71b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa6dc8d7340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa6dc8d74d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa6dc8d7660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa6dc8d79f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa6dc8d7b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa6dc8d7d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa6dc8d6020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa6dc8d61b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa6dc8d6340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa6dc8d64d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa6dc8d6660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa6dc8d67f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa6dc8d6980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa6dc8d6b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa6dc8d6ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa6dc8d6e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa6dc8d5020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa6dc8d51b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa6dc8d5340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa6dc8d54d0"/>
        <function-ref name="setData" scoped="" ref="0x7fa6dc8d5660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa6dc8d57f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa6dc8d5980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa6dc8d5b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa6dc8d5ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa6dc8d5e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa6dc8d4020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa6dc8d45b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa6dc8d4740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa6dc8d48d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa6dc8d4a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa6dc8d4bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa6dc8d4d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa6dc8d3020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa6dc8d31b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa6dc8d3340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa6dc8d34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa6dc8dbc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6dc8dbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dc8da020"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dc8da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dc8e2340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dc8e2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dc8e26c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dc8e2850"/>
        <function-ref name="request" scoped="" ref="0x7fa6dc8e29e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dc8e2b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dc8e2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa6dc8df020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6dc8df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa6dc8df3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa6dc8df530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa6dc8df6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa6dc8df850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa6dc8df9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa6dc8dfb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa6dc8dfd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa6dc8de020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa6dc8de1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa6dc8de340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa6dc8de4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa6dc8de660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa6dc8de7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa6dc8dea80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa6dc8dec10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa6dc8deda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa6dc8dd020"/>
        <function-ref name="isUart" scoped="" ref="0x7fa6dc8dd1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa6dc8dd340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa6dc8dd4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa6dc8dd660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa6dc8dd7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa6dc8dd980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa6dc8ddb10"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dc8ddca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa6dc8dc220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa6dc8dc3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa6dc8dc540"/>
        <function-ref name="tx" scoped="" ref="0x7fa6dc8dc6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa6dc8dc860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa6dc8dc9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa6dc8dcb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa6dc8dcd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa6dc8db020"/>
        <function-ref name="rx" scoped="" ref="0x7fa6dc8db1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa6dc8db340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa6dc8db4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa6dc8db660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa6dc8db7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa6dc8db980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa6dc8e17c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc8e17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dc8e1b40"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dc8e1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dd9822c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd9822c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dd982640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dd9827d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa6dd9818a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd9818a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dd981c20"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dd981db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa6dd9864d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd9864d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd986850"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd9869e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd983020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd9833a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd983530"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd9836c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd983850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd9839e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa6dd9843f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa6dd9843f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd984770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa6dd982ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd982ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dd982e50"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dd981020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa6dd96cbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd96cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dd96b020"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dd96b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa6dd97fd60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd97fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd97e180"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd97e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fa6dd96c5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fa6dd96c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd96c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa6dd97e710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa6dd97e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd97eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fa6dd97ed80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fa6dd97ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd96c180"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd96c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dd8f2020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd8f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dd8f23c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dd8f2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa6dd8f0cd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd8f0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dd8ef0a0"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dd8ef230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa6dd8f27a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dd8f27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd8f2b20"/>
        <function-ref name="requested" scoped="" ref="0x7fa6dd8f2cb0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd8f2e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd8f0020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dd8f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd8f3210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd8f3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd8f35b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd8f3740"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd8f38d0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd8f3a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd8f3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa6dd8f0400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd8f0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dd8f0780"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dd8f0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dc50be50" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dc50be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dc50a210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa6dc50a4a0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa6dc50a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa6dc50a820"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa6dc50a9b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa6dc50ab40"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa6dc50acd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dc506530" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc506530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dc5068d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dc506a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa6dc504270" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc504270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dc504610"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dc5047a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa6dc504a30" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa6dc504a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa6dc504db0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa6dc503020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa6dc5031b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa6dc503340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa6dc506cb0" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dc506cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dc5050a0"/>
        <function-ref name="requested" scoped="" ref="0x7fa6dc505230"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dc5053c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dc505550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dc5056e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dc503590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dc503590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dc503910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dc503aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dc503c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dc503dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dc502020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dc5021b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dc502340"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dc502980"/>
        <function-ref name="set" scoped="" ref="0x7fa6dc502660"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dc5024d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dc5027f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dc507740" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dc507740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dc507ae0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dc507c70"/>
        <function-ref name="request" scoped="" ref="0x7fa6dc507e00"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dc506020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dc5061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa6dc505930" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc505930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dc505cb0"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dc505e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa6dc502c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fa6dc502c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dc501020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dc5011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fa6dd8e9d70" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa6dd8e9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa6dd8e6180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa6dd8e6310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa6dd8e64a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa6dd8e6630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa6dd8e67c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa6dd8e6950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa6dd8e6ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa6dd8e6c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dd8e6e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa6dd8e5020"/>
        <function-ref name="getData" scoped="" ref="0x7fa6dd8e51b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa6dd8e5340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa6dd8e54d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa6dd8e5760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa6dd8e58f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fa6dd8e5a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa6dd8e5c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa6dd8e5da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa6dd8e4020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa6dd8e41b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa6dd8e4340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa6dd8e44d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa6dd8e4660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa6dd8e47f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa6dd8e4980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa6dd8e4d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa6dd8e3020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa6dd8e31b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa6dd8e3340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa6dd8e34d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa6dd8e3660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa6dd8e37f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa6dd8e3980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa6dd8e3b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa6dd8e3ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa6dd8e3e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa6dd8e2020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa6dd8e21b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa6dd8e2340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa6dd8e24d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa6dd8e2660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa6dd8e27f0"/>
        <function-ref name="setData" scoped="" ref="0x7fa6dd8e2980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa6dd8e2b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa6dd8e2ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa6dd8e2e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa6dd8e1020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa6dd8e11b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa6dd8e1340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa6dd8e18d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa6dd8e1a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa6dd8e1bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa6dd8e1d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa6dd8e0020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa6dd8e01b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa6dd8e0340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa6dd8e04d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa6dd8e0660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa6dd8e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fa6dd8d6700" loc="41:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fa6dd8d6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa6dd8d6a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa6dd8d6c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa6dd8d6da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa6dd8d5020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa6dd8d51b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa6dd8d5340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa6dd8d54d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa6dd8d5660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa6dd8d57f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa6dd8d5980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa6dd8d5b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa6dd8d5ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa6dd8d5e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa6dd8d4120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa6dd8d42b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa6dd8d4440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa6dd8d45d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fa6dd8d4760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa6dd8d48f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa6dd8d4a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa6dd8d4c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa6dd8d4da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa6dd8d3020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa6dd8d31b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dd8d3340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa6dd8d36d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa6dd8d3860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa6dd8d39f0"/>
        <function-ref name="tx" scoped="" ref="0x7fa6dd8d3b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa6dd8d3d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa6dd8d2020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa6dd8d21b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa6dd8d2340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa6dd8d24d0"/>
        <function-ref name="rx" scoped="" ref="0x7fa6dd8d2660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa6dd8d27f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa6dd8d2980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa6dd8d2b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa6dd8d2ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa6dd8d2e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fa6dd8cf1f0" loc="43:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fa6dd8cf1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd8cf570"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd8cf700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd8cf890"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd8cfa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd8cfbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd8cfd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd8ce020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd8ce1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd8ce340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd8ce4d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd8ce660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd8ce7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd8ce980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd8cec10"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd8ceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fa6dd8df940" loc="39:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fa6dd8df940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa6dd8dfcc0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa6dd8dfe50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa6dd8dc020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa6dd8dc1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa6dd8dc340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa6dd8dc4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa6dd8dc660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa6dd8dc7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dd8dc980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa6dd8dcb10"/>
        <function-ref name="getData" scoped="" ref="0x7fa6dd8dcca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa6dd8dce30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa6dd8db020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa6dd8db2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa6dd8db440"/>
        <function-ref name="getIV" scoped="" ref="0x7fa6dd8db5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa6dd8db760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa6dd8db8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa6dd8dba80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa6dd8dbc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa6dd8dbda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa6dd8da020"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa6dd8da1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa6dd8da340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa6dd8da4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa6dd8da860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa6dd8da9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa6dd8dab80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa6dd8dad10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa6dd8d9020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa6dd8d91b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa6dd8d9340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa6dd8d94d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa6dd8d9660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa6dd8d97f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa6dd8d9980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa6dd8d9b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa6dd8d9ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa6dd8d9e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa6dd8d8020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa6dd8d81b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa6dd8d8340"/>
        <function-ref name="setData" scoped="" ref="0x7fa6dd8d84d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa6dd8d8660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa6dd8d87f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa6dd8d8980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa6dd8d8b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa6dd8d8ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa6dd8d8e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa6dd8d7420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa6dd8d75b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa6dd8d7740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa6dd8d78d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa6dd8d7a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa6dd8d7bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa6dd8d7d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa6dd8d6020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa6dd8d61b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa6dd8d6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fa6dd8d1250" loc="42:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fa6dd8d1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd8d15d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd8d1760"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd8d18f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd8d1a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd8d1c10"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd8d1da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd8d0020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd8d01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd8d0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd8d04d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd8d0660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd8d07f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd8d0980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd8d0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd8d0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fa6dd81e920" loc="37:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fa6dd81e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa6dd81eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa6dd81d020" loc="38:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd81d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd81d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd81d530"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd81d6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd81d850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd81d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa6dd81e0c0" loc="36:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa6dd81e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dd81e440"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd81e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fa6dd80aa30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7fa6dd80aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fa6dd80adb0"/>
        <function-ref name="offset" scoped="" ref="0x7fa6dd807020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fa6dd8071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fa6dd7ecbf0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa6dd7ecbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fa6dd7c7ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fa6dd7c5880"/>
        <function-ref name="element" scoped="" ref="0x7fa6dd7c4020"/>
        <function-ref name="full" scoped="" ref="0x7fa6dd7ebce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fa6dd7c7660"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa6dd7c51d0"/>
        <function-ref name="empty" scoped="" ref="0x7fa6dd7eb860"/>
        <function-ref name="size" scoped="" ref="0x7fa6dd7c71e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa6dd7bca20" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa6dd7bca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fa6dd7bb920"/>
        <function-ref name="enqueue" scoped="" ref="0x7fa6dd7ba6d0"/>
        <function-ref name="element" scoped="" ref="0x7fa6dd7bad40"/>
        <function-ref name="full" scoped="" ref="0x7fa6dd7beaf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fa6dd7bb4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa6dd7ba020"/>
        <function-ref name="empty" scoped="" ref="0x7fa6dd7be670"/>
        <function-ref name="size" scoped="" ref="0x7fa6dd7bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa6dd7b9440" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6dd7b9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd7b97c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd7b9950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd7b9ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd7b9c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd7b9e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa6dd7b70c0" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6dd7b70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd7b7440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dd7b75d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd7b7760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd7b78f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dd7b7a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7fa6dd7b2500" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7fa6dd7b2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dd7b2880"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dd7b2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dd7c3a60" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dd7c3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dd7c3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dd7b7d00" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dd7b7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dd7b60a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dd7b6230"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dd7b63c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dd7b6550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dd7b66e0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd7b6870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dd7b6a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dd7b51b0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd7b6b90"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dd7b6d20"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dd7b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fa6dd7bc1a0" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fa6dd7bc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fa6dd7bc520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fa6dd79bbe0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fa6dd79bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fa6dd798020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dd795020" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dd795020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dd7953a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fa6dd795680" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fa6dd795680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fa6dd795a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fa6dd78f380" loc="39:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fa6dd78f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa6dd78f700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fa6dd78faa0" loc="40:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fa6dd78faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6dd78fe20"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6dd78c020"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd78c1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd78c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fa6dd775ad0" loc="12:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd775ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6dd775e50"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6dd773020"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd7731b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd773340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fa6dd7840f0" loc="8:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fa6dd7840f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa6dd784470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa6dd784d20" loc="10:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6dd784d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd7830e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd783270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd783400"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd783590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd783720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa6dd7735d0" loc="13:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6dd7735d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd773950"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dd773ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd773c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd773e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dd772020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fa6dd784710" loc="9:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dd784710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dd784a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7fa6dd778820" loc="11:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7fa6dd778820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dd776cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd781300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa6dd7760d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa6dd781c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fa6dd775660"/>
        <function-ref name="gett0" scoped="" ref="0x7fa6dd7751e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dd781780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa6dd782480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa6dd7766e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa6dd782950"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd782e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dd799a20" loc="7:TestAMC.nc">
      <component-ref qname="TestAMC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dd799a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dd799da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dd785020"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dd7851b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dd785340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dd7854d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd785660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dd7857f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dd785e30"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd785980"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dd785b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dd785ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa6dd766550" loc="58:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd766550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6dd7668d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6dd766a60"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd766bf0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd766d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa6dd7635c0" loc="60:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6dd7635c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd763940"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd763ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd763c60"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd763df0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd761020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa6dd760430" loc="62:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fa6dd760430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dd7607b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa6dd760a40" loc="64:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6dd760a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd760dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dd75f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd75f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd75f340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dd75f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fa6dd75c060" loc="67:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa6dd75c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa6dd75b5d0"/>
        <function-ref name="clear" scoped="" ref="0x7fa6dd75bd00"/>
        <function-ref name="isValid" scoped="" ref="0x7fa6dd75ce70"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd752460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa6dd748d90" loc="69:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dd748d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa6dd74c180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa6dd74c310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa6dd74c4a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa6dd74c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dd761800" loc="61:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dd761800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dd761b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa6dd75ee40" loc="66:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dd75ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa6dd75d1e0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa6dd75d370"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa6dd75d500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa6dd75f780" loc="65:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa6dd75f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa6dd75fb00"/>
        <function-ref name="source" scoped="" ref="0x7fa6dd75fc90"/>
        <function-ref name="address" scoped="" ref="0x7fa6dd75fe20"/>
        <function-ref name="destination" scoped="" ref="0x7fa6dd75e020"/>
        <function-ref name="setSource" scoped="" ref="0x7fa6dd75e1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa6dd75e340"/>
        <function-ref name="type" scoped="" ref="0x7fa6dd75e4d0"/>
        <function-ref name="setType" scoped="" ref="0x7fa6dd75e660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa6dd75e7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa6dd75e980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa6dd75eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa6dd751130" loc="68:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa6dd751130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa6dd750750"/>
        <function-ref name="clear" scoped="" ref="0x7fa6dd750e80"/>
        <function-ref name="isValid" scoped="" ref="0x7fa6dd750020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd74f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa6dd73bc10" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd73bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6dd73a020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6dd73a1b0"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd73a340"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd73a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa6dd721e30" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dd721e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa6dd72a1e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa6dd72a370"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa6dd72a500"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa6dd72a690"/>
        <function-ref name="setCca" scoped="" ref="0x7fa6dd72a820"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa6dd72a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa6dd714d20" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fa6dd714d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa6dd7171c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa6dd7358f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6dd7358f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd735c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dd735e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd734020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd7341b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dd734340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa6dd73aca0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6dd73aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd7390a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd739230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd7393c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd739550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd7396e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa6dd738c00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fa6dd738c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dd736020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa6dd72c9b0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dd72c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa6dd72cd30"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa6dd733020"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa6dd7331b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa6dd733340"/>
        <function-ref name="getPower" scoped="" ref="0x7fa6dd7334d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa6dd733660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa6dd72acb0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dd72acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa6dd7200a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa6dd720230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa6dd7203c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa6dd720550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dd738020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dd738020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dd7383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa6dd733990" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dd733990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa6dd733d10"/>
        <function-ref name="noAck" scoped="" ref="0x7fa6dd732020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa6dd7321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa6dd71f020" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa6dd71f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa6dd71f3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa6dd71f530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa6dd71f6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa6dd71f850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa6dd71f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa6dd7362d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa6dd7362d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa6dd736650"/>
        <function-ref name="source" scoped="" ref="0x7fa6dd7367e0"/>
        <function-ref name="address" scoped="" ref="0x7fa6dd736970"/>
        <function-ref name="destination" scoped="" ref="0x7fa6dd736b00"/>
        <function-ref name="setSource" scoped="" ref="0x7fa6dd736c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa6dd736e20"/>
        <function-ref name="type" scoped="" ref="0x7fa6dd735020"/>
        <function-ref name="setType" scoped="" ref="0x7fa6dd7351b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa6dd735340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa6dd7354d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa6dd735660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa6dd729c70" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dd729c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa6dd72b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa6dd716b70" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd716b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6dd711020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6dd7111b0"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd711340"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd7114d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa6dd70a9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dd70a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa6dd70ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa6dd709b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa6dd709b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa6dd708020"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa6dd7081b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa6dd708340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa6dd7084d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa6dd708660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa6dd70b140" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dd70b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa6dd70b4c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa6dd70b650"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa6dd70b7e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa6dd70b970"/>
        <function-ref name="getPower" scoped="" ref="0x7fa6dd70bb00"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa6dd70bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fa6dd70dd10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fa6dd70dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd70c0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd70c270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd70c400"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd70c590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd70c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa6dd709080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dd709080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa6dd709400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa6dd709590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa6dd709720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa6dd7098b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fa6dd70e820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fa6dd70e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dd70eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa6dd70a020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dd70a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa6dd70a3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa6dd70a530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa6dd70a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd711d00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd711d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd7100a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd710230"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd7103c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd710550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd7106e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fa6dd710a00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fa6dd710a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd710d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd70e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd70e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd70e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd70e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fa6dd70d020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fa6dd70d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd70d3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dd70d530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd70d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd70d850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dd70d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fa6dd70ca90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fa6dd70ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dd70ce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa6dd704460" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd704460"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6dd7047e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6dd704970"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd704b00"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd704c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa6dd7023b0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dd7023b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa6dd702730"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa6dd7028c0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa6dd702a50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa6dd702be0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa6dd702d70"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa6dd701020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6dd703020" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dd703020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd7033a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd703530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd7036c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd703850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd7039e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dd703cc0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dd703cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dd7020a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7fa6dd6fec60" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7fa6dd6fec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7fa6dd700020"/>
        <function-ref name="enableCca" scoped="" ref="0x7fa6dd7001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa6dd6fb2d0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6dd6fb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6dd6fb650"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6dd6fb7e0"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd6fb970"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd6fbb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa6dd6faad0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dd6faad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa6dd6fae50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa6dd6f9020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa6dd6f91b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa6dd6f9340"/>
        <function-ref name="setCca" scoped="" ref="0x7fa6dd6f94d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa6dd6f9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fa6dd6ef700" loc="55:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fa6dd6ef700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa6dd6efa80"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa6dd6efc10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa6dd6efda0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa6dd6ee020"/>
        <function-ref name="setCca" scoped="" ref="0x7fa6dd6ee1b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa6dd6ee340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa6dd6e6b00" loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dd6e6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa6dd6e6e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa6dd6e3030"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa6dd6e31c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa6dd6e3350"/>
        <function-ref name="getPower" scoped="" ref="0x7fa6dd6e34e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa6dd6e3670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fa6dd6e8810" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa6dd6e8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd6e8b90"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd6e8d20"/>
        <function-ref name="modify" scoped="" ref="0x7fa6dd6ef020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd6ef1b0"/>
        <function-ref name="resend" scoped="" ref="0x7fa6dd6ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6dd6fbdc0" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dd6fbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd6fa180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd6fa310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dd6fa4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dd6fa630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd6fa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fa6dd6e4b60" loc="56:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa6dd6e4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa6dd6e7020"/>
        <function-ref name="rand32" scoped="" ref="0x7fa6dd6e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fa6dd6f6ba0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fa6dd6f6ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dd6f5020"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd6f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa6dd6dc130" loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dd6dc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dd6dc5b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa6dd6dc740"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa6dd6dc8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fa6dd6f0880" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fa6dd6f0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fa6dd6f0c00"/>
        <function-ref name="rfOff" scoped="" ref="0x7fa6dd6f0d90"/>
        <function-ref name="rxOn" scoped="" ref="0x7fa6dd6f6020"/>
        <function-ref name="startVReg" scoped="" ref="0x7fa6dd6f61b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fa6dd6f6340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fa6dd6f64d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fa6dd6f6660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fa6dd6f67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dd6e7470" loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dd6e7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dd6e77f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dd6e7980"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dd6e7b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dd6e7ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dd6e7e30"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd6e6020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dd6e61b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dd6e67f0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd6e6340"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dd6e64d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dd6e6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa6dd6f8310" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd6f8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd6f8690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd6f8820"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd6f89b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd6f8b40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd6f8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fa6dd6d7850" loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fa6dd6d7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dd6d7bd0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dd6d7d60"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dd6e2020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dd6e21b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dd6e2340"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dd6e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fa6dd6d2730" loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fa6dd6d2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dd6d2ab0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dd6d2c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7fa6dd6f9980" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7fa6dd6f9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7fa6dd6f9d00"/>
        <function-ref name="enableCca" scoped="" ref="0x7fa6dd6f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fa6dd6d47d0" loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fa6dd6d47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dd6d4b50"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dd6d4ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fa6dd6d5890" loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fa6dd6d5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dd6d5c10"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dd6d5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fa6dd676670" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dd676670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa6dd6769f0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa6dd676b80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa6dd676d10"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa6dd682020"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa6dd6821b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa6dd682340"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa6dd6824d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa6dd682660"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa6dd6827f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa6dd682980"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa6dd682b10"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa6dd682ca0"/>
        <function-ref name="sync" scoped="" ref="0x7fa6dd682e30"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa6dd681120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa6dd6812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fa6dd6709e0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fa6dd6709e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd673670"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd673af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fa6dd6815b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fa6dd6815b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fa6dd681930"/>
        <function-ref name="rfOff" scoped="" ref="0x7fa6dd681ac0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fa6dd681c50"/>
        <function-ref name="startVReg" scoped="" ref="0x7fa6dd681de0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fa6dd674020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fa6dd6741b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fa6dd674340"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fa6dd6744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd684220" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd684220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd6845a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd684730"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd6848c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd684a50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd684be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fa6dd66b4c0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dd66b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa6dd66b840"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa6dd66b9d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa6dd66bb60"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa6dd66bcf0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa6dd66be80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa6dd66a030"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa6dd66a1c0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa6dd66a350"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa6dd66a4e0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa6dd66a670"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa6dd66a800"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa6dd66a990"/>
        <function-ref name="sync" scoped="" ref="0x7fa6dd66ab20"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa6dd66adb0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa6dd669020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fa6dd6441e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dd6441e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd644560"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd6446f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fa6dd666bc0" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa6dd666bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fa6dd665020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fa6dd65d960" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fa6dd65d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dd65b1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd65c1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dd65cb30"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dd65c670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dd65b670"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd6647c0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd664cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fa6dd647020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dd647020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd6473a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd647530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fa6dd65ae70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fa6dd65ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd659220"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd6593b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd659540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd6596d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd659860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd6599f0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd659b80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd659d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fa6dd6686a0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fa6dd6686a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd667390"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd667810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fa6dd6322f0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fa6dd6322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dd632670"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dd632800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fa6dd644a80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa6dd644a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd644e00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd643020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fa6dd6433c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dd6433c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd643740"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd6438d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fa6dd645cd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dd645cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd6480a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd648230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fa6dd64d390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa6dd64d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa6dd64d710"/>
        <function-ref name="changed" scoped="" ref="0x7fa6dd64d8a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa6dd64da30"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa6dd64dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fa6dd65bb60" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa6dd65bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd65a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd65a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd65a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd65a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd65a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd65a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd65a980"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd65ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fa6dd642ae0" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dd642ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd63f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fa6dd6580f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fa6dd6580f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd658470"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd658600"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd658790"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd658920"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd658ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd658c40"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd658dd0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd657020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dd66d020" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dd66d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dd66d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fa6dd6478f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dd6478f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd647c70"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd647e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fa6dd63f440" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dd63f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd63f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa6dd63fb60" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa6dd63fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd63e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd63e1b0"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd63e340"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd63e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd63e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fa6dd63d880" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fa6dd63d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd63dc00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd63dd90"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd63c020"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd63c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd63c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fa6dd669320" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fa6dd669320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fa6dd6696a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fa6dd669830"/>
        <function-ref name="rxOn" scoped="" ref="0x7fa6dd6699c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fa6dd669b50"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fa6dd669ce0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fa6dd669e70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fa6dd668030"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fa6dd6681c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fa6dd6485d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dd6485d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd648950"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd648ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fa6dd645420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dd645420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd6457a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd645930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fa6dd640b60" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa6dd640b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd642020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dd63c600" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dd63c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dd63c980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dd63cb10"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dd63cca0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dd63ce30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dd63b020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd63b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dd63b340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dd63b980"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd63b4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dd63b660"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dd63b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fa6dd633410" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fa6dd633410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dd633790"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dd633920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd66d690" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd66d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd66da10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd66dba0"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd66dd30"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd66b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd66b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fa6dd649e20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa6dd649e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd64c1c0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd64c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fa6dd6494a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dd6494a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd649920"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd649ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fa6dd652c00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fa6dd652c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd656020"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd6561b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa6dd656340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa6dd6564d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fa6dd63ea10" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fa6dd63ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd63ed90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd63d020"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd63d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd63d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd63d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fa6dd6423b0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dd6423b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd642730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dd5bc7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dd5bc7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dd5bcb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fa6dd5b9220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa6dd5b9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dd5b6b30"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd5b8a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dd5b64e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dd5b6020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dd5b5020"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd5b8090"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd5b85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dd5b4a20" loc="42:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dd5b4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dd5b4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fa6dd5b22e0" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa6dd5b22e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dd4d2b30"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4d4ae0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dd4d24e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dd4d2020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dd4d1020"/>
        <function-ref name="start" scoped="" ref="0x7fa6dd4d4110"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd4d4620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa6dc4a0c20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa6dc4a0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dc49c4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc49d4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dc49de60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dc49d9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dc49c9a0"/>
        <function-ref name="start" scoped="" ref="0x7fa6dc49ea80"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc49d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dc4a03d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dc4a03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dc4a0750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa6dc498c20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa6dc498c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dc4954e0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc4964e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dc496e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dc4969a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dc4959a0"/>
        <function-ref name="start" scoped="" ref="0x7fa6dc497a80"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc496020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dc4983d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dc4983d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dc498750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa6dc47f440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc47f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6dc47f7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6dc47f950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6dc47fae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6dc47fc70"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc47fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa6dc4829d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc4829d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dc482d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dc481020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dc4811b0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dc481340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dc4814d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dc481660"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dc4817f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dc481980"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dc481b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6dc481ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6dc481e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa6dc480120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc480120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6dc4804a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6dc480630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dc4807c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6dc480950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6dc480ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dc480c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6dc480e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6dc47f020"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6dc47f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa6dd590ba0" loc="52:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dd590ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6dd58e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6dd58e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6dd58e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6dd58e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd58e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa6dd5944d0" loc="50:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd5944d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd594850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dd5949e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dd594b70"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd594d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dd592020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd5921b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dd592340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd5924d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd592660"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6dd5927f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6dd592980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa6dd591280" loc="51:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd591280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6dd591600"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6dd591790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dd591920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6dd591ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6dd591c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dd591dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6dd590020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6dd5901b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6dd590340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fa6dc4750c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc4750c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6dc475440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6dc4755d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6dc475760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6dc4758f0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc475a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa6dc478710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc478710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dc478a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dc478c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dc478db0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dc477020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dc4771b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dc477340"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dc4774d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dc477660"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dc4777f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6dc477980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6dc477b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa6dc47b5b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa6dc47b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dc479df0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc47adf0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dc4797a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dc4792e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dc4782e0"/>
        <function-ref name="start" scoped="" ref="0x7fa6dc47a420"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc47a930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dc47dca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dc47dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dc47b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa6dc477da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc477da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6dc476180"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6dc476310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dc4764a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6dc476630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6dc4767c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dc476950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6dc476ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6dc476c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6dc476e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa6dd53b020" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dd53b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd53be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd53a800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd53a340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd53acc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fa6dd519950" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fa6dd519950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd518780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd516150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd518c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd516610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa6dd5365f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dd5365f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd51a430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd51adb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd51a8f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd5192a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa6dc491020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa6dc491020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dc48f870"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc490840"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dc48f220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dc490d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dc48fd30"/>
        <function-ref name="start" scoped="" ref="0x7fa6dc491e30"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc490380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fa6dc48b780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fa6dc48b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dc488020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc489020"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dc4899a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dc4894e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dc4884e0"/>
        <function-ref name="start" scoped="" ref="0x7fa6dc48a5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc48aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa6dc48e3d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dc48e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dc48d240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dc48dbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dc48d700"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dc48b0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fa6dd4cc6a0" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fa6dd4cc6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4cca20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4ccbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4ccd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4cb020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4cb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4cb340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4cb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4cb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fa6dd4cb9d0" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fa6dd4cb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4cbd50"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4ca020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4ca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4ca340"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4ca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4ca660"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4ca7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4ca980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fa6dd4cace0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fa6dd4cace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4c90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4c9230"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4c93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4c9550"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4c96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4c9870"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4c9a00"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4c9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fa6dd4cd370" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa6dd4cd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4cd6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4cd880"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4cda10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4cdba0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4cdd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4cc020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4cc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4cc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fa6dd4c7380" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fa6dd4c7380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4c7700"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4c7890"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4c7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4c7bb0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4c7d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4c6020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4c61b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fa6dd4ce020" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fa6dd4ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4ce3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4ce530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4ce6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4ce850"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4ce9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4ceb70"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4ced00"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fa6dd4c8020" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fa6dd4c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4c83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4c8530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4c86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4c8850"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4c89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4c8b70"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4c8d00"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd4c3930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4c3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4c3cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4c3e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd4c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4c2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd4c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4c2660"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4c27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd4c2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd4c2b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4c2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd4c2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd4c1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd4c12b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4c1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd4c5710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4c5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4c5a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4c5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4c5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4c3020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4c3340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4c34d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4c3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd4be480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4be480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4be800"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4be990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd4beb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4becb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4bee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd4bd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4bd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4bd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd4bd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd4bd660"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4bd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd4bd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd4bdb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd4bdda0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd4bf1b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4bf1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4bf530"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4bf6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4bf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4bf9e0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4bfb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4bfd00"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4be020"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd4b9020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4b93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4b9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd4b96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4b9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4b99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd4b9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4b9d00"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4b8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd4b81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd4b8340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4b84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd4b8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd4b87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd4b8a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4b8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd4bbd70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4bbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4ba180"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4ba310"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4ba4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4ba630"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4ba7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4ba950"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4baae0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4bac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd4b5de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4b5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4b4180"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4b4310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd4b44a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4b4630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4b47c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd4b4950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4b4ae0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4b4c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd4b4e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd4b3020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd4b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd4b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd4b3760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd4b6b70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4b6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4b5020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4b51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4b5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4b54d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4b5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4b57f0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4b5980"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4b5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd4b0930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4b0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4b0cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4b0e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd4ae020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4ae340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd4ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4ae660"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4ae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd4ae980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd4aeb10"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4aeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd4aee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd4ad020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd4ad2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4ad440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd4b1710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4b1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4b1a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4b1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4b1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4b0020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4b01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4b0340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4b04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4b0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd4aa480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4aa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4aa800"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4aa990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd4aab20"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4aacb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4aae40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd4a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4a91b0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4a9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd4a94d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd4a9660"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4a97f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd4a9980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd4a9b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd4a9da0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd4ab1b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4ab1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4ab530"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4ab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4ab850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4ab9e0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4abb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4abd00"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4aa020"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa6dd4a5020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa6dd4a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4a53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4a5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd4a56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4a5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4a59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd4a5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4a5d00"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4a4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd4a41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd4a4340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4a44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd4a4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd4a47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd4a4a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4a4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa6dd4a7d70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd4a7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd4a6180"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd4a6310"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd4a64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd4a6630"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd4a67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd4a6950"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd4a6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd4a6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fa6dd48d5a0" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fa6dd48d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa6dd48d920"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd48dab0"/>
        <function-ref name="captured" scoped="" ref="0x7fa6dd48dc40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa6dd48ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fa6dd491210" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fa6dd491210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd491590"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd491720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa6dd4918b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa6dd491a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fa6dd491e30" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa6dd491e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4901e0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd490370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa6dd490500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa6dd490690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fa6dd46e020" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fa6dd46e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6dd46e3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa6dd46e530"/>
        <function-ref name="captured" scoped="" ref="0x7fa6dd46e6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd46e850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd46e9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa6dd46eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa6dd4701f0" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa6dd4701f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa6dd470570"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd470700"/>
        <function-ref name="captured" scoped="" ref="0x7fa6dd470890"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa6dd470a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMicro" ref="0x7fa6dd469020" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMicro" scoped="" ref="0x7fa6dd469020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd469c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fa6dd46cce0" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fa6dd46cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd46b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa6dd470cb0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dd470cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6dd46f0a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6dd46f230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dd46f3c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6dd46f550"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6dd46f6e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dd46f870"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6dd46fa00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6dd46fb90"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6dd46fd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fa6dd46ee40" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa6dd46ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd46d1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd46d370"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd46d500"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd46d690"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd46d820"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd46d9b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd46db40"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd46dcd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd46de60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd46c020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd46c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd46c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd46c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd46c760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd46c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa6dd45b020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa6dd45b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd45bc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa6dd45a300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dd45a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd459150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd459ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd459610"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd458020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa6dd453020" loc="43:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dd453020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd453e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd452800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd452340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd452cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fa6dd44e120" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fa6dd44e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd44d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd44d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd44d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd44de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa6dd448a60" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dd448a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd448de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dd447020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dd4471b0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd447340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dd4474d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd447660"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dd4477f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd447980"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd447b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6dd447ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6dd447e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa6dd44a990" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dd44a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd4497c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd448170"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd449c80"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd448630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fa6dd43f6d0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fa6dd43f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd43e5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd43d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd43ea70"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd43d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa6dd442210" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dd442210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd441090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd441a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd441550"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd43f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa6dd43bcf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa6dd43bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd43a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa6dd439020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dd439020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9b6b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa6ddd9ba20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dd439e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dd438800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dd438340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dd438cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fa6dd42a020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fa6dd42a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd42a3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd42a530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd42a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd42a850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd42a9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd42ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fa6dd420020" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fa6dd420020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4203a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd420530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4206c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd420850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd4209e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd420b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fa6dd427020" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fa6dd427020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4273a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd427530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4276c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd427850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd4279e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd427b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fa6dd425020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fa6dd425020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4253a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd425530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4256c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd425850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd4259e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd425b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fa6dd431060" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fa6dd431060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4313e0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd431570"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd431700"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd431890"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd431a20"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd431bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fa6dd422020" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fa6dd422020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4224a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd422630"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4227c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd422950"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd422ae0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd422c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fa6dd429020" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fa6dd429020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4293a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd429530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4296c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd429850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd4299e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd429b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fa6dd41f020" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fa6dd41f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd41f3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd41f530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd41f6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd41f850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd41f9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd41fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fa6dd42d170" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fa6dd42d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd42d4f0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd42d680"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd42d810"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd42d9a0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd42db30"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd42dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fa6dd424020" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fa6dd424020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4243a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd424530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4246c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd424850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd4249e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd424b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fa6dd42c020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fa6dd42c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd42c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd42c530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd42c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd42c850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd42c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd42cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fa6dd421060" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fa6dd421060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4213e0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd421570"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd421700"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd421890"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd421a20"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd421bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fa6dd428020" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fa6dd428020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4283a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd428530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4286c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd428850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd4289e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd428b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fa6dd426020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fa6dd426020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4263a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd426530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4266c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd426850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd4269e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd426b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fa6dd432100" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fa6dd432100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd432480"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd432610"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4327a0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd432930"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd432ac0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd432c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fa6dd423020" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fa6dd423020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd4233a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd423530"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd4236c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd423850"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd4239e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd423b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fa6dd418bc0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fa6dd418bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd417020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4171b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd417340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd4174d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd417660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd4177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fa6dd40dbc0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fa6dd40dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd40c020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd40c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd40c340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd40c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd40c660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd40c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fa6dd415bc0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fa6dd415bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd414020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4141b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd414340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd4144d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd414660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd4147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fa6dd413bc0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fa6dd413bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd412020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4121b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd412340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd4124d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd412660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd4127f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fa6dd41ac40" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fa6dd41ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd419020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4191b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd419340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd4194d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd419660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd4197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fa6dd40fbc0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fa6dd40fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd40e0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd40e230"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd40e3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd40e550"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd40e6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd40e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fa6dd417bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fa6dd417bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd416020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4161b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd416340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd4164d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd416660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd4167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fa6dd40cbc0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fa6dd40cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd40b020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd40b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd40b340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd40b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd40b660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd40b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fa6dd41ed30" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fa6dd41ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd41b0e0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd41b270"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd41b400"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd41b590"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd41b720"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd41b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fa6dd412bc0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fa6dd412bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd410020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4101b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd410340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd4104d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd410660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd4107f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fa6dd419bc0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fa6dd419bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd418020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4181b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd418340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd4184d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd418660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd4187f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fa6dd40ec40" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fa6dd40ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd40d020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd40d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd40d340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd40d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd40d660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd40d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fa6dd416bc0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fa6dd416bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd415020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4151b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd415340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd4154d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd415660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd4157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fa6dd414bc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fa6dd414bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd413020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd4131b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd413340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd4134d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd413660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd4137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fa6dd41bc80" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fa6dd41bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd41a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd41a230"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd41a3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd41a550"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd41a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd41a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fa6dd410bc0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fa6dd410bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd40f020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd40f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd40f340"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd40f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd40f660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd40f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fa6dd339610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fa6dd339610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd339990"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd339b20"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd339cb0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd339e40"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd32c020"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd32c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa6dd33aa30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fa6dd33aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd33adb0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd339020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa6dd3391b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa6dd339340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fa6dd329610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fa6dd329610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dd329990"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dd329b20"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd329cb0"/>
        <function-ref name="edge" scoped="" ref="0x7fa6dd329e40"/>
        <function-ref name="enable" scoped="" ref="0x7fa6dd328020"/>
        <function-ref name="getValue" scoped="" ref="0x7fa6dd3281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa6dd32ba70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fa6dd32ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd32bdf0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dd329020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa6dd3291b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa6dd329340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa6dd0a0e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dd0a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09f410"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa6dd0aa160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa6dd0aa160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0aa4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa6dd0a4e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dd0a4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0a3210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0a33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa6dd09e880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dd09e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09ec00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa6dd0960a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa6dd0960a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd096420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0965b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa6dd09d0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa6dd09d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09d420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa6dd08a500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dd08a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08a880"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa6dd08c500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa6dd08c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08c880"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa6dd0a9490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dd0a9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a9810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa6dd092880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa6dd092880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd092c00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd092d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa6dd08e500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dd08e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08e880"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa6dd0a3e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa6dd0a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0a1210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa6dd0a1e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dd0a1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0a0210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0a03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa6dd098880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dd098880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd098c00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd098d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa6dd0990a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa6dd0990a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd099420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0995b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa6dd09d880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dd09d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09dc00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa6dd0aca90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd0aca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa6dd0ace10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa6dd0ab020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa6dd0ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa6dd0a7e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dd0a7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa6dd0a6490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa6dd0a6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a6910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa6dd091c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dd091c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0900a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd090230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa6dd0a6be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dd0a6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa6dd08ece0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dd08ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08c0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa6dd0a7160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dd0a7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa6dd0920a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa6dd0920a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd092420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0925b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa6dd0a1670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dd0a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0a19f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0a1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa6dd0a3670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dd0a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0a39f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0a3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa6dd0abad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dd0abad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0abe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa6dd0930a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dd0930a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd093420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0935b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa6dd096880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa6dd096880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd096c00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd096d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa6dd093880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dd093880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd093c00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd093d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa6dd08bce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dd08bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08a0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa6dd08cce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa6dd08cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08b0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa6dd099880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa6dd099880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd099c00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd099d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa6dd0950a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa6dd0950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd095420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0955b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa6dd08fce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dd08fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08e0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa6dd09c880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dd09c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09cc00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa6dd08ace0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dd08ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dd0890a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dd089230"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0893c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dd089550"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd0896e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa6dd0ab480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa6dd0ab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0ab800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa6dd0a4670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa6dd0a4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0a49f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0a4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa6dd0a0670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dd0a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0a09f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0a0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa6dd0970a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dd0970a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd097420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0975b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa6dd09c0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dd09c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09c420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa6dd097880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dd097880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd097c00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd097d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa6dd09f870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dd09f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09fbf0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09fd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa6dd0aa7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa6dd0aa7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0aab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa6dd09e0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dd09e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09e420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd0ade20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd0ade20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd0ac1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd0ac350"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd0ac4e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd0ac670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd0ac800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa6dd0a52f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dd0a52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa6dd0a4020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa6dd0a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa6dd08f500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa6dd08f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08f880"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa6dd090ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dd090ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08f0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa6dd0a77b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dd0a77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa6dd090500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dd090500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd090880"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd090a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa6dd08b500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa6dd08b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd08b880"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd08ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa6dd0980a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dd0980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd098420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0985b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa6dd095880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa6dd095880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd095c00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd095d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa6dd0aae00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa6dd0aae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa6dd0a9ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dd0a9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa6dd09a0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dd09a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09a420"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa6dd0a5940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa6dd0a5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0a5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa6dd09a880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa6dd09a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd09ac00"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd09ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa6dd0910a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa6dd0910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd091820"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0919b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa6dd0899b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dd0899b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dd089d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dd088020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0881b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dd088340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd0884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fa6dd2e72c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2e72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dd2e7640"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dd2e77d0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd2e7960"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dd2e7af0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd2e7c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa6dd2e8350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd2e8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa6dd2e86d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa6dd2e8860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa6dd2e89f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fa6dd2e5540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fa6dd2e5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd2e58c0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd2e5a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fa6dd2e4370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fa6dd2e4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd2e46f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd2e4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd2e94d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd2e94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd2e9850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd2e99e0"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd2e9b70"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd2e9d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd2e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fa6dd2e31d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2e31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd2e3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fa6dd2cc2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd2cc2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd2cc660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd2cc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fa6dd2de890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fa6dd2de890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dd2dec10"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dd2deda0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd2dd020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dd2dd1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd2dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa6dd2e0660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd2e0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa6dd2e09e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa6dd2e0b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa6dd2e0d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fa6dd2d6c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd2d6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa6dd2d8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fa6dd2ccb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fa6dd2ccb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dd2d7020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dd2d71b0"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dd2d7340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dd2d74d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dd2d7660"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dd2d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa6dd2d9060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa6dd2d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd2d93e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd2d9570"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd2d9700"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd2d9890"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd2d9a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fa6dd2ddba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fa6dd2ddba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd2db020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd2db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fa6dd2dba30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fa6dd2dba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd2dbdb0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd2da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dd2d7a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dd2d7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dd2d7df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dd2d5020"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dd2d51b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dd2d5340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dd2d54d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd2d5660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dd2d57f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dd2d5e30"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd2d5980"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dd2d5b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dd2d5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd2df510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd2df510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd2df890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd2dfa20"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd2dfbb0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd2dfd40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd2de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fa6dd2c9bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fa6dd2c9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dd2c7020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dd2c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fa6dd2da8b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fa6dd2da8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd2dac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa6dd26e770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa6dd26e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dd26eaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dd26ec80"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dd26ee10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dd26a020"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dd26a1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dd26a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa6dd2691d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa6dd2691d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dd269550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dd2696e0"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dd269870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dd269a00"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dd269b90"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dd269d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dd264020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dd264020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dd2643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa6dd264b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa6dd264b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dd263020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dd2631b0"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dd263340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dd2634d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dd263660"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dd2637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa6dd0d4410" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd0d4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd0d4790"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd0d4920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa6dd24ad90" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd24ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa6dd0d4180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd24a140" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd24a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd24a4c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd24a650"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd24a7e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd24a970"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd24ab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dc387440" loc="82:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc387440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dc3877c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dc387950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa6dc386d70" loc="87:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dc386d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dc385180"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dc385310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fa6dc3855a0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa6dc3855a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa6dc385920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa6dc387be0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa6dc387be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa6dc386020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dc388770" loc="81:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dc388770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dc388af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dc388c80"/>
        <function-ref name="request" scoped="" ref="0x7fa6dc388e10"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dc387020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dc3871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa6dc3862b0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa6dc3862b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa6dc386630"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa6dc3867c0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa6dc386950"/>
        <function-ref name="write" scoped="" ref="0x7fa6dc386ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa6dd2386b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd2386b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dd238a30"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dd238bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa6dd236850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd236850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd236bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd236d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fa6dd233a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa6dd233a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa6dd233dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa6dd237020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd237020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa6dd2373a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa6dd234690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa6dd234690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd234a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd234ba0"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd234d30"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd233020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd2331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd239430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd239430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd2397b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd239940"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd239ad0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd239c60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd239df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa6dd2376a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa6dd2376a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa6dd237a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa6dd237bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa6dd237d40"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd236020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa6dd2322a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6dd2322a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd232620"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd2327b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa6dd1da250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd1da250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dd1da5f0"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dd1da780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa6dd1d9c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa6dd1d9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dd1d8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dd1d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fa6dd1d73e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa6dd1d73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa6dd1d7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa6dd1daa10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa6dd1daa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa6dd1dad90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fa6dd1d7a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa6dd1d7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa6dd1d7dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa6dd1d5020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa6dd1d51b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa6dd1d5340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa6dd1d54d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa6dd1d5660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa6dd1d57f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa6dd1d5980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa6dd1d5b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa6dd1d5ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa6dd1d5e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa6dd1d4020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa6dd1d41b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa6dd1d4440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa6dd1d45d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa6dd1d4760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa6dd1d48f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fa6dd1d4a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa6dd1d4c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa6dd1d4da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa6dd1d3020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa6dd1d31b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa6dd1d3340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa6dd1d34d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dd1d3660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa6dd1d39f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa6dd1d3b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa6dd1d3d10"/>
        <function-ref name="tx" scoped="" ref="0x7fa6dd1d2020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa6dd1d21b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa6dd1d2340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa6dd1d24d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa6dd1d2660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa6dd1d27f0"/>
        <function-ref name="rx" scoped="" ref="0x7fa6dd1d2980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa6dd1d2b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa6dd1d2ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa6dd1d2e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa6dd1d1020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa6dd1d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dd1d1c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dd1d1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dd1d0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dd1d01b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dd1d0340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dd1d04d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dd1d0660"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd1d07f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dd1d0980"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dd1cf020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd1d0ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dd1d0b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dd1d0e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa6dd1d85b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa6dd1d85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd1d8950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd1d8ae0"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd1d8c70"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd1d8e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd1d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd1db470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd1db470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd1db810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd1db9a0"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd1dbb30"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd1dbcc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd1dbe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa6dd1d9060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa6dd1d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa6dd1d93e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa6dd1d9570"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa6dd1d9700"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd1d9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa6dd1d1480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa6dd1d1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd1d1800"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd1d1990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fa6dd1cf2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fa6dd1cf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dd1cf670"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dd1cf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa6dd1c1d10" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6dd1c1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd1c00e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd1c0270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fa6dd1c4840" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dd1c4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dd1c4bc0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd1c4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa6dd1c60c0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6dd1c60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa6dd1c6440"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa6dd1c65d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa6dd1c6760"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa6dd1c68f0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa6dd1c6a80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa6dd1c6c10"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa6dd1c6da0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa6dd1c5020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa6dd1c51b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa6dd1c5340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa6dd1c54d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa6dd1c5660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa6dd1c57f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa6dd1c5a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa6dd1c5c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa6dd1c5da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa6dd1c3020"/>
        <function-ref name="isUart" scoped="" ref="0x7fa6dd1c31b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa6dd1c3340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa6dd1c34d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa6dd1c3660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa6dd1c37f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa6dd1c3980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa6dd1c3b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dd1c3ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa6dd1c2220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa6dd1c23b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa6dd1c2540"/>
        <function-ref name="tx" scoped="" ref="0x7fa6dd1c26d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa6dd1c2860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa6dd1c29f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa6dd1c2b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa6dd1c2d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa6dd1c1020"/>
        <function-ref name="rx" scoped="" ref="0x7fa6dd1c11b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa6dd1c1340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa6dd1c14d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa6dd1c1660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa6dd1c17f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa6dd1c1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fa6dd1b4cb0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fa6dd1b4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd1b30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd1b3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd1b33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd1b3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd1b36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd1b3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd1b3a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd1b3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd1b3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd1b2020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd1b21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd1b2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd1b24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd1b2760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd1b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa6dd1b8460" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd1b8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd1b87e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd1b8970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fa6dd1b2cb0" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fa6dd1b2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd1b00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd1b0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd1b03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd1b0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd1b06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd1b0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd1b0a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd1b0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd1b0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd1af020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd1af1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd1af340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd1af4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd1af760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd1af8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fa6dd1afcb0" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fa6dd1afcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd1ae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd1ae230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd1ae3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd1ae550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd1ae6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd1ae870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd1aea00"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd1aeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd1aed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd1ad020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd1ad1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd1ad340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd1ad4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd1ad760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd1ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fa6dd1bd970" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa6dd1bd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa6dd1bdcf0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa6dd1bde80"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa6dd1bc030"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa6dd1bc1c0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa6dd1bc350"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa6dd1bc4e0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa6dd1bc670"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa6dd1bc800"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa6dd1bc990"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa6dd1bcb20"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa6dd1bccb0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa6dd1bce40"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa6dd1bb020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa6dd1bb2b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa6dd1bb440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa6dd1bb5d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa6dd1bb760"/>
        <function-ref name="isUart" scoped="" ref="0x7fa6dd1bb8f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa6dd1bba80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa6dd1bbc10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa6dd1bbda0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa6dd1ba020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa6dd1ba1b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa6dd1ba340"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dd1ba4d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa6dd1ba860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa6dd1ba9f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa6dd1bab80"/>
        <function-ref name="tx" scoped="" ref="0x7fa6dd1bad10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa6dd1b9020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa6dd1b91b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa6dd1b9340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa6dd1b94d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa6dd1b9660"/>
        <function-ref name="rx" scoped="" ref="0x7fa6dd1b97f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa6dd1b9980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa6dd1b9b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa6dd1b9ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa6dd1b9e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa6dd1b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fa6dd1bd0c0" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dd1bd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dd1bd440"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd1bd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fa6dd1b6cb0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fa6dd1b6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd1b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd1b5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd1b53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd1b5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd1b56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd1b5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd1b5a00"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd1b5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd1b5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd1b4020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd1b41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd1b4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd1b44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd1b4760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd1b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fa6dd1b8d30" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fa6dd1b8d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dd1b70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dd1b7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa6dd1b7400"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dd1b7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dd1b7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa6dd1b78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dd1b7a40"/>
        <function-ref name="get" scoped="" ref="0x7fa6dd1b7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa6dd1b7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa6dd1b6020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dd1b61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa6dd1b6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa6dd1b64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa6dd1b6760"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dd1b68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dc37ed90" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc37ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dc37c180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dc37c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa6dc376020" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc376020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dc3763a0"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dc376530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa6dc377760" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa6dc377760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dc377ae0"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dc377c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dc37e140" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dc37e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dc37e4c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dc37e650"/>
        <function-ref name="request" scoped="" ref="0x7fa6dc37e7e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dc37e970"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dc37eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa6dc37cd40" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa6dc37cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa6dc37b0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa6dc37b270"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa6dc37b400"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa6dc37b590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa6dc37b720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa6dc37b8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa6dc37ba40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa6dc37bbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa6dc37bd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa6dc37a020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa6dc37a1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa6dc37a340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa6dc37a4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa6dc37a760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa6dc37a8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa6dc37aa80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa6dc37ac10"/>
        <function-ref name="isUart" scoped="" ref="0x7fa6dc37ada0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa6dc379020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa6dc3791b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa6dc379340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa6dc3794d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa6dc379660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa6dc3797f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dc379980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa6dc379d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa6dc378020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa6dc3781b0"/>
        <function-ref name="tx" scoped="" ref="0x7fa6dc378340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa6dc3784d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa6dc378660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa6dc3787f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa6dc378980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa6dc378b10"/>
        <function-ref name="rx" scoped="" ref="0x7fa6dc378ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa6dc378e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa6dc377020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa6dc3771b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa6dc377340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa6dc3774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa6dc37c5a0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc37c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dc37c920"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dc37cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dd1192c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd1192c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dd119640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dd1197d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa6dd1188a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd1188a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dd118c20"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dd118db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa6dd11b1d0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd11b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd11b550"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd11b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd11a020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd11a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd11a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd11a530"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd11a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd11a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd11a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa6dd119ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd119ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dd119e50"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dd118020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa6dd114e50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd114e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dd113210"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dd1133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa6dd115060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa6dd115060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd115400"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd115590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fa6dd114840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fa6dd114840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd114bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa6dd115990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa6dd115990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dd115d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fa6dd114060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fa6dd114060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa6dd1143e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fa6dd114570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dd1109e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dd1109e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dd110d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dd10f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa6dd10d770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dd10d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dd10db10"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dd10dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa6dd10f270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dd10f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd10f5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fa6dd10f780"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd10f910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd10faa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dd10fc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd111b60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd111b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd110020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd1101b0"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd110340"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd1104d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd110660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa6dd10fe80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd10fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dd10d220"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dd10d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dc31a460" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dc31a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dc31a7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa6dc31aa70" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa6dc31aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa6dc31adf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa6dc319020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa6dc3191b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa6dc319340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa6dc317a60" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa6dc317a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa6dc317e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dc315020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa6dc314790" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa6dc314790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa6dc314b30"/>
        <function-ref name="configure" scoped="" ref="0x7fa6dc314cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa6dc313020" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa6dc313020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa6dc3133a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa6dc313530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa6dc3136c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa6dc313850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa6dc315270" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dc315270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dc3155f0"/>
        <function-ref name="requested" scoped="" ref="0x7fa6dc315780"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dc315910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dc315aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dc315c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dc313aa0" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dc313aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dc313e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dc312020"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dc3121b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dc312340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dc3124d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dc312660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dc3127f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dc312e30"/>
        <function-ref name="set" scoped="" ref="0x7fa6dc312b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dc312980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dc312ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dc318c80" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dc318c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dc3170a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dc317230"/>
        <function-ref name="request" scoped="" ref="0x7fa6dc3173c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dc317550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dc3176e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa6dc315e80" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc315e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dc314220"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dc3143b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa6dc311160" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fa6dc311160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dc3114e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dc311670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa6dd0f3020" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa6dd0f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa6dd0f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa6dd0f35f0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dd0f35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd0f3970"/>
        <function-ref name="requested" scoped="" ref="0x7fa6dd0f3b00"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd0f3c90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd0f3e20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dd0f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fa6dd108880" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dd108880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dd108c00"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dd108d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa6dd0f2270" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dd0f2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dd0f25f0"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dd0f2780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fa6dc2e10e0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fa6dc2e10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fa6dc2e1460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fa6dc2e16b0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa6dc2e16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dc2e1a30"/>
        <function-ref name="requested" scoped="" ref="0x7fa6dc2e1bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dc2e1d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dc2df020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa6dc2df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fa6dc2e2900" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fa6dc2e2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dc2e2c80"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc2e2e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa6dc2df400" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa6dc2df400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa6dc2df780"/>
        <function-ref name="userId" scoped="" ref="0x7fa6dc2df910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa6dd06ec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dd06ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06d210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa6dd079da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa6dd079da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd077180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa6dd071b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dd071b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd070020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa6dd06b670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dd06b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa6dd064e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa6dd064e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd063210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa6dd06be50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa6dd06be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06a210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa6dd0582f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dd0582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd058670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd058800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa6dd05a2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa6dd05a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05a670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd05a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa6dd076120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dd076120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0764a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa6dd060670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa6dd060670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0609f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd060b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa6dd05b2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dd05b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05b670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd05b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa6dd070c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa6dd070c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06f020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa6dd06fc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dd06fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06e020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa6dd066670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dd066670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0669f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd066b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa6dd068e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa6dd068e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd067210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa6dd06a670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dd06a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa6dd07a760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd07a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa6dd07aae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa6dd07ac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa6dd07ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa6dd075aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dd075aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd075e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa6dd074120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa6dd074120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0745a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa6dd05fa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dd05fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05fdf0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd05d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa6dd074870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dd074870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd074bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa6dd05bad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dd05bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05be50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd05a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa6dd076dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dd076dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd075180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa6dd061e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa6dd061e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd060210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa6dd06f480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dd06f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06f800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa6dd070480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dd070480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd070800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd070990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa6dd079750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dd079750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd079ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa6dd062e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dd062e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd061210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa6dd063670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa6dd063670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0639f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd063b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa6dd061670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dd061670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0619f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd061b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa6dd059ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dd059ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd059e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd058020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa6dd05aad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa6dd05aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05ae50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd059020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa6dd067670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa6dd067670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0679f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd067b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa6dd063e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa6dd063e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd062210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa6dd05cad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dd05cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05ce50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd05b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa6dd069670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dd069670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0699f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd069b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa6dd058ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dd058ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dd058e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dd056020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0561b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dd056340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd0564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa6dd079100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa6dd079100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd079480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa6dd071370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa6dd071370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0716f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd071880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa6dd06e480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dd06e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06e800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa6dd066e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dd066e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd064210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa6dd06ae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dd06ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd069210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa6dd064670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dd064670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0649f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd064b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa6dd06d670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dd06d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa6dd077450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa6dd077450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0777d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa6dd06de50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dd06de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd06b210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd06b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd07ba80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd07ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd07be00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd07a020"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd07a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd07a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd07a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa6dd073020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dd073020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa6dd073cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa6dd073cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0710a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa6dd05c2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa6dd05c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05c670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd05c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa6dd05dad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dd05dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05de50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd05c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa6dd075450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dd075450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0757d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa6dd05d2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dd05d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05d670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd05d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa6dd0592f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa6dd0592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd059670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd059800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa6dd067e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dd067e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd066210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa6dd062670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa6dd062670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0629f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd062b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa6dd077aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa6dd077aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd077e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa6dd076770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dd076770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd076af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa6dd069e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dd069e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd068210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa6dd073670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa6dd073670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0739f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa6dd068670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa6dd068670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0689f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd068b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa6dd060e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa6dd060e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd05f610"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd05f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa6dd0567a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dd0567a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dd056b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dd056cb0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd056e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dd055020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd0551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa6dd041c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dd041c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd040210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa6dd04cda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa6dd04cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd04b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa6dd045b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dd045b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd044020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa6dd03f670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dd03f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa6dd038e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa6dd038e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd037210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa6dd03fe50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa6dd03fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03e210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa6dd02b2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dd02b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd02b670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa6dd02d2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa6dd02d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd02d670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa6dd04a120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dd04a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd04a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa6dd033670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa6dd033670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0339f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd033b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa6dd02f2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dd02f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd02f670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa6dd044c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa6dd044c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd042020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa6dd042c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dd042c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd041020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa6dd039670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dd039670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0399f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd039b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa6dd03be50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa6dd03be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03a210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa6dd03e670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dd03e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa6dd04d760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dd04d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa6dd04dae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa6dd04dc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa6dd04de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa6dd048aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dd048aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd048e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa6dd047120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa6dd047120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0475a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa6dd032a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dd032a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd032df0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd031020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa6dd047870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dd047870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd047bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa6dd02fad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dd02fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd02fe50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa6dd04adc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dd04adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd048180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa6dd034e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa6dd034e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd033210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa6dd042480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dd042480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd042800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd042990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa6dd044480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dd044480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd044800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd044990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa6dd04c750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dd04c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd04cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa6dd035e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dd035e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd034210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa6dd037670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa6dd037670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0379f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd037b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa6dd034670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dd034670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0349f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd034b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa6dd02cad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dd02cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd02ce50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa6dd02dad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa6dd02dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd02de50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa6dd03a670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa6dd03a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa6dd037e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa6dd037e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd035210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa6dd030ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dd030ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd030e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa6dd03d670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dd03d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa6dd02bad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dd02bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dd02be50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dd02a020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dd02a340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd02a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa6dd04c100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa6dd04c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd04c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa6dd045370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa6dd045370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0456f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd045880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa6dd041480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dd041480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd041800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd041990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa6dd039e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dd039e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd038210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa6dd03ee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dd03ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03d210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa6dd038670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dd038670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0389f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd038b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa6dd040670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dd040670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0409f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd040b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa6dd04b450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa6dd04b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd04b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa6dd040e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dd040e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03f210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dd04e9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dd04e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dd04ed60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dd04d020"/>
        <function-ref name="request" scoped="" ref="0x7fa6dd04d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dd04d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dd04d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa6dd046020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dd046020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa6dd046cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa6dd046cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0450a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa6dd0302f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa6dd0302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd030670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd030800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa6dd031ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dd031ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd031e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd030020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa6dd048450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dd048450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0487d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa6dd0312f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dd0312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd031670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd031800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa6dd02c2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa6dd02c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd02c670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa6dd03ae50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dd03ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd039210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa6dd035670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa6dd035670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd0359f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd035b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa6dd04baa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa6dd04baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd04be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa6dd04a770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dd04a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd04aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa6dd03de50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dd03de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03b210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa6dd046670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa6dd046670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dd0469f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa6dd03b670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa6dd03b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd03b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd03bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa6dd033e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa6dd033e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dd032610"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd0327a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa6dd02a7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dd02a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dd02ab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dd02acb0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dd02ae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dd029020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dd0291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fa6dd022b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa6dd022b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa6dd01f020"/>
        <function-ref name="changed" scoped="" ref="0x7fa6dd01f1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa6dd01f340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa6dd01f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fa6dd021d70" loc="40:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa6dd021d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fa6dd00a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa6dcff8cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dcff8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa6dcff70a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa6dcff7230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa6dcff73c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa6dcff7550"/>
        <function-ref name="setCca" scoped="" ref="0x7fa6dcff76e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa6dcff7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fa6dcff4990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa6dcff4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa6dcff4d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fa6dcff8020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa6dcff8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcff83a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcff8530"/>
        <function-ref name="modify" scoped="" ref="0x7fa6dcff86c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcff8850"/>
        <function-ref name="resend" scoped="" ref="0x7fa6dcff89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa6dcffb6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa6dcffb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dcffba40"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcffbbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fa6dcff6150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fa6dcff6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa6dcff64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa6dcfed650" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dcfed650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa6dcfed9d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa6dcfedb60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa6dcfedcf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa6dcfede80"/>
        <function-ref name="setCca" scoped="" ref="0x7fa6dcfec030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa6dcfec1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fa6dcfe57c0" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa6dcfe57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa6dcfe4d50"/>
        <function-ref name="clear" scoped="" ref="0x7fa6dcfe24c0"/>
        <function-ref name="isValid" scoped="" ref="0x7fa6dcfe4620"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcfe2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fa6dcfcc020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dcfcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcfcc3a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcfcc530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fa6dcfcc890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa6dcfcc890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcfccc10"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcfccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fa6dcfec5e0" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa6dcfec5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa6dcfec960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fa6dcfcf530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dcfcf530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcfcf8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fa6dcfe0880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fa6dcfe0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa6dcfe0c00"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dcfe0d90"/>
        <function-ref name="captured" scoped="" ref="0x7fa6dcfdf020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa6dcfdf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fa6dcfeb7f0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fa6dcfeb7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dcfe7090"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dcfe9090"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dcfe9a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dcfe9550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dcfe7550"/>
        <function-ref name="start" scoped="" ref="0x7fa6dcfea6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcfeabb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa6dcfe7a00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dcfe7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa6dcfe7d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa6dcfe6020"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa6dcfe61b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa6dcfe6340"/>
        <function-ref name="getPower" scoped="" ref="0x7fa6dcfe64d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa6dcfe6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fa6dcfd1550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dcfd1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcfd18d0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcfd1a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fa6dcfd1e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dcfd1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcfd01c0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcfd0350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fa6dcfc5d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fa6dcfc5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcfc80e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fa6dcfc8270"/>
        <function-ref name="sfd" scoped="" ref="0x7fa6dcfc8400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6dcfee8c0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dcfee8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcfeec40"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcfeedd0"/>
        <function-ref name="modify" scoped="" ref="0x7fa6dcfed020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcfed1b0"/>
        <function-ref name="resend" scoped="" ref="0x7fa6dcfed340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fa6dcfd3d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dcfd3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa6dcfd20e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa6dcfd2270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa6dcfd2400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fa6dcfcfc60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dcfcfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcfce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fa6dcfd6820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa6dcfd6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dcfd6ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dcfd6d30"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dcfd5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dcfd51b0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dcfd5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dcfd54d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcfd5660"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dcfd57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dcfef820" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dcfef820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dcfefba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa6dcfe69a0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcfe69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcfe6d20"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa6dcfe5020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa6dcfe51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fa6dcfd8b30" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa6dcfd8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dcfe0020"/>
        <function-ref name="isSet" scoped="" ref="0x7fa6dcfe01b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcfe0340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcfe04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fa6dcfce3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dcfce3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcfce960"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcfceaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa6dcfd3020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa6dcfd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dcfd33a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dcfd3530"/>
        <function-ref name="request" scoped="" ref="0x7fa6dcfd36c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dcfd3850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dcfd39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fa6dcfdf500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fa6dcfdf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dcfdf980"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dcfdfb10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dcfdfca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dcfdfe30"/>
        <function-ref name="get" scoped="" ref="0x7fa6dcfd6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dcfd61b0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcfd6340"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dcfd64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fa6dcfca130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa6dcfca130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcfca4b0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcfca640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fa6dcfca9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dcfca9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcfcad40"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcfc9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fa6dcfd06d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa6dcfd06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcfd0a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fa6dcfd5b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fa6dcfd5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dcfd4020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dcfd41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dcfd4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dcfd44d0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dcfd4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dcfd47f0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcfd4980"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dcfd4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dcfc86c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dcfc86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dcfc8a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dcfc8bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dcfc8d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dcfc7020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dcfc71b0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dcfc7340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dcfc74d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dcfc7b10"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcfc7660"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dcfc77f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dcfc7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fa6dcfcd5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dcfcd5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcfcd960"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcfcdaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa6dcfee020" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa6dcfee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dcfee3a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcfee530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fa6dcfd2780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dcfd2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dcfd2b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dcfd2c90"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcfd2e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dcfd1020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dcfd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fa6dcfd0de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa6dcfd0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcfcf180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fa6dcfcee80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa6dcfcee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcfcd220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fa6dcfecd70" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fa6dcfecd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa6dcfeb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa6dcf2bc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dcf2bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf2a210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf2a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa6dcf34020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa6dcf34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa6dcf2ec70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dcf2ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf2d020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf2d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa6dcf28670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dcf28670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf289f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf28b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa6dcf21e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa6dcf21e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf20210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa6dcf28e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa6dcf28e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf27210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa6dcf152f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dcf152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf15670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf15800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa6dcf172f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa6dcf172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf17670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf17800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa6dcf33370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dcf33370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf336f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa6dcf1d670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa6dcf1d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf1db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa6dcf182f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dcf182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf18670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf18800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa6dcf2dc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa6dcf2dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf2c020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa6dcf2cc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dcf2cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf2b020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa6dcf23670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dcf23670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf239f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf23b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa6dcf25e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa6dcf25e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf24210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa6dcf27670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dcf27670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf279f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf27b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa6dcf378f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dcf378f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa6dcf37c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa6dcf37e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa6dcf36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa6dcf32d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dcf32d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf310a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa6dcf31370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa6dcf31370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa6dcf1ca70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dcf1ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1cdf0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa6dcf31ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dcf31ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf31e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa6dcf18ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dcf18ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf18e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa6dcf32060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dcf32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf323e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa6dcf1ee50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa6dcf1ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1d210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa6dcf2c480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dcf2c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf2c800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf2c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa6dcf2d480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dcf2d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf2d800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf2d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa6dcf36940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dcf36940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf36cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa6dcf1fe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dcf1fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1e210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf1e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa6dcf20670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa6dcf20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf209f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf20b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa6dcf1e670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dcf1e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf1eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa6dcf16ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dcf16ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf16e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa6dcf17ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa6dcf17ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf17e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa6dcf24670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa6dcf24670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf249f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf24b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa6dcf20e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa6dcf20e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1f210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf1f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa6dcf19ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dcf19ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf19e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa6dcf26670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dcf26670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf269f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf26b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa6dcf15ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dcf15ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dcf15e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dcf13020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf131b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dcf13340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dcf134d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa6dcf362f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa6dcf362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf36670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa6dcf2e490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa6dcf2e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf2e810"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf2e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa6dcf2b480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dcf2b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf2b800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf2b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa6dcf23e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dcf23e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf21210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa6dcf27e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dcf27e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf26210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa6dcf21670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dcf21670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf219f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf21b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa6dcf2a670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dcf2a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf2a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf2ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa6dcf34670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa6dcf34670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf349f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa6dcf2ae50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dcf2ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf28210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dcf38c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dcf38c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dcf37020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dcf371b0"/>
        <function-ref name="request" scoped="" ref="0x7fa6dcf37340"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dcf374d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dcf37660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa6dcf30160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dcf30160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf304e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa6dcf30e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa6dcf30e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf2e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa6dcf192f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa6dcf192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf19670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf19800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa6dcf1aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dcf1aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1ae50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa6dcf326b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dcf326b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf32a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa6dcf1a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dcf1a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1a670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf1a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa6dcf162f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa6dcf162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf16670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf16800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa6dcf24e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dcf24e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf23210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa6dcf1f670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa6dcf1f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf1fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa6dcf34cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa6dcf34cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf330a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa6dcf339c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dcf339c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf33d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa6dcf26e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dcf26e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf25210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa6dcf307b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa6dcf307b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcf30b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa6dcf25670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa6dcf25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf259f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf25b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa6dcf1de50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa6dcf1de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcf1c610"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf1c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa6dcf137a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dcf137a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dcf13b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dcf13cb0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcf13e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dcf12020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dcf121b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fa6dcf07df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fa6dcf07df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcf041c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fa6dcf04350"/>
        <function-ref name="sfd" scoped="" ref="0x7fa6dcf044e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dcf047c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dcf047c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcf04b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fa6dcf03020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fa6dcf03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa6dcf033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa6dcf075c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa6dcf075c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dcf07940"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcf07ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fa6dcefc380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fa6dcefc380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dcefc700"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dcefc890"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dcefca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dcefcbb0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dcefcd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dcefb020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcefb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dcefb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fa6dcef4b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dcef4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa6dcef3020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa6dcef31b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa6dcef3340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa6dcef34d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa6dcef3660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa6dcef37f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa6dcef3980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa6dcef3b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa6dcef3ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa6dcef3e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa6dcef2020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa6dcef21b0"/>
        <function-ref name="sync" scoped="" ref="0x7fa6dcef2340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa6dcef25d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa6dcef2760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fa6dcedd9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fa6dcedd9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dceddd50"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dcedc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fa6dcef2d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa6dcef2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa6dcef0330"/>
        <function-ref name="clear" scoped="" ref="0x7fa6dcef0a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fa6dcef1ba0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dceef210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fa6dcefb6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fa6dcefb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dcefba30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dcefbbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dcefbd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dcefa020"/>
        <function-ref name="get" scoped="" ref="0x7fa6dcefa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dcefa340"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcefa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dcefa660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fa6dceedcb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dceedcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dceec0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dceec230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fa6dceec590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa6dceec590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dceec910"/>
        <function-ref name="write" scoped="" ref="0x7fa6dceecaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fa6dceeb6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dceeb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dceeba50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dceebbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa6dcef5330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dcef5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa6dcef56b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa6dcef5840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa6dcef59d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa6dcef5b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fa6dcef5cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa6dcef5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fa6dceff550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fa6dceff550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dceff8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fa6dceffa60"/>
        <function-ref name="sfd" scoped="" ref="0x7fa6dceffbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fa6dcef73a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa6dcef73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcef7720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fa6dcefd020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa6dcefd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa6dcefd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa6dcefd530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa6dcefd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa6dcefd850"/>
        <function-ref name="get" scoped="" ref="0x7fa6dcefd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa6dcefdb70"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcefdd00"/>
        <function-ref name="clr" scoped="" ref="0x7fa6dcefc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fa6dceea020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dceea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dceea3a0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dceea530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dcf00620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dcf00620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dcf009a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa6dcef41e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcef41e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcef4560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa6dcef46f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa6dcef4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dcefe020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dcefe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcefe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa6dcef96e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa6dcef96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dcef9a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dcef9bf0"/>
        <function-ref name="request" scoped="" ref="0x7fa6dcef9d80"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dcef8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dcef81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fa6dceece00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa6dceece00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dceeb1c0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dceeb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fa6dcef8530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dcef8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dcef88b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dcef8a40"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcef8bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dcef8d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dcef7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fa6dceea8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa6dceea8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dceeae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fa6dcefe7c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fa6dcefe7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa6dcefeb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dcee9150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dcee9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dcee94d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dcee9660"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dcee97f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dcee9980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dcee9b10"/>
        <function-ref name="get" scoped="" ref="0x7fa6dcee9ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dcee9e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dcee84d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcee8020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dcee81b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dcee8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fa6dceed3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dceed3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dceed760"/>
        <function-ref name="write" scoped="" ref="0x7fa6dceed8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fa6dceefb10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dceefb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dceed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fa6dcefaa50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa6dcefaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa6dcefadd0"/>
        <function-ref name="disable" scoped="" ref="0x7fa6dcef9020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa6dcef91b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa6dcef9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fa6dcef7ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dcef7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcef5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa6dcf00ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa6dcf00ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa6dceff0a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dceff230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa6dce7da70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dce7da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa6dce7ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa6dce81670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce81670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa6dce819f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa6dce81b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa6dce81d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa6dce7e020"/>
        <function-ref name="getPower" scoped="" ref="0x7fa6dce7e1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa6dce7e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fa6dce7b550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa6dce7b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa6dce7ab00"/>
        <function-ref name="clear" scoped="" ref="0x7fa6dce792a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fa6dce7a3d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dce799d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fa6dce7d0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce7d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dce7d440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa6dce7d5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa6dce7d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fa6dce74480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa6dce74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dce74800"/>
        <function-ref name="isSet" scoped="" ref="0x7fa6dce74990"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dce74b20"/>
        <function-ref name="set" scoped="" ref="0x7fa6dce74cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa6dce78660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa6dce78660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa6dce76ce0"/>
        <function-ref name="clear" scoped="" ref="0x7fa6dce75460"/>
        <function-ref name="isValid" scoped="" ref="0x7fa6dce765b0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dce75b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa6dce7e6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa6dce7e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa6dce7ea60"/>
        <function-ref name="noAck" scoped="" ref="0x7fa6dce7ebf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa6dce7ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa6dce6d020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa6dce6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa6dce6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa6dce72d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dce72d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa6dce6f0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa6dce6f270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa6dce6f400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa6dce6f590"/>
        <function-ref name="getPower" scoped="" ref="0x7fa6dce6f720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa6dce6f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa6dce644a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6dce644a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dce64820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dce649b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dce64b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dce64cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dce64e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fa6dce6da80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa6dce6da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa6dce6b020"/>
        <function-ref name="clear" scoped="" ref="0x7fa6dce6b750"/>
        <function-ref name="isValid" scoped="" ref="0x7fa6dce6c8d0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dce6be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fa6dce6e640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dce6e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dce6e9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa6dce6eb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa6dce6ece0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fa6dce658b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa6dce658b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dce65c30"/>
        <function-ref name="isSet" scoped="" ref="0x7fa6dce65dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dce64020"/>
        <function-ref name="set" scoped="" ref="0x7fa6dce641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fa6dce633b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fa6dce633b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dce62020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fa6dce626e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fa6dce626e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dce613d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa6dce69af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa6dce69af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa6dce670d0"/>
        <function-ref name="clear" scoped="" ref="0x7fa6dce67800"/>
        <function-ref name="isValid" scoped="" ref="0x7fa6dce68970"/>
        <function-ref name="set" scoped="" ref="0x7fa6dce65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa6dce6fc50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa6dce6fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa6dce6e020"/>
        <function-ref name="noAck" scoped="" ref="0x7fa6dce6e1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa6dce6e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa6dce12cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa6dce12cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dce11980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa6dce10020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dce10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dce10e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dce0f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dce0f340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dce0fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fa6dce09700" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fa6dce09700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dce06c40"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dce071e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa6dce06020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa6dce07ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa6dce04590"/>
        <function-ref name="gett0" scoped="" ref="0x7fa6dce04110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dce07660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa6dce08390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa6dce06630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa6dce08860"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dce08d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa6dce04b80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa6dce04b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dce037d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dce0c920" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dce0c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dce0cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa6dcdd5af0" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa6dcdd5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dcdd2390"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dcdd3360"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dcdd3ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dcdd3820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dcdd2850"/>
        <function-ref name="start" scoped="" ref="0x7fa6dcdd4970"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcdd4e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dcdd52a0" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dcdd52a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dcdd5620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa6dc1fe260" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa6dc1fe260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dc1fbb30"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc1fda60"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dc1fb4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dc1fb020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dc1fa020"/>
        <function-ref name="start" scoped="" ref="0x7fa6dc1fd090"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc1fd5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dc1ff9d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dc1ff9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dc1ffd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa6dc1e3a80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc1e3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6dc1e3e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6dc1e2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6dc1e21b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6dc1e2340"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc1e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa6dc1e6020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc1e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dc1e63a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dc1e6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dc1e66c0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dc1e6850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dc1e69e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dc1e6b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dc1e6d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dc1e4020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dc1e41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6dc1e4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6dc1e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa6dc1e4760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc1e4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6dc1e4ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6dc1e4c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dc1e4e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6dc1e3020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6dc1e31b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dc1e3340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6dc1e34d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6dc1e3660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6dc1e37f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fa6dc1d9760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa6dc1d9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa6dc1d9ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa6dc1d9c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa6dc1d9e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa6dc1d8020"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc1d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa6dc1dddd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa6dc1dddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dc1db180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa6dc1db310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dc1db4a0"/>
        <function-ref name="get" scoped="" ref="0x7fa6dc1db630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dc1db7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dc1db950"/>
        <function-ref name="getMode" scoped="" ref="0x7fa6dc1dbae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dc1dbc70"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dc1dbe00"/>
        <function-ref name="setMode" scoped="" ref="0x7fa6dc1da020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa6dc1da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa6dc1e0bf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa6dc1e0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dc1dd4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc1de4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dc1dee60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dc1de9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dc1dd9a0"/>
        <function-ref name="start" scoped="" ref="0x7fa6dc1dfa80"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc1de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dc1e0360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dc1e0360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dc1e06e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa6dc1da440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa6dc1da440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa6dc1da7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa6dc1da950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa6dc1daae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa6dc1dac70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa6dc1dae00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa6dc1d9020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa6dc1d91b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa6dc1d9340"/>
        <function-ref name="setControl" scoped="" ref="0x7fa6dc1d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa6dcdf1080" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dcdf1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dcdf0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dcdf09a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dcdf04e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dcdf0e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fa6dcde90f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fa6dcde90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dcde7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dcde79a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dcde74e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dcde7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa6dcdedcd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dcdedcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dcdebb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dcdea550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dcdea090"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dcdeaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa6dc1f85f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa6dc1f85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dc1f6e50"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc1f7e00"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dc1f6800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dc1f6340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dc1f4340"/>
        <function-ref name="start" scoped="" ref="0x7fa6dc1f7430"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc1f7940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fa6dc1f2d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fa6dc1f2d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9ced0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa6ddd9b270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dc1ed670"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dc1ee550"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dc1ed020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dc1eea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dc1edb30"/>
        <function-ref name="start" scoped="" ref="0x7fa6dc1efb60"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dc1ee090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa6dc1f49b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dc1f49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dc1f37e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dc1f21b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dc1f3ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dc1f2670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fa6dcd9d020" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fa6dcd9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dcd9d3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dcd9d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fa6dcda2cd0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa6dcda2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dcd9e670"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dcda0550"/>
        <function-ref name="startAt" scoped="" ref="0x7fa6dcd9e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dcda0a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa6dcd9eb30"/>
        <function-ref name="start" scoped="" ref="0x7fa6dcda1b60"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcda0090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa6dcda7830" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6dcda7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dcda3cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dcda5300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa6dcda30d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa6dcda5c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fa6dcda2660"/>
        <function-ref name="gett0" scoped="" ref="0x7fa6dcda21e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dcda5780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa6dcda6480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa6dcda36e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa6dcda6950"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcda6e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fa6dcd4da00" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fa6dcd4da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dcd4dd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dcd4c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fa6dcd52640" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fa6dcd52640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dcd4ec40"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dcd4f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa6dcd4e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa6dcd4fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa6dcd4d590"/>
        <function-ref name="gett0" scoped="" ref="0x7fa6dcd4d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dcd4f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa6dcd51390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa6dcd4e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa6dcd51860"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcd51d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa6dcd58150" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6dcd58150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dcd54700"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dcd57c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa6dcd55a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa6dcd555b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa6dcd52090"/>
        <function-ref name="gett0" scoped="" ref="0x7fa6dcd54ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dcd55110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa6dcd58d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa6dcd540d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa6dcd572a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcd57790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa6dcd4a2b0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa6dcd4a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dcd48020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa6dcd48690" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa6dcd48690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa6dcd475b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa6dcd46020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa6dcd47a70"/>
        <function-ref name="overflow" scoped="" ref="0x7fa6dcd464e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa6dcd3f8c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6dcd3f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dcd2ccf0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dcd2d320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa6dcd2c0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa6dcd2dc20"/>
        <function-ref name="getdt" scoped="" ref="0x7fa6dcd2a660"/>
        <function-ref name="gett0" scoped="" ref="0x7fa6dcd2a1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dcd2d7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa6dcd2e4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa6dcd2c6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa6dcd2e9b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcd2ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fa6dcd362c0" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fa6dcd362c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dcd33870"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dcd35e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa6dcd34c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa6dcd34780"/>
        <function-ref name="getdt" scoped="" ref="0x7fa6dcd311e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa6dcd33cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dcd34300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa6dcd35020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa6dcd33260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa6dcd354f0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcd359c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa6dcd1ac60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa6dcd1ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd19210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd193a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa6dcd24020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa6dcd24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa6dcd1ec70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa6dcd1ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd1c020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa6dcd18670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa6dcd18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd189f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd18b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa6dcd11e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa6dcd11e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd10210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa6dcd18e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa6dcd18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd17210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa6dcd042f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa6dcd042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd04670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd04800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa6dcd062f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa6dcd062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd06670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd06800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa6dcd22370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa6dcd22370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd226f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa6dcd0c670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa6dcd0c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd0cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa6dcd072f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa6dcd072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd07670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd07800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa6dcd1cc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa6dcd1cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd1b020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa6dcd1bc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa6dcd1bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd1a020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa6dcd12670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa6dcd12670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd129f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd12b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa6dcd14e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa6dcd14e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd13210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa6dcd17670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa6dcd17670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd179f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd17b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa6dcd26970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa6dcd26970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa6dcd26cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa6dcd26e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa6dcd25030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa6dcd21d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa6dcd21d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd200a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa6dcd20370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa6dcd20370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa6dcd0ba70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa6dcd0ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0bdf0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa6dcd20ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa6dcd20ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd20e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa6dcd07ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa6dcd07ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd07e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa6dcd21060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa6dcd21060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd213e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa6dcd0de50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa6dcd0de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0c210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd0c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa6dcd1b480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa6dcd1b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd1b800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd1b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa6dcd1c480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa6dcd1c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd1c800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd1c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa6dcd25950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa6dcd25950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd25cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa6dcd0ee50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa6dcd0ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0d210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd0d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa6dcd10670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa6dcd10670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd109f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd10b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa6dcd0d670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa6dcd0d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd0db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa6dcd05ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa6dcd05ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd05e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa6dcd06ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa6dcd06ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd06e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa6dcd13670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa6dcd13670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd139f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd13b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa6dcd10e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa6dcd10e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0e210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd0e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa6dcd09ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa6dcd09ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd09e50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa6dcd15670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa6dcd15670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd159f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd15b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa6dcd04ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa6dcd04ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dcd04e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dcd03020"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd031b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dcd03340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dcd034d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa6dcd25300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa6dcd25300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd25680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa6dcd1e490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa6dcd1e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd1e810"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd1e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa6dcd1a480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa6dcd1a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd1a800"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd1a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa6dcd12e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa6dcd12e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd11210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa6dcd17e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa6dcd17e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd15210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa6dcd11670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa6dcd11670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd119f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd11b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa6dcd19670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa6dcd19670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd199f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd19b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa6dcd24670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa6dcd24670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd249f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa6dcd19e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa6dcd19e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd18210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dcd27d00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dcd27d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dcd260a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dcd26230"/>
        <function-ref name="request" scoped="" ref="0x7fa6dcd263c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dcd26550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dcd266e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa6dcd1f160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa6dcd1f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd1f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa6dcd1fe00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa6dcd1fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd1e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa6dcd092f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa6dcd092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd09670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd09800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa6dcd0aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa6dcd0aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0ae50"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa6dcd216b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa6dcd216b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd21a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa6dcd0a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa6dcd0a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0a670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd0a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa6dcd052f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa6dcd052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd05670"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd05800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa6dcd13e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa6dcd13e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd12210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa6dcd0e670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa6dcd0e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd0eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa6dcd24cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa6dcd24cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd220a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa6dcd229c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa6dcd229c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd22d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa6dcd15e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa6dcd15e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd14210"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa6dcd1f7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa6dcd1f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa6dcd1fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa6dcd14670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa6dcd14670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd149f0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd14b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa6dcd0ce50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa6dcd0ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa6dcd0b610"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd0b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa6dcd037a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa6dcd037a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa6dcd03b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa6dcd03cb0"/>
        <function-ref name="write" scoped="" ref="0x7fa6dcd03e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa6dcd02020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa6dcd021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fa6dccd9a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa6dccd9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa6dccd9da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fa6dccd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fa6dccd7920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fa6dccd7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dccd9560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dccdd990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dccdd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dccddd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fa6dccd2a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa6dccd2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa6dccd2da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fa6dcccd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fa6dccd4940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fa6dccd4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dccd2560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dccd4080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dccd4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dccd4400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa6dccdbaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa6dccdbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dccdbe20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dccd5020"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dccd51b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dccd5340"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dccd54d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dccd5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa6dccb73b0" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa6dccb73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dccb7730"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dccb78c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dccb7a50"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dccb7be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dccb7d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6dccba4d0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dccba4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dccba850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dccba9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dccbab70"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dccbad00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dccb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa6dccb2110" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa6dccb2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dccb2490"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dccb2620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dccb27b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dccb2940"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dccb2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6dccb6d50" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dccb6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dccb3100"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dccb3290"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dccb3420"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dccb35b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dccb3740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fa6dccb1be0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa6dccb1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa6dccb0020"/>
        <function-ref name="rand32" scoped="" ref="0x7fa6dccb01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dccb39c0" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dccb39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dccb3d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa6dccb04b0" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dccb04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dccb0830"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa6dccb09c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa6dccb0b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fa6dccb2d60" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa6dccb2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dccb1180"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dccb1310"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dccb14a0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dccb1630"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dccb17c0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dccb1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa6dccb4b00" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa6dccb4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dccb4e80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dcc9e030"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dcc9e1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dcc9e350"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dcc9e4e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dcc9e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa6dcc98b80" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc98b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dcc9bd00" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dcc9bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc980a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fa6dcc98430" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa6dcc98430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc987b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa6dcc92770" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc92770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc92af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dcc92020" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dcc92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dcc923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dcc931e0" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dcc931e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc93560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa6dcc92df0" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcc92df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc911c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa6dcc91350"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa6dcc914e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fa6dcc938f0" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa6dcc938f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc93c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa6dcc63200" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc63200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc63580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa6dcc63890" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa6dcc63890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcc63c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc63da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcc62020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcc621b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcc62340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6dcc68c60" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dcc68c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcc67020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc671b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcc67340"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcc674d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcc67660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fa6dcc66020" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fa6dcc66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcc663a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc66530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcc666c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcc66850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcc669e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dcc67900" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dcc67900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc67c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dcc68020" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dcc68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dcc683a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dcc68530"/>
        <function-ref name="request" scoped="" ref="0x7fa6dcc686c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dcc68850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dcc689e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fa6dcc66d50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fa6dcc66d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc65100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fa6dcc65440" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fa6dcc65440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dcc657c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dcc65950"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc65ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcc65c70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dcc65e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa6dcc5ae20" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa6dcc5ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcc591c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc59350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcc594e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcc59670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcc59800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa6dcc59b50" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcc59b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fa6dcc2adb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fa6dcc2adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa6dcc29180"/>
        <function-ref name="runTask" scoped="" ref="0x7fa6dcc29310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa6dcc582f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dcc582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa6dcc58670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa6dcc58800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa6dcc58990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa6dcc58b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fa6dcc58cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa6dcc58e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fa6dcc5cbb0" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fa6dcc5cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcc5b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc5b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcc5b340"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcc5b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcc5b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa6dcc57b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa6dcc57b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa6dcc55020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa6dcc551b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa6dcc55340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa6dcc554d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa6dcc57170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcc57170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc574f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa6dcc57680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa6dcc57810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fa6dcc5c500" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fa6dcc5c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc5c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa6dcc5e910" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa6dcc5e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dcc5ec90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dcc5ee20"/>
        <function-ref name="request" scoped="" ref="0x7fa6dcc5d020"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dcc5d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dcc5d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fa6dcc5d660" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fa6dcc5d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcc5d9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc5db70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcc5dd00"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcc5c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcc5c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fa6dcc5b9d0" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fa6dcc5b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcc5bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fa6dcc5a0d0" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fa6dcc5a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dcc5a450"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dcc5a5e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcc5a770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcc5a900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dcc5aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa6dcc0add0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa6dcc0add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa6dcc09180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa6dcc09410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa6dcc09410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa6dcc09790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa6dcc09920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa6dcc09ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa6dcc09c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa6dcbfeb80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa6dcbfeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6dcbfd020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6dcbfd1b0"/>
        <function-ref name="start" scoped="" ref="0x7fa6dcbfd340"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcbfd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa6dcbfc860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa6dcbfc860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcbfcbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcbfcd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcbfb020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcbfb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcbfb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa6dcbfb690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcbfb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcbfba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6dcc02ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dcc02ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcbff0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcbff230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcbff3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcbff550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcbff6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa6dcbfe080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dcbfe080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa6dcbfe400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa6dcbfe590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa6dcbfe720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa6dcbfe8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fa6dcbfd800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fa6dcbfd800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dcbfdb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dcbfdd10"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dcbfc020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dcbfc1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dcbfc340"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dcbfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fa6dcbfbd90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fa6dcbfbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa6dcbfa180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa6dcbfa310"/>
        <function-ref name="start" scoped="" ref="0x7fa6dcbfa4a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcbfa630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dcbff980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dcbff980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcbffd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa6dcbf72d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa6dcbf72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa6dcbf7650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa6dcbf77e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa6dcbf7970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa6dcbf7b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa6dcbf9580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa6dcbf9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa6dcbf9900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa6dcbf9a90"/>
        <function-ref name="isState" scoped="" ref="0x7fa6dcbf9c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa6dcbf9db0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa6dcbf8020"/>
        <function-ref name="forceState" scoped="" ref="0x7fa6dcbf81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa6dcbe9d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa6dcbe9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcbe8180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcbe8310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcbe84a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcbe8630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcbe87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa6dcbec350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa6dcbec350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcbec6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcbec860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcbec9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcbecb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcbecd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa6dcbe9020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa6dcbe9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa6dcbe93a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa6dcbe9530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa6dcbe96c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa6dcbe9850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa6dcbe99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fa6dcbe41c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa6dcbe41c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa6dcbe4540"/>
        <function-ref name="noAck" scoped="" ref="0x7fa6dcbe46d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa6dcbe4860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa6dcbe7410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa6dcbe7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa6dcbe7790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa6dcbe7920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa6dcbe7ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa6dcbe7c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa6dcbe7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa6dcbc4690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa6dcbc4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcbc4a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa6dcbc6860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa6dcbc6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcbc6be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcbc6d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcbc4020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcbc41b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcbc4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fa6dcbc2610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa6dcbc2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa6dcbc2990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa6dcbc2b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa6dcbc2cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa6dcbc2e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa6dcbc1020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa6dcbc11b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa6dcbc1340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa6dcbc14d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa6dcbc1660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa6dcbc17f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa6dcbc1980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa6dcbc1b10"/>
        <function-ref name="sync" scoped="" ref="0x7fa6dcbc1ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa6dcbc0020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa6dcbc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa6dcbc78b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa6dcbc78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa6dcbc7c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa6dcbc7dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa6dcbc6020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa6dcbc61b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa6dcbc6340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa6dcbc64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa6dcbc8ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fa6dcbc8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa6dcbc70a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fa6dcbbf1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fa6dcbbf1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa6dcbbf570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa6dcbbf700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa6dcbbf890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa6dcbbfa20"/>
        <function-ref name="setCca" scoped="" ref="0x7fa6dcbbfbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa6dcbbfd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa6dcbc9a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa6dcbc9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa6dcbc9e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa6dcbc8020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcbc81b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcbc8340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa6dcbc84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa6dcbcc020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa6dcbcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa6dcbcc3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcbcc530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa6dcbcc6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa6dcbcc850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa6dcbcc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa6dcbcbdf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fa6dcbcbdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcbca1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa6dcbc4ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa6dcbc4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa6dcbc30a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa6dcbc3230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa6dcbc33c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa6dcbc3550"/>
        <function-ref name="getPower" scoped="" ref="0x7fa6dcbc36e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa6dcbc3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fa6dcbc04d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa6dcbc04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa6dcbc0950"/>
        <function-ref name="changed" scoped="" ref="0x7fa6dcbc0ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa6dcbc0c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa6dcbc0e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa6dcbc3b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa6dcbc3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa6dcbc2020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa6dcbc21b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa6dcbc2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa6dcbcb210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa6dcbcb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa6dcbcb590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa6dcbbed30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa6dcbbed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa6dcbbd0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa6dcbbd270"/>
        <function-ref name="led1On" scoped="" ref="0x7fa6dcbbd400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa6dcbbd590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa6dcbbd720"/>
        <function-ref name="get" scoped="" ref="0x7fa6dcbbd8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa6dcbbda40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa6dcbbc1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa6dcbbdbd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa6dcbbdd60"/>
        <function-ref name="led2On" scoped="" ref="0x7fa6dcbbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa6dcbca470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa6dcbca470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa6dcbca7f0"/>
        <function-ref name="source" scoped="" ref="0x7fa6dcbca980"/>
        <function-ref name="address" scoped="" ref="0x7fa6dcbcab10"/>
        <function-ref name="destination" scoped="" ref="0x7fa6dcbcaca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa6dcbcae30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa6dcbc9020"/>
        <function-ref name="type" scoped="" ref="0x7fa6dcbc91b0"/>
        <function-ref name="setType" scoped="" ref="0x7fa6dcbc9340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa6dcbc94d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa6dcbc9660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa6dcbc97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fa6dcbbe0f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fa6dcbbe0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa6dcbbe470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa6dcbbe600"/>
        <function-ref name="request" scoped="" ref="0x7fa6dcbbe790"/>
        <function-ref name="granted" scoped="" ref="0x7fa6dcbbe920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa6dcbbeab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa6dcb348c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestAMAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa6dcb348c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa6ddd9c720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa6ddd9ca90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa6dcb31cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fa6dcb32320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa6dcb310d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa6dcb32c20"/>
        <function-ref name="getdt" scoped="" ref="0x7fa6dcb2f660"/>
        <function-ref name="gett0" scoped="" ref="0x7fa6dcb2f1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa6dcb327a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa6dcb334e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa6dcb316e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa6dcb339b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa6dcb33e80"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fa6de286a40" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fa6de284690" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fa6de23d0e0" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fa6de240350" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fa6de23e990" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fa6de241bf0" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fa6de240ac0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fa6de244df0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fa6de241510" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fa6de23e270" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fa6de5c4020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fa6de8853a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fa6de1eb020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fa6de1edcc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fa6de1ef390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa6de236b60"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fa6de235650"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fa6de1eb890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fa6de1ea7b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fa6de1ed560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fa6de1ea020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fa6de1efb30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fa6de1ee350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fa6de1eeda0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa6de236b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fa6de235650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa6de1eeb20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa6de236b60"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fa6de235650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fa6de1de0e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fa6de1db730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fa6de1db4b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fa6de1da2e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa6de1da060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fa6de1ddca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fa6de1dd3e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fa6de1dea90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fa6de1de810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fa6de1e53e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fa6de1e5d60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa6de1e5ae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fa6de1e4790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fa6de1e4510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fa6de1e22a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fa6de1e2020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa6de1e2990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fa6de1f5810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fa6de1f32a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fa6de1f3020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fa6de1f4020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa6de1fbaa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fa6de1f4760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fa6de1f89b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fa6de1f5120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fa6de1f8270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fa6de1f60e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fa6de1f69f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa6de1f6770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fa6de1f3cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fa6de1f3a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa6de1b41f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fa6de3167f0" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fa6de313020" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fa6de316020" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fa6de79e810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fa6de944020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fa6de943020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fa6de944790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fa6de938270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fa6de938ac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa6de09dbb0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa6de09d260" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fa6de09d5e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6de09d910" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa6de098620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de098020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6de098350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa6de0976d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa6de09b2a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de09b020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa6de09a7f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de09a210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa6de09a560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fa6de093020" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de09fc60" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fa6de092110" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de093e10" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa6de08e490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de08fe50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6de08e1c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa6de08f560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fa6de0905e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de090020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6de090350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fa6de07dd30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa6de29e930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa6de07dab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fa6de088a10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa6de088790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fa6de09ee50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fa6de08a950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa6de08a6d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fa6de0853a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa6de087d70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa6de085110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fa6de086e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa6de086870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa6de086bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fa6de082810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa6de082590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fa6de07fb90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa6de07f5e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fa6de07f900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa6de29e550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fa6de083600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa6de083380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fa6de07c2f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa6de29e930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa6de080cf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fa6de07c060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa6de29e930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fa6de07a190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa6de29e930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fa6de078ad0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de078850" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fa6de076cd0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de076a50" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fa6de074020" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de075ce0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa6de06e5e0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de06e020" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6de06e350" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa6de069bb0" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de0695b0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6de0698e0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa6de06cd20" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa6de06b900" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de06b680" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa6de06ae00" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6de06a820" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa6de06ab70" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fa6ddffdab0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa6ddffd830" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fa6ddffb020" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa6ddffcd30" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fa6de000d60" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa6ddffc350" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fa6ddff7410" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
              <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6ddffaa80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fa6ddffadd0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6ddff7130" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="52:../../../tos/platforms/shimmer2r/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fa6ddfec020" loc="62:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="59:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fa6ddfec7d0" loc="68:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="64:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fa6ddfea020" loc="73:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="70:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fa6ddfe9020" loc="84:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="80:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fa6ddfe87d0" loc="101:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="97:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa6ddfe7020" loc="117:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="103:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fa6ddfea7b0" loc="78:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="75:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa6ddfe7b90" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="120:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fa6ddfe7910" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fa6ddfed850" loc="57:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="54:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fa6ddfe9800" loc="90:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="87:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fa6ddfe8020" loc="95:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="92:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fa6ddf7fb00" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6ddf7f4f0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fa6ddf7f870" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fa6ddf83c70" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fa6ddf80b60" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6ddf80560" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fa6ddf808d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fa6ddf62760" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa6ddf61020" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fa6ddf60e10" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fa6ddf606a0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fa6ddf6a770" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fa6ddf69be0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fa6ddf66840" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6ddf665c0" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fa6ddf684a0" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fa6ddf69350" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6ddf690d0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fa6ddf650e0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fa6ddf68d50" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fa6ddf72d70" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fa6ddf71750" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fa6ddf72400" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fa6ddf72180" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fa6ddf70350" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa6ddf700d0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fa6ddf6e350" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fa6ddf6c020" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6ddf6ecf0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fa6ddf6caf0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa6ddf6c870" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa6dde37c40" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa6dde37670" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6dde379b0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fa6dde32a70" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fa6dde327f0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fa6dde31890" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa6dde312c0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6dde31600" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fa6dde33610" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fa6dde302c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa6dde2f820" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6dde2fb60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa6dde30020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fa6dde32020" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa6dde36610" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa6dde35bd0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6dde36020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa6dde36370" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa6dde0e5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fa6dde0e330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fa6dde0edf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fa6dde0dcf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fa6dde0d700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fa6dde0da60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fa6dde0ab50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fa6dddb2270" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fa6dddb2ba0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fa6dddae070" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa6dddd6450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fa6dddd6870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fa6dddb69c0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fa6dddb7990" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fa6dddb7020" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fa6dddb61f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fa6dddb4470" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fa6ddda7510" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fa6dddaacb0" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fa6ddd9e2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6ddd9e020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fa6ddda0780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fa6ddd77af0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fa6ddd82790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fa6ddd8f530" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa6dde06360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fa6dde06ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa6ddd8f2b0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa6dde06360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fa6dde06ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fa6ddd85870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fa6ddd8ca40" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa6dde012d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fa6dde01b10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa6ddd8c7c0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa6dde012d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fa6dde01b10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fa6ddd7ce70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fa6ddd78480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fa6ddd8c020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa6dde03230"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fa6dde039c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fa6ddd8b270" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa6dde012d0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fa6dde01b10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fa6ddd87020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fa6ddd88d30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fa6ddd88610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fa6ddd7c740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fa6ddd8e780" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa6dde03230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fa6dde039c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa6ddd8e500" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa6dde03230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fa6dde039c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fa6ddd8a420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fa6ddd7a5d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fa6ddd8ae00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fa6ddd8ab80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fa6ddd86910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fa6ddd850e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fa6ddd7d840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fa6ddd80790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fa6ddd837e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fa6ddd7c020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fa6ddd81020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fa6ddd7acf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fa6ddd87800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fa6dde0f320"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fa6dde08a10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fa6ddd794c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fa6ddd77350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fa6ddd8bc10" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fa6ddd8b990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fa6ddd754d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6ddd75250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fa6ddd8fd10" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa6dde06360"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fa6dde06ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fa6ddd83020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fa6ddd81770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fa6ddd7d020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa6dddd6450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fa6dddd6870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa6ddd7ecf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa6dddd6450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fa6dddd6870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fa6ddd7e2a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fa6ddde9420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fa6ddde9840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa6ddd7e020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fa6ddde9420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fa6ddde9840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fa6ddd75d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fa6ddd79cb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fa6ddd86070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fa6ddd78be0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fa6ddd80020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fa6ddd82020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa6ddd6e410" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa6ddd6e410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa6ddd6e650" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6ddd6e650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fa6ddd6d020" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6ddd6e650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fa6ddd6c120" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fa6ddd6d8a0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fa6ddd6c880" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa6ddcf8930" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fa6ddcbaa50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fa6ddcb81f0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fa6ddcb5b10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa6ddcb5890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fa6ddcbb2d0" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fa6ddcb70e0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fa6ddcb3490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fa6ddcb8930" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa6ddcba2b0" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fa6ddcb67c0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fa6ddcbba70" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa6ddcbc420" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fa6ddcb7860" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fa6ddcb5020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fa6ddcb6070" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fa6ddcbcb50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/platforms/shimmer/chips/msp430/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fa6ddccd780" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fa6ddce0c90" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fa6ddcd4020" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa6ddcd5ca0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fa6ddce8390" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fa6ddcd17a0" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fa6ddcd9020" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fa6ddce2da0" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fa6ddcdfb70" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fa6ddce3d40" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fa6ddce3ac0" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fa6ddce4270" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fa6ddcdd900" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fa6ddcd2020" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fa6ddccd020" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fa6ddcd5560" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fa6ddcc81f0" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fa6ddcc5880" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fa6ddce7270" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fa6ddcdd190" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fa6ddcdba90" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fa6ddce2650" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fa6ddce9190" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fa6ddcd6d40" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa6ddcd6ac0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fa6ddced9f0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fa6ddcd1020" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fa6ddccc020" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fa6ddcc79a0" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fa6ddcc5120" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fa6ddcd0790" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fa6ddccc750" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fa6ddcd47b0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fa6ddcca1f0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fa6ddce7990" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fa6ddcd71f0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fa6ddccb630" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fa6ddccf790" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fa6ddcda760" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fa6ddcda4e0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fa6ddcc6190" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fa6ddcd6390" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fa6ddcd0020" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fa6ddce9c10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa6dddc2240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fa6dddc2660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa6ddce9990" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa6dddc2240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fa6dddc2660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fa6ddcdea00" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fa6ddce5a80" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa6ddce5800" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fa6ddcdb2a0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6ddcdb020" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fa6ddcca9c0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fa6ddce33b0" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fa6ddce5120" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fa6ddcd7bb0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fa6ddcd7930" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fa6ddce8ac0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fa6ddccce70" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fa6ddccf020" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fa6ddcd2790" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fa6ddcd99f0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fa6ddcd9770" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fa6ddcde2b0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fa6ddce0530" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fa6ddcc6900" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fa6ddce4bf0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa6ddce4970" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fa6ddcc89b0" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fa6ddcdf420" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fa6ddcc71f0" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fa6dd9f1730" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fa6dd9f1e60" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fa6dd9f2880" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fa6dd9f0cf0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa6dd9f1020" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fa6dd9f05b0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa6dd9f6a90" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fa6dd9f2190" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fa6dd996020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fa6dd996880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fa6dd961e00" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fa6dd95e020" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fa6dd961570" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fa6dd9606d0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fa6dd95e950" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fa6dd953020" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa6dd95a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa6dd954d20" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa6dd95a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fa6dd956020" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fa6dd956b20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa6dd95a090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa6dd9568a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa6dd95a090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fa6dd954470" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fa6dd95a090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fa6dd7eaad0" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa6dd7eaad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fa6dd7e4270" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa6dd7eaad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fa6dd7e3cb0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa6dd7eaad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fa6dd7e3a30" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa6dd7eaad0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7fa6df3d4c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7fa6df3d4c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fa6dd7e1c70" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa6dd7eaad0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fa6dd7e19f0" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7fa6dd7e7b20" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fa6dd7e6ad0" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fa6dd7e4e50" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fa6dd7eaad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fa6dd7e73b0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fa6dd7e62d0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fa6dd7bfdd0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fa6dd7bfb50" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa6dd780350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa6dd780350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fa6dd7791f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa6dd77ea60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fa6dd77b820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fa6dd77b250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fa6dd77b590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fa6dd77ca60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fa6dd778270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fa6dd779980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fa6dd77c270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fa6dd77f020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa6dd780c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fa6dd77a820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fa6dd77a250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fa6dd77a590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fa6dd77fae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa6dd77f860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa6dd77e350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fa6dd75dc70" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa6dd75dc70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa6dd75a020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd75a020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fa6dd758e20" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd75a020"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd758ba0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fa6dd756020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd759d50" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fa6dd75abe0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd75a960" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa6dd754360" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd75a020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd756d00" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fa6dd7540d0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd75a020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fa6dd749360" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd74acf0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fa6dd7490d0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fa6dd748510" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd748290" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fa6dd74a500" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fa6dd74db00" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fa6dd74d880" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fa6dd721520" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd7212a0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fa6dd724780" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd724500" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fa6dd726e70" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fa6dd726bf0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fa6dd726350" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fa6dd7260d0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fa6dd7258d0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fa6dd725650" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fa6dd722690" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd722410" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fa6dd715e60" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fa6dd715850" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fa6dd715bd0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fa6dd730120" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa6dd731ae0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fa6dd731e30" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fa6dd72c710" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa6dd72c110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fa6dd72c480" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fa6dd730c00" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fa6df3cf110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa6dd730980" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fa6dd72d620" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa6dd72d3a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fa6dd7312e0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa6dd731060" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fa6dd72f760" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa6dd72f4e0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fa6dd7196c0" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd719440" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fa6dd71d790" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd71d170" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fa6dd71d500" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fa6dd71b680" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd71b400" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fa6dd71cb90" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd71c570" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fa6dd71c900" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fa6dd7186c0" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd718440" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fa6dd7292a0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd729020" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420RxState" loc="41:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <short>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; </short>
        <long>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; @author Steve Ayer&#10; @date   February, 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="enableRx" ref="0x7fa6dd6fe040" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fa6dd701d90" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x7fa6dd6fe9c0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fa6dd6fe740" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa6dd6ed900" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa6dd6ed340" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fa6dd6ed670" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa6dd6ecc10" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fa6dd6e8410" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fa6dd6e95e0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fa6dd6e9e20" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6dd6e8170" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa6dd6eadc0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa6dd6ea7e0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa6dd6eab30" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fa6dd6ec3d0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fa6dd6ec150" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fa6dd6e4820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fa6dd6e4020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fa6dd6dfae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd6df820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fa6dd6df020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fa6de2d9720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fa6de2d6090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd6e0be0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fa6dd6ddde0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fa6de2d6b90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fa6de2d4b80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dd6ddae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fa6dd6f34c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fa6dd6f0570" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fa6dd6f2d50" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fa6dd6f7b70" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fa6dd6f4be0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fa6dd6f3d30" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fa6dd6f2580" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fa6dd6f4420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fa6dd6d7480" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fa6dd6daac0" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fa6dd6d9c90" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fa6dd6d9a10" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fa6dd6d9270" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fa6dd6db800" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fa6dd6db580" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fa6dd6da2e0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fa6dd6da060" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fa6dd677120" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fa6dd678ad0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fa6dd678e20" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fa6dd679a70" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fa6dd679130" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fa6dd67aaa0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fa6dd67ae80" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fa6dd6804e0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa6dd680260" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fa6dd678350" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fa6dd67c020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fa6dd67dd20" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fa6dd67e610" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fa6dd67e390" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fa6dd676390" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fa6dd67a2a0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fa6dd67a020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fa6dd677b20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fa6dd67ed90" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fa6dd745790"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fa6dd744020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fa6dd67d5c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fa6dd683a60" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fa6dd680c30" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fa6dd67c7c0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fa6dd674dd0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa6dd674dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fa6dd6716c0" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa6dd670440" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa6dd674dd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa6dd671e40" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fa6dd6701b0" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa6dd674dd0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa6dd646520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa6de2db8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd6462a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa6dd645030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa6de2db8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd646d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fa6dd666890" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fa6dd745790"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fa6dd744020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa6dd665b10" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa6dd665b10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa6dd665d50" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd665d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fa6dd65e9c0" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd665d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa6dd661950" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fa6dd65e020" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd665d50"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd665d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fa6dd65f9b0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd665d50"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fa6dd65fcf0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd665d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fa6dd65f190" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fa6dd65d1f0" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd665d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fa6dd6628e0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd665d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa6dd662660" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa6dd665d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa6dd661190" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fa6dd64f0e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fa6dd64d070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fa6dd64f8c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa6de29e930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fa6dd650860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa6de29e930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fa6dd650280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa6de29e930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fa6dd6505d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa6de29ed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fa6dd640710" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa6de2db8d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa6dd64b840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa6de2db8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fa6dd6559b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa6dd64b250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa6dd64b5a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa6dd649020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa6de2db8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fa6dd64a150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa6dd64a9c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa6dd64ad10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa6dd6527e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa6dd652020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fa6dd653720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fa6dd657db0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fa6dd48e020" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa6dd48d1f0" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fa6dd48e9c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa6dd48e740" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fa6dd48f700" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa6dd4816d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa6dd4816d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fa6dd47e020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fa6dd42f2b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa6dd42ed50" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa6dd430af0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fa6dd42e530" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fa6dd42e2b0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fa6dd430350" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fa6dd42fab0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fa6dd31b810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fa6dd31a0e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fa6dd31a920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fa6dd2f3420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd2f4e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa6dd2f3190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fa6dd2ee700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd2efd90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa6dd2ee110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa6dd2ee460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa6dd2ef020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa6de2db8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd2f0970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa6dd2f0cc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fa6dd2f4020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa6de2db8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd2f59d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa6dd2f5d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa6dd2f1b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd2f1250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa6dd2f15a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa6dd2f18f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa6dd2d4a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fa6dd2d40d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fa6dd2d4460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6dd2d47a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa6dd2cf020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fa6dd2d22a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fa6dd2d2630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa6dd2d2970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa6df3ce520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa6dd2d2ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fa6dd2d68f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fa6dd2d6670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fa6dd23b120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fa6ddde9420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fa6ddde9840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fa6dd243d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd243ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fa6dd23f2a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd23f020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fa6dd240610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa6dd23fd30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa6dd23fab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fa6dd1c7b80" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa6dd1c4420" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fa6dd1042b0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fa6dcff4580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fa6dcfc59e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fa6dcfc5020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fa6dcfc5750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fa6dcfc67f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fa6dcfc6020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa6dcfc9d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa6df3ce920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fa6dcfdd2a0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa6df3ce160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dcfdd020" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fa6dcfde2a0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa6de948090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dcfde020" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa6dcfd82a0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dcfd8020" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa6dcfdb2a0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa6dcfdb020" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa6de28e720"/>
                <typename><typedef-ref name="message_t" ref="0x7fa6de28dd80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fa6dccda5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa6dccda5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fa6dccd72a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fa6de93fc20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa6dccda5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fa6dccd7020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa6dccda5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
