<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="24:Tea16BitsAmAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fbf60f2d020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fbf62ab1020"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fbf62ab1020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fbf628dd590"/></to>
    </wire>
    <wire loc="25:Tea16BitsAmAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf60f2d790"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf60f368c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf60f368c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c90020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:Tea16BitsAmAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf60f289b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf62226a70"/></to>
    </wire>
    <wire loc="27:Tea16BitsAmAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fbf60f252e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fbf61fb5e00"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fbf61fb5e00"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fbf60613020"/></to>
    </wire>
    <wire loc="28:Tea16BitsAmAppC.nc">
      <from><interface-ref name="TEA" scoped="" ref="0x7fbf60f24a40"/></from>
      <to><interface-ref name="TEA" scoped="" ref="0x7fbf61fafbc0"/></to>
    </wire>
    <wire loc="6:../../../tos/platforms/shimmer2r/TEAC.nc">
      <from><interface-ref name="TEA" scoped="" ref="0x7fbf61fafbc0"/></from>
      <to><interface-ref name="TEA" scoped="" ref="0x7fbf61fad2b0"/></to>
    </wire>
    <wire loc="29:Tea16BitsAmAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbf60f235d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbf619cf430"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:Tea16BitsAmAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbf60f22db0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbf619cd820"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbf619cd820"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbf619a1760"/></to>
    </wire>
    <wire loc="31:Tea16BitsAmAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbf60f222f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbf619d0400"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbf619d0400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbf619a7880"/></to>
    </wire>
    <wire loc="34:Tea16BitsAmAppC.nc">
      <from><interface-ref name="DMA0" scoped="" ref="0x7fbf60ef1600"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7fbf60e59a00"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel0" scoped="" ref="0x7fbf60e59a00"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fbf60d4e020"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf6100cdd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61093020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf610b49c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf610d1080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61225620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61315820"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf618307e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60295ca0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61587020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf618dedf0"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61abbbc0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61c8be50"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf605c9060"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61ed7660"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61fc4020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60660c00"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf627b7540"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61ff0a60"/></to>
    </wire>
    <wire loc="35:Tea16BitsAmAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60ebe560"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf60ebe560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60eaab70"/></to>
    </wire>
    <wire loc="36:Tea16BitsAmAppC.nc">
      <from><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7fbf60f144c0"/></from>
      <to><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7fbf60ebebf0"/></to>
    </wire>
    <wire loc="44:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7fbf60ebebf0"/></from>
      <to><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7fbf60eab080"/></to>
    </wire>
    <wire loc="37:Tea16BitsAmAppC.nc">
      <from><interface-ref name="AccelInit" scoped="" ref="0x7fbf60ef0160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60ebc7b0"/></to>
    </wire>
    <wire loc="44:../../../tos/platforms/shimmer2r/AccelC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf60ebc7b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60ebb610"/></to>
    </wire>
    <wire loc="38:Tea16BitsAmAppC.nc">
      <from><interface-ref name="Accel" scoped="" ref="0x7fbf60eee8e0"/></from>
      <to><interface-ref name="Accel" scoped="" ref="0x7fbf60ebc020"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer2r/AccelC.nc">
      <from><interface-ref name="Accel" scoped="" ref="0x7fbf60ebc020"/></from>
      <to><interface-ref name="Accel" scoped="" ref="0x7fbf60ebbcc0"/></to>
    </wire>
    <wire loc="39:Tea16BitsAmAppC.nc">
      <from><interface-ref name="GyroInit" scoped="" ref="0x7fbf60ef0900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60cfa510"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf60cfa510"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60cf3770"/></to>
    </wire>
    <wire loc="40:Tea16BitsAmAppC.nc">
      <from><interface-ref name="GyroStdControl" scoped="" ref="0x7fbf60eef060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbf60cfab50"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fbf60cfab50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbf60cf3db0"/></to>
    </wire>
    <wire loc="41:Tea16BitsAmAppC.nc">
      <from><interface-ref name="GyroBoard" scoped="" ref="0x7fbf60eed020"/></from>
      <to><interface-ref name="GyroBoard" scoped="" ref="0x7fbf60cf7460"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="GyroBoard" scoped="" ref="0x7fbf60cf7460"/></from>
      <to><interface-ref name="GyroBoard" scoped="" ref="0x7fbf60cf25c0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fbf628ddc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fbf631763a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fbf631763a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fbf62b4ec30"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fbf628dc6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf62aa7480"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf62aa7480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf62aa32b0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf628dcdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fbf62aa39c0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fbf62aa1500"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fbf62aa1500"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf62a73440"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fbf62aa0120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf62a9a080"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fbf62aa0800"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf621fd2e0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf62a73440"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf62a5b3c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fbf62a6a9e0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fbf62a5ba70"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fbf62df74c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fbf62a59cc0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fbf62a16a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf629546d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fbf62a04410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf6294cb30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fbf62a0dd10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf62959160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fbf629f0020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf62933cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fbf62a12020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf6295a480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fbf629f8570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf62933020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fbf629ed020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf6291ccb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fbf629ffa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf6292d220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fbf62a1e020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf629aa9d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fbf629f3020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf629422f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fbf629fa890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf62943610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fbf62a038c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf62944220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fbf62a0cc70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf629527a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fbf629ef020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf6292a2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fbf62a01020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf6293d6d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fbf62a12da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf62953ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fbf62a1f7b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b7540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fbf629f73e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf6292b610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fbf62a1d5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf6295b020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fbf629fd020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf629256d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fbf62a08dc0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf62962a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fbf629f2020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf6293a7a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fbf62a13140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf62963de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fbf629f9700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf6293bac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fbf629ee020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf629237a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fbf62a005a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf62935b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b03e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fbf629f61f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf62924ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fbf629f4020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf6294acb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fbf629f5020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf6291c020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fbf629fba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fbf6294a020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fbf629fc5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf6291eb30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fbf629b5450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629b6d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fbf629b5aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fbf62916a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fbf629b4120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fbf62913260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf62961930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b7540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf6295f020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629b6d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf62958020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b7540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf629577a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629b6d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf62951610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b7540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf62950c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629b6d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fbf629ae2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629afbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fbf629ae940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fbf629139f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fbf629ad020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fbf62912240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf62949b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b03e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf629472f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629afbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf62941160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b03e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf629407a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629afbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf62939610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b03e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf62938c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629afbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf62932b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b03e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf629302f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629afbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf62929160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b03e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf629287a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629afbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf62922610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b03e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf62921c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629afbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf6291ab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf629b03e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fbf629182f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fbf629afbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf62b4db70"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fbf62b462c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fbf631683b0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fbf61feaa20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7fbf62019bf0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbf61fe7440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbf62020020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbf62020020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbf60af5b40"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbf61fe60c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbf62020c30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbf62020c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbf628277e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fbf61fcabe0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fbf61fea1a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbf628277e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbf627bdd60"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbf6201f8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbf62826470"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbf62826470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbf627be6c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fbf6201d020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf62821b20"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf62821b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf627bca10"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbf60af4910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf62883ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbf60af3590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbf62826470"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbf62883ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf62837580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbf62836400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbf6282d3f0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbf6282d3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbf62813300"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbf62835060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbf62826470"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbf62834720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbf628277e0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fbf62833480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fbf62833c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbf628283b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbf627b7b90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbf627b7b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbf627a4c40"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbf628271d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf627be0d0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf627b7540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf627a45f0"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf627b12b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf62814330"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbf627bb4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf627b3790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbf627b9120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf627b4c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fbf627ac970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7fbf62037a30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbf627b3790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf62672de0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbf627b4c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf626726c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7fbf62671c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fbf627ac970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf6279c760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf627b12b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf6266f920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf627b12b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf62666cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf627b12b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fbf62670590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fbf62799530"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7fbf62670e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7fbf6279da40"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7fbf627937e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7fbf6266be00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fbf6278e780"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbf626400c0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fbf626400c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbf6204a0c0"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fbf6265dd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fbf626408d0"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fbf626408d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fbf62052440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7fbf6273c6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7fbf627734f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7fbf6273fc70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fbf62738a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7fbf6266d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7fbf6266d800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fbf6263e020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fbf62051440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fbf62051440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fbf625d4210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fbf62052440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fbf625d7b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf62050020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf6204a920"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf62049020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf62053020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf62053020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf625da320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf62053c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf60a37a90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf60a37a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf621b02c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf625d1600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf62050020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf60a28020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf625d5dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fbf625d2370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf60a38e00"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf60a38e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf621b2020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf625cdbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf60a31440"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf60a31440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fbf621b44d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf625d5dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf62541e70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7fbf625d4210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7fbf6253e890"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7fbf625d7b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7fbf6253f790"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf625da320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf625410d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf6253c3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf625d1600"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fbf6253d5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fbf625d2370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf625375b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf625cdbe0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fbf6253ca50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf6252db60"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf6252db60"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fbf62521360"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf62536020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf6224cd20"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf6224cd20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fbf62247d90"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf62533120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbf62525bd0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbf6251c970"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf625266d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fbf6251c020"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fbf624e2860"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fbf623f9cc0"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fbf623f9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6234b100"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fbf624ec800"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fbf623f5cc0"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fbf623f5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62346d10"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fbf624e0800"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fbf623f3cc0"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fbf623f3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62341740"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fbf624de800"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fbf623edcc0"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fbf623edcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62338d10"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fbf624dc800"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fbf623efcc0"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fbf623efcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6233c100"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fbf624f3bc0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fbf6210c940"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fbf62455810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62389740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fbf62441810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62359100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fbf623f7ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6234b100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fbf623d2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622c0740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fbf6243c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62350740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fbf624289a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6231f460"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fbf624149a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622f0d10"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fbf624039a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622c9100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fbf623decb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622dd740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fbf623cacc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622bb100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fbf6244f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6237b740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fbf6244b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62372d10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fbf62436810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62341740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fbf624229a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62311100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fbf6240d9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622e2d10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fbf623fd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622bb100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fbf62459810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62393100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fbf62445810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62363d80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fbf62430810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62333740"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fbf623d8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622ce740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fbf623cccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622bb100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fbf623e5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622f4100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fbf6242c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6232ae60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fbf624189a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622f9740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fbf624079a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622d3d10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fbf623d6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622c9100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fbf623ebcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62303100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fbf62453810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62384100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fbf6243f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62355d10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fbf6240b9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622dd740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fbf6243a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6234b100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fbf624269a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6231be00"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fbf624129a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622eb740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fbf624019a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622c5d10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fbf623e7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622f9740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fbf6245f800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf623c3d10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fbf62449810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6236d740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fbf62434810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6233c100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fbf624209a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6230dd10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fbf623e3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62333740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fbf623dccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622d7100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fbf623d0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622bb100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fbf6241c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62303100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fbf623e1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6232e100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fbf62457810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6238ed10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fbf62443810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6235e740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fbf6242e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf6232e100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fbf623e9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622ffd10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fbf623d4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622c5d10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fbf6242a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf623259f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fbf624169a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622f4100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fbf624059a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622ce740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fbf62451810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62380d10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fbf624099a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622d7100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fbf6244d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62376100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fbf62438810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62346d10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fbf624249a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62316740"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fbf624109a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622e6100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fbf623ff9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622c0740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fbf6245b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62398740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fbf62447810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62367100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fbf62432810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62338d10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fbf6241e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62308740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fbf623f1ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62341740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fbf623dacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622d3d10"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fbf6241a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622ffd10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fbf623cecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622c0740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fbf623c8cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf622e2d10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fbf623fb9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fbf62350740"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fbf62247d90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf6223ee50"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf6222e020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf621fd2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf62226470"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fbf62223060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fbf62227b10"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fbf62227b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf621fa020"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fbf62222340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fbf62200e70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fbf62200e70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf621e6b90"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fbf6221d660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fbf621fe0f0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fbf621fe0f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf621e1710"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf621e92f0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x7fbf6242c810"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf621e5de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fbf624289a0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf621e0930"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x7fbf624269a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbf60a31be0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbf621b33f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbf60a2f2b0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbf62116d70"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbf62116d70"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fbf6210c940"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf60a36a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf6252db60"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf60a362b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf621b0ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf621b0ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6211e400"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf621af8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf60a28020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf621b02c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf6211f020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf6211f020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf6065b3a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fbf621b44d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fbf621add60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf621b2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf62120210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf62120210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6065c4d0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbf621b33f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbf6219b710"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6211e400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6065a8b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6211ecd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf621af8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6219abf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6211e400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fbf6219bd80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf625266d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fbf6219a5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbf62525bd0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf6211f7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf6065bb20"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf60659210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6211ecd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fbf606599d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fbf6065f2b0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fbf60657c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fbf62103700"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fbf62521360"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fbf620fe250"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fbf623f9cc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fbf620fc1f0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fbf623f3cc0"/></to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7fbf61fe0500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7fbf61fc4680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7fbf61fcabe0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fbf61fbd380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fbf62ab1020"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7fbf61fbdaa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbf628283b0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fbf60613020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fbf60610020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fbf60610020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fbf606058d0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fbf606058d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fbf61f54390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7fbf6060a140"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7fbf605f99d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7fbf605f99d0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7fbf61f51210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fbf6060f7b0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fbf606014f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fbf606014f0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fbf61ac79f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf6060b340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf605fac60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf605fac60"/></from>
      <to><interface-ref name="ResourceReadNow" scoped="" ref="0x7fbf61f4f020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf606031c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf619fea10"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605fd260"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf619fea10"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605f7280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf619fea10"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fbf61f4bd40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf606031c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61f48450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf605f0400"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf605f0400"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61ee11d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7fbf61f4e390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf605f1660"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf605f1660"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fbf61d48d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605ee660"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf606031c0"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7fbf61f1ce40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fbf605ef400"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fbf61ee0960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fbf605efcf0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fbf61ede920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fbf61d3f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61ee7cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fbf605de2a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605ee660"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fbf61d3d740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fbf605df020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7fbf61ee0960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fbf61ed5af0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7fbf61edb1d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7fbf61ed3910"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fbf61ede920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fbf61ed4ab0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61ee11d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61ed6370"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf61ee7cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61d61520"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf61d61520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf605c76c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fbf61ed1280"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf61d60b20"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf61d60b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf605c6cb0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fbf61ec30d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fbf61df0020"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fbf61ebebe0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7fbf6240b9a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fbf61ebcc80"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7fbf624099a0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fbf61ebac80"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7fbf624079a0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fbf61eb8c80"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7fbf624059a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fbf61eb6c80"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7fbf624039a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fbf61eb4c80"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7fbf624019a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fbf61eb1c80"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7fbf623ff9a0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fbf61eafc80"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7fbf623fd9a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fbf61ecf020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fbf62a1f7b0"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fbf61ec2880"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7fbf62a1e020"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fbf61ec1d30"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7fbf62a1d5a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fbf61ebf120"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7fbf62a13140"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fbf61ebfe60"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7fbf62a12020"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf61d603a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf605c6530"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf605c4610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf61d5f570"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fbf605c4dd0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fbf605c9670"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fbf605c3900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7fbf61d48d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fbf61cd26f0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fbf61cd1ad0"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7fbf61d3f1d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fbf61ccd920"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fbf61d3d740"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fbf61cd0860"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fbf61d39240"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fbf61cce540"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fbf61d39e00"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fbf61d352b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf61b0a370"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf61b0a370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c90020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fbf61d27840"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf61b04d10"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf61b04d10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c90020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fbf61d22d00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf61afc750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf61afc750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c90020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fbf61d389a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fbf61df0020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7fbf61cca2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c90020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c87c30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c87c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf61b2a150"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf61c8be50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61ba6020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fbf61c7d500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fbf61b1c790"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf61ba6020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60590860"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fbf61b24640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf61b792f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbf61b74850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf61ba6870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbf61ba6870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf605895f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf61b1ba60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf61c0ab70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf61c0ab70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf61c02cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf60590860"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60574360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fbf60583d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf6058f140"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbf6058f140"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf60574bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf605869b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf61c0ab70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf60570dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf60579020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf60579020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf6056e440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf60578760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf60578760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf6056d760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf60577a80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf60577a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fbf62a04410"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fbf629fba20"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fbf62a038c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB1" scoped="" ref="0x7fbf629fa890"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fbf62a01020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fbf629f9700"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fbf62a005a0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fbf629f8570"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fbf629ffa50"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fbf629f73e0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fbf629fd020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fbf629f61f0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fbf629fc5a0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fbf629f5020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fbf61be40f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fbf62247d90"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fbf61b719c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fbf61b1fa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf604e9020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605fd260"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf61ac2020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605fd260"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf61abfce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf604ed020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf604ed020"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fbf61d48d20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf61ac0720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf604edc30"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf604edc30"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61ee11d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7fbf61ac79f0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fbf61a45cb0"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf61ab3580"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf61ac2020"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf61a148f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61abfce0"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fbf61a18bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7fbf61ab99c0"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61ab6d50"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf61ac0720"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbf61ab2900"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf61a4c4f0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbf61a4c4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf604d7a90"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7fbf61a88020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7fbf61a96600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7fbf61a91d50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf61a4db10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf604dd020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf604dd020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf604c1660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fbf604d0210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf604dd870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbf604dd870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf604c0020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf604d3e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf61c0ab70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf604bc190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf604c6450"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf604c6450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf604bb770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf604c5a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf604c5a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf604baa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf604c4da0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf604c4da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fbf604ebbd0"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fbf61ee0960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fbf604ea590"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fbf61ede920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fbf61d3f1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61ee7cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fbf60478cc0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf604e9020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fbf61d3d740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fbf60479a60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fbf61f4bd40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605f7280"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61f48450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf6046cde0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf6046cde0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61ee11d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SubResourceReadNow" scoped="" ref="0x7fbf61f4c6e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6046c1d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf6046c1d0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7fbf61d48d20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf60469020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605f7280"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fbf6046bd30"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7fbf61ee0960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fbf6046a650"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7fbf61ede920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7fbf61d3f1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61ee7cc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7fbf6045a9e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf60469020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fbf61d3d740"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7fbf6045b670"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbf619a7880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbf6197fb70"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbf619cf430"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbf619a6980"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fbf619a6980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fbf60fce020"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fbf619cd210"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fbf619a3900"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fbf619a3900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fbf60fcddf0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fbf619a1760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fbf60fcaa80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbf619c1d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbf611a1550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbf611a1550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbf61193a80"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf619b3b20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf61995bb0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf61995bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf61975080"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbf619ce600"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf619a5cb0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbf619a5cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf60fcd210"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf619cbcb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf6199f810"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf6199f810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf61976020"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbf619cc5f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbf619a2020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fbf619a2020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fbf60fcb470"/></to>
    </wire>
    <wire loc="87:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbf619bee60"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbf6119d660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbf6119d660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbf6118faf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbf6197fb70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbf60fffb80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf6198dd40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf60fc88b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fbf61980d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fbf60fc9ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf61998970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf61977140"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf61977140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf611a6670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf61975080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf60fff080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf61976020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fbf611a36e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fbf6198b020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fbf61975b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fbf61975b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fbf60feb020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf61994a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf619769d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf619769d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf611a2a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fbf60fc00f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6197cd00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbf60fc7860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fbf61979d10"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fbf61979d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fbf61067020"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbf60fc6690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fbf61978a90"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fbf61978a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fbf61067d50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbf60fc24d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbf61346b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf60fc6ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf611a6670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf611a6670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf61198d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf60fc5b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf611a20c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf611a20c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf61194640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fbf60fc4610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fbf618e1670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fbf618e1670"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fbf618d91b0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fbf60fc11f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf6196f3b0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf6196f3b0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf61967ad0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf60fc0d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbf60fffb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fbf60ffcd90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf611a2a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf61193020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fbf60feb020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fbf60fe9410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fbf61067020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fbf6105dbb0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf60fff080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf60ff82d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fbf6197a820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf61068900"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbf61068900"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fbf6105d500"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fbf611a36e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fbf61195c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf6197cd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61069020"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf61069020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61060910"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fbf6197ba00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf61069c60"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbf61069c60"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fbf6105f660"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fbf61979020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fbf61066440"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fbf61066440"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fbf6105b0d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fbf61067d50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fbf6105c9d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fbf60ffcd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbf61971460"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fbf61971460"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fbf619682d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbf61065890"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf610bb4d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbf610bb4d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf610b7d50"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbf610b83b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf60fee350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbf60fee350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fbf60febd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbf60febd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf61003ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbf61003ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fbf60ffd860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbf60ffd860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf61970020"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fbf61970020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf61968dc0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbf61065200"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf61000980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbf61000980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fbf60ffc690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbf60ffc690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf6109dd00"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbf6109dd00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf610951e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbf6109ab80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf61970cc0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbf61970cc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf6122a7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fbf6122a7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fbf61223020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420RxState" scoped="" ref="0x7fbf6196ac60"/></from>
      <to><interface-ref name="CC2420RxState" scoped="" ref="0x7fbf61966980"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf61965310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf618ef220"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf618ef220"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf618db4b0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fbf6195d880"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fbf618ec5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fbf618ec5b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fbf618d7130"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fbf61963ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbf6131f6c0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fbf61963ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbf6122d5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fbf6122d5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbf61225ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fbf6131f6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fbf61314020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbf61954810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbf6131c020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbf6131c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fbf613148c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fbf6195c700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf6131ccb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf6131ccb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf61313650"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf61952b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf611a6670"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf61949130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf611a20c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fbf61951b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fbf610dba20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fbf610dba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fbf610d0a20"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fbf61944850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbf610ddaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbf610ddaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbf6158c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf61953470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fbf6193f730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fbf619407d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fbf61941890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fbf618e09b0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fbf618d6500"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fbf618d43a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbf6182d220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbf6182d220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbf61827af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fbf618cf5c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fbf617e8cd0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fbf617e8cd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617dbb60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fbf618ce830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fbf617e46a0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fbf617e46a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617ccd70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fbf618cdb50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fbf617e2ce0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fbf617e2ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617c2710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fbf618c65b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fbf617abc70"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fbf617abc70"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fbf6165ca30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fbf618b58f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf613d2e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf613d2e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6160b4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbf618b4990"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fbf613ce7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbf613ce7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbf618b6100"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fbf613cdae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbf613cdae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbf618b51d0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fbf613d0ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbf613d0ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf618b6830"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf613cc160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf613cc160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbf618b91d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fbf613c2870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbf613c2870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbf618b9a80"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fbf613bf880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbf613bf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbf618bd3c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fbf613be0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbf613be0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf618bdc90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf613c8e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf613c8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf618bc5f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf613c7670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf613c7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbf618c59a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fbf613b1500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbf613b1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbf618c5020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fbf613b2ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbf613b2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf618b8020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf613c5e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf613c5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbf618b88c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fbf613c7e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbf613c7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbf618b71d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fbf613c6e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbf613c6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fbf618b1560"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6139fa80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf6139fa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6160b4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fbf618b36f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf613739e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf613739e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6160b4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbf618c3dd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbf61346b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbf618d2970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbf61345d70"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fbf618a6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fbf618a7020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf618307e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf61827260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf61827260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf60431260"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbf61827af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf60431ab0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf60431260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf604293d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbf60431ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf60423020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf604293d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf6040eca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fbf6041c780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf60429c20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fbf60429c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fbf6040d5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf6041f3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf61811080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf61811080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf6180ccd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf60409710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf604139d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf604139d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf60408da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf60411120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf60411120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf604060c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf60410440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf60410440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fbf618080f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fbf62247d90"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fbf617e6020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617d5710"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fbf617e5390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617d01d0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fbf6182ea70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617df020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fbf617e39b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617c7b60"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617de2f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fbf6243f810"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617dade0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fbf624149a0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617d4930"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fbf62453810"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617cf480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fbf6245f800"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617ca020"/></from>
      <to><interface-ref name="Port57" scoped="" ref="0x7fbf6240d9a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617c6de0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fbf62459810"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617c0930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fbf624109a0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fbf617ab060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fbf617a4760"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbf617aa8c0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fbf6164da70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf6178b2b0"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7fbf62a1d5a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fbf6178a5d0"/></from>
      <to><interface-ref name="CaptureA1" scoped="" ref="0x7fbf62a0dd10"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fbf61789480"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fbf62459810"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf6177f450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf61811080"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fbf61787410"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fbf61781180"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf6175e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf61779110"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf61779110"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf61767430"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTimeMicro" scoped="" ref="0x7fbf61786620"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fbf6177ad30"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fbf6165b610"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fbf61743020"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fbf61743020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fbf61730bc0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fbf6164c610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fbf61751170"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fbf61751170"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fbf61742d30"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fbf61765910"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fbf61773260"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fbf61773260"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf6176fae0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf6176dc30"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fbf62a1f7b0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fbf6174f020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fbf6173cbc0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fbf61744020"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fbf61732bc0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fbf6174c020"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fbf61739bc0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fbf61749020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fbf61737bc0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fbf61756060"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fbf6173ec40"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fbf61746020"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fbf61734bc0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fbf6174e020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fbf6173bbc0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fbf61748020"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fbf61736bc0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fbf61750020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fbf6173dbc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fbf61745060"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fbf61733c40"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fbf6174d020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fbf6173abc0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fbf6174a020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fbf61738bc0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fbf61758100"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fbf6173fc80"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fbf61747020"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fbf61735bc0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbf613ce160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf613c0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbf613b80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbf613bf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbf613ac500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbf613af500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbf613cd490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbf613b5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf613b0500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbf613bb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbf613bc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf613d1a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6160a350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6160a350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf61602660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf613cce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbf613cb490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf613b4c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbf613cbbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf613b0ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbf613b50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf613c6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf613b60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbf613b8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf613b6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbf613aece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbf613afce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbf613bc880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbf613b70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbf613b1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbf613be880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbf613acce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbf613d0480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbf613c8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf613c5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbf613b90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbf613b9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf613c00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbf613c92f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbf613c8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf613cc7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf613b2500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbf613ae500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf613bb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbf613b7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbf613cee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbf613bd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbf613c9940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbf613bd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbf613b40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbf613ab9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf61600890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf615ffba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf615fda30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf6160b4d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61601510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf615fc8b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fbf615efb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbf61591770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbf61591770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbf6158c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fbf615fb060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6156e140"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf6156e140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf602fc9c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fbf615f8c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fbf6156ed90"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fbf6156ed90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fbf602fa020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fbf615ef2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fbf613f9410"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fbf613f9410"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fbf602f9120"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf615f9a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fbf615ecbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbf6158c1d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbf61587b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fbf602f9120"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fbf61559850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fbf602fa020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fbf6155a020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf602fc9c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6155c430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf602fb760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf602f12c0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf602f12c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf6143e2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fbf6155a020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fbf614fda10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fbf602fa630"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fbf6155a6a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fbf6155a6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fbf614fc060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbf61557a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbf602f98c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf602ea440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6155b6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fbf61558690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf602f2640"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf602f2640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6143f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf615552a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf602ebc10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf602ebc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fbf614411d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6155b6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf614fd250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fbf61559850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fbf614fcc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf6155c430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf614fe470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbf614fa3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbf61557a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fbf614fb5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fbf61558690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf614f5480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf615552a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fbf614faa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf614ea850"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf614ea850"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fbf614e1020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf614f5c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fbf614f22f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf614e53b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fbf614dddc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf614ea020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf614e4710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fbf614dc6d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7fbf623e9cc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fbf614da670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7fbf623e7cc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fbf614d8670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7fbf623e5cc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fbf614d6670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7fbf623e1cc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fbf614d4670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7fbf623e3cc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf602f02b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf614ea850"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf602f1a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6143ead0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6143ead0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf61434e80"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6143d8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf602ea440"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf6143e2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf614359e0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf614359e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf602913a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fbf614411d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fbf6143b060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf6143f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61436b60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf61436b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf60292540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf61434e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf602908b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fbf6143a060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf614e53b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf61433770"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6143d8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6143ae50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf61434e80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf614175f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf61434270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf61434270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf60291b20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf6142e880"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf614ea020"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6028e210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf61433770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fbf6028e9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fbf60294330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fbf6028cc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf6025c3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf6142e880"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fbf6025cb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fbf61417020"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf6025b0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf614175f0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6025bd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf61416270"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf61392c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbf6139dda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf61396b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf61390670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbf61389e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbf61390e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbf6137c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbf6137e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbf6139b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbf61384670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf6137f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbf61395c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbf61393c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbf6138a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbf6138ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbf6138f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6139e760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6160a350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf61399aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbf61398120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf61383a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbf61398870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf6137fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf6139bdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbf61385e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf61393480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf61395480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbf6139d750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf61386e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbf61388670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf61385670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbf6137dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbf6137ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbf6138b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbf61388e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbf61381ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbf6138d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbf6137cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbf6139d100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbf61396370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf61392480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbf6138ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbf6138fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbf61389670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbf61391670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbf6139c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf61391e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbf61397020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbf61397cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbf613812f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbf61382ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf61399450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf613822f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbf6137d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf6138be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbf61386670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbf6139caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbf6139b770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbf6138de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbf61397670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbf6138c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbf61384e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbf6137b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf61366c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbf61370da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf61369b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf61363670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbf6135ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbf61363e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbf6134f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbf613522f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbf6136e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbf61358670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf613532f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbf61368c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbf61367c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbf6135d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbf61360e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbf61362670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf61372760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6160a350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf6136daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbf6136c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf61356a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbf6136c870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf61353ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf6136edc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbf61359e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf61367480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf61368480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbf61370750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf6135ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbf6135b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf61359670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbf61351ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbf61352ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbf6135f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbf6135be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbf61354ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbf61361670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbf6134fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbf61370100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbf61369370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf61366480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbf6135de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbf61362e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbf6135c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbf61364670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbf6136f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf61364e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbf6136a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbf6136acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbf613542f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbf61355ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf6136d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf613552f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbf613512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf6135fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbf6135a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbf6136faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbf6136e770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbf61361e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbf6136a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbf61360670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbf61358e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbf6134e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fbf61318990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fbf613125e0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fbf6131a150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fbf61312d70"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fbf613107f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbf6182d220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fbf61304500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fbf6182ea70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fbf612fe820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fbf617e8cd0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fbf612fbb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fbf617e39b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fbf61305880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fbf617ab060"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fbf612f8020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6125dc30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf6125dc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6160b4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf612f8d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6125c8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6125c8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6160a350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbf612f56d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fbf6125b2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbf6125b2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbf612f5de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fbf6125acc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbf6125acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbf612f4530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fbf61259370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbf61259370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf612f4c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf61257d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf61257d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbf612f6e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fbf61251c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbf61251c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbf612f7780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fbf612397a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbf612397a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf612f6550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf6123e2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf6123e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf612f33e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf61253480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf61253480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf612f25e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf6124fe50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf6124fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf612f1020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf6124e670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf6124e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbf612f3e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fbf612557b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbf612557b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbf612f09c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fbf6123bad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbf6123bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbf612f1890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fbf6123c2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbf6123c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbf612f0130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fbf6123cad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbf6123cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fbf612ead40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fbf6122ddf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fbf6122ddf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fbf61224550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf6130da00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf611a6670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf6130b9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf611a20c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fbf6130a7c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbf611a1550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbf612ffb30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbf61199480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbf61199480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbf6118b8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf612ee6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf61250c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbf6125a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf61254c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbf61247e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbf6124ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbf6123a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbf61242670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbf61253c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbf61248670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbf6124ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbf6124d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbf61256370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf61241a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbf61256ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf6123ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf61257060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbf61243e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf61251480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbf6125b940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf61244e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbf61246670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf61243670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbf61249670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbf61246e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbf6123fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbf6124c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbf6123aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbf61254490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf61250480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbf61248e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbf6124de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbf61247670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbf6124f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbf6125a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbf61255160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbf61255e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbf6123f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbf61240ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf612576b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf612402f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbf6123b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf61249e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbf61244670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbf612599c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbf6124ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbf6124a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbf61242e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fbf61229020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fbf612237c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf6120e150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fbf61222020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fbf617e8cd0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fbf61221380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fbf617e6020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fbf612206b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fbf617e5390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbf6121fa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbf617aa8c0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fbf6121e6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf61129520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fbf61129520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fbf6160b4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbf6121d530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fbf61105480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fbf61105480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf6121cad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf61123060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf61123060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbf6121c3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fbf61123d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fbf61123d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf6121b330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf611a6670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf6121a1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf611a20c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fbf61218d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbf611a1550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fbf6121ab90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fbf618e1670"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf612133e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf6111a840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf6111a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf61213cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf61119060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf61119060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbf61214b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fbf61121ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fbf61121ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbf612116d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fbf61106c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fbf61106c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbf61212590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fbf61109c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fbf61109c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbf61212e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fbf61108480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fbf61108480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf6120f020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf61109480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf61109480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbf6120f8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fbf61127c20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fbf61127c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fbf612039d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fbf61135020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fbf61811080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fbf611893b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fbf61138cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fbf611876e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fbf61c7d500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf611310b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c90020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf6111b620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fbf61126940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf6111f620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fbf61112840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fbf61119840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fbf61125cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fbf6110d060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf6110ac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fbf6111e620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fbf6111d620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fbf61113060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fbf61116840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fbf61118060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf611272b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6160a350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf611236b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf6110c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fbf61121490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf611249c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fbf6110f840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf6111ee00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf6111fe00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fbf611262f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf61110840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fbf61111060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf6110f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fbf61106480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fbf61115060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fbf61111840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fbf6110a480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fbf61117060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fbf61120e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf6111de00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fbf61113840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fbf61118840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fbf61112060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fbf6111a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fbf61125020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fbf611207b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fbf6110bc60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fbf6110b480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf6110cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fbf61108c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf61115840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fbf61110060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fbf61125670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fbf61124370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fbf61117840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fbf61120160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fbf61116060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fbf6110d840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fbf61104160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fbf610d8920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fbf610d1940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fbf610df990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fbf610d1080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbf610b3110"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fbf610b83b0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbf610b3d60"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbf610b5b00"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbf610b5b00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbf6158c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fbf610b2be0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fbf610dba20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf610b14b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf611a20c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fbf6109a430"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fbf610958f0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbf61093770"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fbf6109ab80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf61093df0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf611a20c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fbf6105be20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fbf61065890"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fbf6105ab50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fbf61065200"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf610592f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf611a6670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf61058170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf611a20c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fbf61058b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fbf6100b410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fbf6102cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fbf60ffe800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbf60ffa580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fbf60ffa580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fbf6158c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf60fe61c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf61976020"/></to>
    </wire>
    <wire loc="133:Tea16BitsAmC.nc">
      <from><interface-ref name="stopSensing" scoped="" ref="0x7fbf60ec97e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:Tea16BitsAmC.nc">
      <from><interface-ref name="startSensing" scoped="" ref="0x7fbf60ecb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7fbf60ea8910"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7fbf61df0020"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Msp430DmaControl" scoped="" ref="0x7fbf60ea4140"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf60e59110"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7fbf60e59110"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf60d32060"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Msp430DmaChannel" scoped="" ref="0x7fbf60ea4950"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7fbf60e59a00"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fbf60ea36c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7fbf60e57d60"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fbf60d3dd80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7fbf60e58bd0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7fbf60d457a0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7fbf60d4d020"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7fbf60e2c930"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel0" scoped="" ref="0x7fbf60e2c930"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7fbf60d98d00"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7fbf60d447a0"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7fbf60e29280"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7fbf60e29280"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7fbf60d8f9b0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7fbf60d3cdb0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7fbf60e25be0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7fbf60e25be0"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7fbf60d863f0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplControl" scoped="" ref="0x7fbf60d32970"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fbf60e49370"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7fbf60e49370"/></from>
      <to><interface-ref name="DmaControl" scoped="" ref="0x7fbf60e20e80"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel0" scoped="" ref="0x7fbf60d31d90"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7fbf60e2c930"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel1" scoped="" ref="0x7fbf60d2c740"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7fbf60e29280"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel2" scoped="" ref="0x7fbf60d270d0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7fbf60e25be0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7fbf60d93610"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fbf60e1b0e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7fbf60d8a2f0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fbf60e1b0e0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7fbf60d82c50"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fbf60e1b0e0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="buttonNotify" scoped="" ref="0x7fbf60cedbd0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7fbf60cf4600"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7fbf60cf4600"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7fbf60ca9af0"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7fbf60cac760"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7fbf60cccb20"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7fbf60cccb20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fbf60cc32e0"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fbf60cad510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf60ccf960"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fbf60ccf960"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fbf60ccad50"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7fbf60ca5750"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7fbf60cb0b10"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="debounceTimer" scoped="" ref="0x7fbf60ca23d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fbf60c928c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fbf60c928c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c90020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf60cc7020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fbf62457810"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fbf60cc3de0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fbf61750020"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7fbf60cab2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <from><interface-ref name="debounce" scoped="" ref="0x7fbf60c98c40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="38:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P.UartP" loc="41(Msp430Uart0P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.2 $ $Date: 2010/07/29 13:19:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="46:../../../tos/platforms/shimmer2r/LedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="45:../../../tos/platforms/shimmer2r/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/platforms/shimmer2r/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="39(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2013/04/09 14:28:58 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ShimmerSerialP" loc="35:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TEAC" loc="1:../../../tos/platforms/shimmer2r/TEAC.nc">
      <configuration/>
    </component>
    <component qname="TEAP" loc="1:../../../tos/platforms/shimmer2r/TEAP.nc" safe="">
      <module/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor" loc="49(Tea16BitsAmAppC.Sensor):../../../tos/platforms/shimmer/DemoSensorC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor" loc="43(Tea16BitsAmAppC.Sensor.DemoSensor):../../../tos/platforms/shimmer/VoltageC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC" loc="43(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC):../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalVoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC" loc="47(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient" loc="43(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC" loc="47(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient" loc="43(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalVoltageP" loc="34:../../../tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <module/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC" loc="47(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC):../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient" loc="43(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="56:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <documentation loc="48:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the SHIMMER platform.</short>
        <long>&#10; The Active Message layer on the SHIMMER platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-07-26 17:51:39 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-03-02 16:52:48 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;&#10; @author Steve Ayer&#10; @date April, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="44(HplCC2420InterruptsC.CaptureSFDC):../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterToLocalTimeC" loc="46(HplCC2420InterruptsC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="41:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <documentation loc="33:../../../tos/platforms/shimmer/CounterMicro32C.nc">
        <short>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.</short>
        <long>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform" loc="54(CounterMicro32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterMicroToLocalTime" loc="46(HplCC2420InterruptsC.CounterMicroToLocalTime):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="45(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P.SpiP" loc="73(Msp430SpiNoDma1P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="40(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Tea16BitsAmAppC.TimerMilliC" loc="44(Tea16BitsAmAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Tea16BitsAmC" loc="9:Tea16BitsAmC.nc" safe="">
      <documentation loc="33:../../../tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AccelC" loc="36:../../../tos/platforms/shimmer2r/AccelC.nc">
      <configuration/>
    </component>
    <component qname="Mma7361P" loc="37:../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <module/>
    </component>
    <component qname="shimmerAnalogSetupC" loc="35:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <configuration/>
    </component>
    <component qname="shimmerAnalogSetupP" loc="39:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <module/>
    </component>
    <component qname="Msp430DmaC" loc="46:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
        <short>&#10; Implementation of the HAL level component for the MSP430 DMA module.</short>
        <long>&#10; Implementation of the HAL level component for the MSP430 DMA module.&#10; This configuration provides the available DMA channels through the&#10; MSP430DMA parameterized interface.  If more channels are requested&#10; than available through unique(&#34;DMA&#34;), there will be no mapping for&#10; that channel and compilation will fail.&#10;&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430DmaC" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430DmaP" loc="41:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma0" loc="42(HplMsp430DmaC.Dma0):../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:480">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:482">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:484">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:486">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:15">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma1" loc="42(HplMsp430DmaC.Dma1):../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:488">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:490">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:492">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:494">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:240">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma2" loc="42(HplMsp430DmaC.Dma2):../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:496">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:498">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:500">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:502">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3840">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel0P" loc="42(Msp430DmaC.Channel0P):../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel1P" loc="42(Msp430DmaC.Channel1P):../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel2P" loc="42(Msp430DmaC.Channel2P):../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaControlP" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GyroBoardC" loc="38:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <configuration/>
    </component>
    <component qname="GyroBoardP" loc="41:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <module/>
    </component>
    <component qname="GyroButtonC" loc="50:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplGyroButtonC" loc="42:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $&#10; (not much to) port to shimmer2 gyro&#10; @author Steve Ayer&#10; @date March, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplGyroButtonC.UserButtonC" loc="42(HplGyroButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplGyroButtonC.InterruptUserButtonC" loc="43(HplGyroButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="GyroButtonC.SwitchToggleC" loc="44(GyroButtonC.SwitchToggleC):../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="GyroButtonP" loc="44:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GyroButtonC.debounceTimer" loc="44(GyroButtonC.debounceTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fbf629e9970" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fbf629e9d10" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fbf629e8110" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fbf629e8490" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fbf629e8810" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fbf629e8b80" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fbf629e7020" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fbf629e73b0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fbf629e7780" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fbf629ace70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fbf629a8270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fbf628cd3c0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fbf6289f0d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fbf6287c0d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart0C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fbf623c2190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fbf623c2540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fbf623c28f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fbf623c2ca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fbf623c1060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fbf6223fe60" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fbf6223fe60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fbf621955b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fbf621875b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fbf6216ed80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fbf6201a490" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fbf6201a490"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fbf6201a810" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="49:../../../tos/platforms/shimmer/DemoSensorC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10; &#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="43:../../../tos/platforms/shimmer/VoltageC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430InternalVoltageC" loc="43:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fbf61db9850" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fbf61db13b0" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fbf61c3a3b0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fbf61c3a3b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fbf61c016b0" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fbf61c016b0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fbf61c01e80" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fbf61c01e80"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fbf61c00290" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fbf61c00290"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fbf61c00a70" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fbf61c00a70"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fbf61c00e40" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fbf61bfe670" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fbf61bfe670"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fbf61c086d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fbf61c086d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fbf61bdd020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fbf61bdd020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fbf61bdd410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fbf61bdd410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fbf61bddbf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fbf61bddbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fbf61bdc020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbf61ba1cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbf61ba1cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbf61b6b230" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbf61b6b230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fbf61b6b560" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbf61b1ddd0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbf61b1ddd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7fbf61a443b0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7fbf61a44700" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61a44700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="CC2420GpioCaptureC" loc="44:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi1C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430DmaXP" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="DMAxCTL_addr" ref="0x7fbf60e1fc40" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxSA_addr" ref="0x7fbf60e05020" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxDA_addr" ref="0x7fbf60e053d0" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxSZ_addr" ref="0x7fbf60e05780" loc="45:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxTSEL_mask" ref="0x7fbf60e05b50" loc="46:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxTSEL_shift" ref="0x7fbf60e03020" loc="47:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430DmaChannelP" loc="42:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc" abstract="">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="44:../../../tos/platforms/shimmer/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fbf62aa54d0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf62aa54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62aa5850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fbf62ab1020" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fbf62ab1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fbf62ab13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf62aa7480" loc="40:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf62aa7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62aa7800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fbf62aa0120" loc="6:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fbf62aa0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62aa04a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf62aa32b0" loc="4:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf62aa32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62aa3630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fbf62aa39c0" loc="5:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fbf62aa39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62aa3d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fbf62aa0800" loc="7:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fbf62aa0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62aa0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf62a9a080" loc="39:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf62a9a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62a9a400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fbf62aa1500" loc="39:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fbf62aa1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62aa1880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fbf62a6a9e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fbf62a6a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fbf62a70980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fbf62a70020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fbf62a701b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fbf62a70340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fbf62a6ad60"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fbf62a704d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fbf62a70660"/>
        <function-ref name="initClocks" scoped="" ref="0x7fbf62a707f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf62a73440" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf62a73440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62a737c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fbf62a5ba70" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fbf62a5ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fbf62a59980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fbf62a59020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fbf62a591b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fbf62a59340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fbf62a5bdf0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fbf62a594d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fbf62a59660"/>
        <function-ref name="initClocks" scoped="" ref="0x7fbf62a597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fbf62a59cc0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fbf62a59cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fbf62a580a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf62a5b3c0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf62a5b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62a5b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fbf62a16a50" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fbf62a16a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62a16dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62a15020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62a151b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62a15340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf62a154d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62a15660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf62a157f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62a15980"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf62a15b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fbf62a04410" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fbf62a04410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62a04790"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62a04920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62a04ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62a04c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf62a04dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62a03020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf62a031b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62a03340"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf62a034d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fbf62a0dd10" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fbf62a0dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62a0c0e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62a0c270"/>
        <function-ref name="captured" scoped="" ref="0x7fbf62a0c400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62a0c590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62a0c720"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62a0c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fbf629f0020" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fbf629f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629f03a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf629f0530"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629f06c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629f0850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629f09e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf629f0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fbf62a12020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fbf62a12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62a123a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf62a12530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf62a126c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf62a12850"/>
        <function-ref name="fired" scoped="" ref="0x7fbf62a129e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fbf629f8570" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fbf629f8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629f88f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf629f8a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629f8c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf629f8da0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fbf629ed020" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fbf629ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629ed3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf629ed530"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629ed6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629ed850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629ed9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf629edb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fbf629ffa50" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fbf629ffa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf629ffdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf629fe020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf629fe1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf629fe340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf629fe4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf629fe660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf629fe7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf629fe980"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf629feb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fbf62a1e020" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fbf62a1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62a1e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62a1e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62a1e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62a1e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf62a1e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62a1eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf62a1ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62a1d020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf62a1d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fbf629f3020" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fbf629f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629f33a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf629f3530"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629f36c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629f3850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629f39e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf629f3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fbf629fa890" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fbf629fa890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629fac10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf629fada0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629f9020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf629f91b0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fbf62a038c0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fbf62a038c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62a03d40"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62a02020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62a021b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62a02340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf62a024d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62a02660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf62a027f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62a02980"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf62a02b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fbf62a0cc70" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fbf62a0cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62a06020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62a061b0"/>
        <function-ref name="captured" scoped="" ref="0x7fbf62a06340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62a064d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62a06660"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62a067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fbf629ef020" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fbf629ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629ef3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf629ef530"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629ef6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629ef850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629ef9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf629efb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fbf62a01020" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fbf62a01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62a013a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62a01530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62a016c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62a01850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf62a019e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62a01b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf62a01d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62a00020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf62a001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fbf62a12da0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fbf62a12da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62a0e180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf62a0e310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf62a0e4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf62a0e630"/>
        <function-ref name="fired" scoped="" ref="0x7fbf62a0e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fbf62a1f7b0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fbf62a1f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62a1fb30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62a1fcc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62a1fe50"/>
        <function-ref name="get" scoped="" ref="0x7fbf62a27020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62a271b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62a27340"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62a274d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62a27660"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62a277f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf62a27980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf62a27b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fbf629f73e0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fbf629f73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629f7760"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf629f78f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629f7a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf629f7c10"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629f7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fbf62a1d5a0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fbf62a1d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62a1d920"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62a1dab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62a1dc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62a1ddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf62a16020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62a161b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf62a16340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62a164d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf62a16660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fbf629fd020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fbf629fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf629fd3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf629fd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf629fd6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf629fd850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf629fd9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf629fdb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf629fdd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf629fc020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf629fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fbf62a08dc0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fbf62a08dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62a0d180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62a0d310"/>
        <function-ref name="captured" scoped="" ref="0x7fbf62a0d4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62a0d630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62a0d7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62a0d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fbf629f2020" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fbf629f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629f23a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf629f2530"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629f26c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629f2850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629f29e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf629f2b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fbf62a13140" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fbf62a13140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62a134c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf62a13650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf62a137e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf62a13970"/>
        <function-ref name="fired" scoped="" ref="0x7fbf62a13b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fbf629f9700" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fbf629f9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629f9a80"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf629f9c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629f9da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf629f8020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fbf629ee020" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fbf629ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629ee3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf629ee530"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629ee6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629ee850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629ee9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf629eeb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fbf62a005a0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fbf62a005a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62a00920"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62a00ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62a00c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62a00dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf629ff020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf629ff1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf629ff340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf629ff4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf629ff660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fbf62a06b70" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fbf62a06b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62a05020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62a051b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62a05340"/>
        <function-ref name="get" scoped="" ref="0x7fbf62a054d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62a05660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62a057f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62a05980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62a05b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62a05ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf62a05e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf62a04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fbf629f61f0" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fbf629f61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629f6570"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf629f6700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629f6890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf629f6a20"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629f6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fbf629f4020" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fbf629f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629f43a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf629f4530"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629f46c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629f4850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629f49e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf629f4b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fbf629f5020" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fbf629f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629f55a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf629f5730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629f58c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf629f5a50"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629f5be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fbf629fba20" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fbf629fba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629fbda0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf629fa020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629fa1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf629fa340"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fbf629fc5a0" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fbf629fc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf629fc920"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf629fcab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf629fcc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf629fcdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf629fb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf629fb1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf629fb340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf629fb4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf629fb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fbf629b5aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fbf629b5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629b5e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fbf629b5450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fbf629b5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629b57d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fbf629b4120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fbf629b4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629b44a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fbf629b6d80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf629b6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629b5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf629b7540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf629b7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf629b78c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf629b7a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf629b7be0"/>
        <function-ref name="get" scoped="" ref="0x7fbf629b7d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf629b6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629b61b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf629b6340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629b64d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf629b6660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf629b67f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf629b6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fbf629ae940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fbf629ae940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629aecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fbf629ae2f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fbf629ae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629ae670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fbf629ad020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fbf629ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fbf629afbf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf629afbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf629b03e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf629b03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf629b0760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf629b08f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf629b0a80"/>
        <function-ref name="get" scoped="" ref="0x7fbf629b0c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf629b0da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629af020"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf629af1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629af340"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf629af4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf629af660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf629af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf62962a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf62962a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62962e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62961020"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629611b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62961340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629614d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62961660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf629aa9d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf629aa9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf629aad50"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62963020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf629631b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62963340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf629634d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62963660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf629637f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62963980"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf62963b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf6295f020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf6295f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6295f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf62963de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf62963de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62962180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf62962310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629624a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf62962630"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629627c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf62961930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf62961930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62961cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62961e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62960020"/>
        <function-ref name="get" scoped="" ref="0x7fbf629601b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62960340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629604d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62960660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629607f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62960980"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf62960b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf62960ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf62959160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf62959160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629594e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62959670"/>
        <function-ref name="captured" scoped="" ref="0x7fbf62959800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62959990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62959b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62959cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf6295b020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf6295b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf6295b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf6295b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6295b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf6295b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf6295b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6295bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf6295bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf6295a020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf6295a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf629577a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf629577a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62957b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf6295a480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf6295a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6295a800"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf6295a990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf6295ab20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf6295acb0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6295ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf62958020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf62958020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf629583a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62958530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf629586c0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62958850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf629589e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62958b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62958d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62957020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf629571b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf62957340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf629574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf629527a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf629527a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62952b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62952cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fbf62952e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62951020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629511b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62951340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf629546d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf629546d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62954a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62954be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62954d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62953020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf629531b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62953340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf629534d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62953660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf629537f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf62950c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf62950c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6294f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf62953ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf62953ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62953e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf62952020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629521b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf62952340"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629524d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf62951610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf62951610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62951990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62951b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62951cb0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62951e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62950020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629501b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62950340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629504d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62950660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf629507f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf62950980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf6294acb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf6294acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629490a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62949230"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629493c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62949550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629496e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62949870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf6294cb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf6294cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf6294b020"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf6294b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6294b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf6294b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf6294b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6294b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf6294b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf6294bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf6294bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf629472f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf629472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62947670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf6294a020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf6294a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6294a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf6294a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf6294a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf6294a850"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6294a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf62949b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf62949b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62948020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf629481b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62948340"/>
        <function-ref name="get" scoped="" ref="0x7fbf629484d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62948660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629487f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62948980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62948b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62948ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf62948e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf62947020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf629422f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf629422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62942670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62942800"/>
        <function-ref name="captured" scoped="" ref="0x7fbf62942990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62942b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62942cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62942e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf62944220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf62944220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf629445a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62944730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf629448c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62944a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf62944be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62944d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf62943020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf629431b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf62943340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf629407a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf629407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62940b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf62943610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf62943610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62943990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf62943b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf62943cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf62943e40"/>
        <function-ref name="fired" scoped="" ref="0x7fbf62942020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf62941160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf62941160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf629414e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62941670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62941800"/>
        <function-ref name="get" scoped="" ref="0x7fbf62941990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62941b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62941cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62941e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62940020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf629401b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf62940340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf629404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf6293a7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf6293a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6293ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf6293acb0"/>
        <function-ref name="captured" scoped="" ref="0x7fbf6293ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62939020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629391b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62939340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf6293d6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf6293d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf6293da50"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf6293dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6293dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf6293b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf6293b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6293b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf6293b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf6293b660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf6293b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf62938c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf62938c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62937020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf6293bac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf6293bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6293be40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf6293a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf6293a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf6293a340"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6293a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf62939610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf62939610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62939990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62939b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62939cb0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62939e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62938020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629381b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62938340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629384d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62938660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf629387f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf62938980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf62933cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf62933cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629320a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62932230"/>
        <function-ref name="captured" scoped="" ref="0x7fbf629323c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62932550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629326e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62932870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf62935b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf62935b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62934020"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf629341b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62934340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf629344d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf62934660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf629347f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf62934980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62934b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf62934ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf629302f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf629302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62930670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf62933020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf62933020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf629333a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf62933530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629336c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf62933850"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629339e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf62932b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf62932b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62931020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf629311b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62931340"/>
        <function-ref name="get" scoped="" ref="0x7fbf629314d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62931660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629317f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62931980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62931b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62931ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf62931e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf62930020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf6292a2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf6292a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6292a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf6292a800"/>
        <function-ref name="captured" scoped="" ref="0x7fbf6292a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6292ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf6292acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf6292ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf6292d220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf6292d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf6292d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf6292d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6292d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf6292da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf6292dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6292dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf6292b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf6292b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf6292b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf629287a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf629287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62928b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf6292b610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf6292b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6292b990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf6292bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf6292bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf6292be40"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6292a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf62929160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf62929160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf629294e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62929670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62929800"/>
        <function-ref name="get" scoped="" ref="0x7fbf62929990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62929b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62929cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62929e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62928020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf629281b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf62928340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf629284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf629237a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf629237a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62923b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf62923cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fbf62923e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62922020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629221b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf62922340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf629256d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf629256d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf62925a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf62925be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62925d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf62924020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf629241b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62924340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf629244d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf62924660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf629247f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf62921c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf62921c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62920020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf62924ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf62924ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf62924e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf62923020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf629231b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf62923340"/>
        <function-ref name="fired" scoped="" ref="0x7fbf629234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf62922610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf62922610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62922990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62922b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62922cb0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62922e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62921020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629211b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62921340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf629214d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62921660"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf629217f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf62921980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf6291ccb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf6291ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6291a0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf6291a230"/>
        <function-ref name="captured" scoped="" ref="0x7fbf6291a3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6291a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf6291a6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf6291a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf6291eb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf6291eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf6291d020"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf6291d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6291d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf6291d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf6291d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6291d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf6291d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf6291db10"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf6291dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fbf629182f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fbf629182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62918670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fbf6291c020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fbf6291c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6291c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf6291c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf6291c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf6291c850"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6291c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf6291ab40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf6291ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62919020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf629191b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf62919340"/>
        <function-ref name="get" scoped="" ref="0x7fbf629194d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf62919660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf629197f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62919980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62919b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62919ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf62919e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf62918020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fbf62912240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fbf62912240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629125c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fbf62916a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fbf62916a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62916e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fbf62913260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fbf62913260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf629135e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fbf629139f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fbf629139f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62913d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fbf62df74c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fbf62df74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fbf62df7840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fbf631683b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fbf631683b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fbf63168730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fbf631688c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fbf63168a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fbf62fd1bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fbf62fd1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fbf6310d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fbf628dcdc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fbf628dcdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf628da180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fbf628dd590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fbf628dd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fbf628dd910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fbf628dc6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fbf628dc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf628dca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fbf628ddc00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fbf628ddc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf628dc020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fbf628dc1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fbf628dc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fbf631e5410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fbf631e5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf631e5790"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf631e5920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fbf631763a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fbf631763a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf63176720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fbf631768b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fbf63176a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fbf62b4db70" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fbf62b4db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf62b4c020"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf62b4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fbf62b462c0" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fbf62b462c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fbf62b46640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fbf62b467d0"/>
        <function-ref name="sleep" scoped="" ref="0x7fbf62b46960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fbf62b4ec30" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fbf62b4ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf62b4d020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fbf62b4d1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fbf62b4d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbf62020020" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf62020020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf620203a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf62020530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf620206c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf62020850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf620209e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbf62020c30" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf62020c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6201f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf6201f1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6201f340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf6201f4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf6201f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbf6201f8b0" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbf6201f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbf6201fc30"/>
        <function-ref name="source" scoped="" ref="0x7fbf6201fdc0"/>
        <function-ref name="address" scoped="" ref="0x7fbf6201e020"/>
        <function-ref name="destination" scoped="" ref="0x7fbf6201e1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fbf6201e340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbf6201e4d0"/>
        <function-ref name="type" scoped="" ref="0x7fbf6201e660"/>
        <function-ref name="setType" scoped="" ref="0x7fbf6201e7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbf6201e980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbf6201eb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbf6201eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fbf6201d020" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fbf6201d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbf6201d3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fbf6201d530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbf6201d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbf60af5b40" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf60af5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf60af4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60af41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60af4340"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf60af44d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf60af4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fbf60af4910" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf60af4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf60af4c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60af4e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60af3020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf60af31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf60af3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fbf60af3590" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbf60af3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbf60af3910"/>
        <function-ref name="source" scoped="" ref="0x7fbf60af3aa0"/>
        <function-ref name="address" scoped="" ref="0x7fbf60af3c30"/>
        <function-ref name="destination" scoped="" ref="0x7fbf60af3dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7fbf60af2020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbf60af21b0"/>
        <function-ref name="type" scoped="" ref="0x7fbf60af2340"/>
        <function-ref name="setType" scoped="" ref="0x7fbf60af24d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbf60af2660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbf60af27f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbf60af2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf62883ce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf62883ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf628800a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf62880230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf628803c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf62880550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf628806e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fbf62836400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf62836400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf628367a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf62836930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf62836ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf62836c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf62836de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf62837580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf62837580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf62837920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf62837ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf62837c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf62837dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf62836020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fbf62834720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf62834720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62834aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf62834c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf62834dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf62833020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf628331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fbf62833480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fbf62833480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf62833800"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf62833990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fbf62833c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fbf62833c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf62832020"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf628321b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fbf62835060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbf62835060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbf628353e0"/>
        <function-ref name="source" scoped="" ref="0x7fbf62835570"/>
        <function-ref name="address" scoped="" ref="0x7fbf62835700"/>
        <function-ref name="destination" scoped="" ref="0x7fbf62835890"/>
        <function-ref name="setSource" scoped="" ref="0x7fbf62835a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbf62835bb0"/>
        <function-ref name="type" scoped="" ref="0x7fbf62835d40"/>
        <function-ref name="setType" scoped="" ref="0x7fbf62834020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbf628341b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbf62834340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbf628344d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbf628283b0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf628283b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf62828730"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf628288c0"/>
        <function-ref name="start" scoped="" ref="0x7fbf62828a50"/>
        <function-ref name="stop" scoped="" ref="0x7fbf62828be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbf6282d3f0" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf6282d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf6282d770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6282d900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf6282da90"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf6282dc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf6282ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbf628277e0" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf628277e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf62827b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf62827cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf62827e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf62826030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf628261c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf628271d0" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf628271d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf62827550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf62814330" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf62814330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf628146b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf62814840"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf628149d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf62814b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf62814cf0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62814e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf6281f030"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf6281f670"/>
        <function-ref name="set" scoped="" ref="0x7fbf6281f1c0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf6281f350"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf6281f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fbf62821b20" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf62821b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbf62820020"/>
        <function-ref name="noAck" scoped="" ref="0x7fbf628201b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbf62820340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbf62826470" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbf62826470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbf628267f0"/>
        <function-ref name="source" scoped="" ref="0x7fbf62826980"/>
        <function-ref name="address" scoped="" ref="0x7fbf62826b10"/>
        <function-ref name="destination" scoped="" ref="0x7fbf62826ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fbf62826e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbf62821020"/>
        <function-ref name="type" scoped="" ref="0x7fbf628211b0"/>
        <function-ref name="setType" scoped="" ref="0x7fbf62821340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbf628214d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbf62821660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbf628217f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbf627bb4a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbf627bb4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf627bb820"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf627bb9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf627bbb40"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf627bbcd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf627bbe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbf627b9120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbf627b9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf627b94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbf62813300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf62813300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf628136a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf62813830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf628139c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf62813b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf62813ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbf627bdd60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf627bdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf627bc180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf627bc310"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf627bc4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf627bc630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf627bc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf627be0d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf627be0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf627be470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fbf627bca10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf627bca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbf627bcd90"/>
        <function-ref name="noAck" scoped="" ref="0x7fbf627bb020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbf627bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbf627be6c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbf627be6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbf627bea40"/>
        <function-ref name="source" scoped="" ref="0x7fbf627bebd0"/>
        <function-ref name="address" scoped="" ref="0x7fbf627bed60"/>
        <function-ref name="destination" scoped="" ref="0x7fbf627bd020"/>
        <function-ref name="setSource" scoped="" ref="0x7fbf627bd1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbf627bd340"/>
        <function-ref name="type" scoped="" ref="0x7fbf627bd4d0"/>
        <function-ref name="setType" scoped="" ref="0x7fbf627bd660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbf627bd7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbf627bd980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbf627bdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbf627b7b90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf627b7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf627b4020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf627b41b0"/>
        <function-ref name="start" scoped="" ref="0x7fbf627b4340"/>
        <function-ref name="stop" scoped="" ref="0x7fbf627b44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf627b3790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf627b3790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fbf62ace0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf627b3b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf627b3ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf627b3e30"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf627b2020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf627b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf627b7540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf627b7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf627b78c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf627b4c60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf627b4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fbf62ace0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf627b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf627b12b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf627b12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf627b1630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf627b17c0"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf627b1950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf627b1ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf627b1c70"/>
        <function-ref name="get" scoped="" ref="0x7fbf627b1e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf627b0020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf627b0660"/>
        <function-ref name="set" scoped="" ref="0x7fbf627b01b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf627b0340"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf627b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7fbf627ac970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7fbf627ac970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fbf62ace0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fbf627accf0"/>
        <function-ref name="offset" scoped="" ref="0x7fbf627ace80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fbf627b1030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbf627a4c40" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf627a4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf627a3020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf627a31b0"/>
        <function-ref name="start" scoped="" ref="0x7fbf627a3340"/>
        <function-ref name="stop" scoped="" ref="0x7fbf627a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7fbf6273c6e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7fbf6273c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf6273ca60"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf6273cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fbf6278e780" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fbf6278e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf6278eb00"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6278ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7fbf627734f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7fbf627734f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf62773870"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf62773a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf627a45f0" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf627a45f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf627a4970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7fbf6278c360" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7fbf6278c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7fbf6278c6e0"/>
        <function-ref name="flush" scoped="" ref="0x7fbf6278c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7fbf6273fc70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7fbf6273fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf6273e020"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf6273e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7fbf627937e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fbf627937e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fbf62793b60"/>
        <function-ref name="resetSend" scoped="" ref="0x7fbf62793cf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fbf62793e80"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fbf6279c030"/>
        <function-ref name="putData" scoped="" ref="0x7fbf6279c1c0"/>
        <function-ref name="putDone" scoped="" ref="0x7fbf6279c350"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fbf6279c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf6279c760" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf6279c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf6279cae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf6279cc70"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf6279ce00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf62792020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf627921b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62792340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf627924d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf62792b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62792660"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf627927f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf62792980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7fbf62738a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7fbf62738a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf62738d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf62737020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7fbf6279da40" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fbf6279da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fbf6279ddc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7fbf627a2020"/>
        <function-ref name="startSend" scoped="" ref="0x7fbf627a21b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fbf627a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7fbf62799530" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fbf62799530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fbf627998b0"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fbf62799a40"/>
        <function-ref name="endPacket" scoped="" ref="0x7fbf62799bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7fbf6266d020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7fbf6266d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf6266d3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf6266d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf62672de0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf62672de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fbf62ace0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf626711c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf62671350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf626714e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf62671670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf62671800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7fbf6266d800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7fbf6266d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf6266db80"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf6266dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf626726c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf626726c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fbf62ace0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf62672a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7fbf62671c20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7fbf62671c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7fbf62ace0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fbf62670020"/>
        <function-ref name="offset" scoped="" ref="0x7fbf626701b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fbf62670340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf6266f920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf6266f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf6266fca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf6266fe30"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf6266e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf6266e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf6266e340"/>
        <function-ref name="get" scoped="" ref="0x7fbf6266e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf6266e660"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf6266eca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6266e980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf6266e7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf6266eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7fbf62670e80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7fbf62670e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7fbf6266f220"/>
        <function-ref name="nextByte" scoped="" ref="0x7fbf6266f3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7fbf6266f540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7fbf6266f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7fbf62670590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7fbf62670590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7fbf62670910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7fbf62670aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7fbf62670c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7fbf6265dd20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fbf6265dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf626660e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fbf62666270"/>
        <function-ref name="receive" scoped="" ref="0x7fbf62666400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fbf62666590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fbf62666720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fbf626668b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf62666a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7fbf6266be00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7fbf6266be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7fbf626681c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7fbf62668350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7fbf626684e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7fbf62668670"/>
        <function-ref name="putData" scoped="" ref="0x7fbf62668800"/>
        <function-ref name="putDone" scoped="" ref="0x7fbf62668990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7fbf62668b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf62666cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf62666cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf626650a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf62665230"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf626653c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf62665550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf626656e0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62665870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf62665a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf6265a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62665b90"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf62665d20"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf6265a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fbf6263e020" loc="40:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fbf6263e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf6263e3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fbf6263e530"/>
        <function-ref name="receive" scoped="" ref="0x7fbf6263e6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fbf6263e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fbf626408d0" loc="39:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fbf626408d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf62640c50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fbf62640de0"/>
        <function-ref name="receive" scoped="" ref="0x7fbf6263f020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fbf6263f1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fbf6263f340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fbf6263f4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf6263f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbf626400c0" loc="38:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbf626400c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf62640440"/>
        <function-ref name="stop" scoped="" ref="0x7fbf626405d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf62053c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf62053c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf62052020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf620521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fbf62051440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fbf62051440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf620517c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fbf62051950"/>
        <function-ref name="receive" scoped="" ref="0x7fbf62051ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fbf62051c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fbf62050020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf62050020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbf620503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fbf62052440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fbf62052440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf620527c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fbf62052950"/>
        <function-ref name="receive" scoped="" ref="0x7fbf62052ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fbf62052c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fbf62052e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fbf62051020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf620511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf62053020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf62053020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf620533a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf62053530"/>
        <function-ref name="request" scoped="" ref="0x7fbf620536c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf62053850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf620539e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fbf625d5dd0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf625d5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf625d7180"/>
        <function-ref name="configure" scoped="" ref="0x7fbf625d7310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fbf625d4210" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fbf625d4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf625d4590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fbf625d4720"/>
        <function-ref name="receive" scoped="" ref="0x7fbf625d48b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fbf625d4a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fbf625d1600" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf625d1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbf625d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fbf625d7b50" loc="43:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fbf625d7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf625d6020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fbf625d61b0"/>
        <function-ref name="receive" scoped="" ref="0x7fbf625d6340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fbf625d64d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fbf625d6660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fbf625d67f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf625d6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fbf625d2370" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fbf625d2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf625d26f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf625d2880"/>
        <function-ref name="request" scoped="" ref="0x7fbf625d2a10"/>
        <function-ref name="granted" scoped="" ref="0x7fbf625d2ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf625d2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf625da320" loc="41:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf625da320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf625da6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf625da830"/>
        <function-ref name="request" scoped="" ref="0x7fbf625da9c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf625dab50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf625dace0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fbf625cdbe0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf625cdbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf625d0020"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf625d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fbf62541e70" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf62541e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf6253f240"/>
        <function-ref name="configure" scoped="" ref="0x7fbf6253f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7fbf6253e890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7fbf6253e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf6253ec30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7fbf6253edc0"/>
        <function-ref name="receive" scoped="" ref="0x7fbf6253d020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7fbf6253d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7fbf6253c3e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf6253c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbf6253c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fbf6253ca50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fbf6253ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbf6253cdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbf6253b020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbf6253b1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbf6253b340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbf6253b4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbf6253b660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbf6253b7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbf6253b980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbf6253bb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbf6253bca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbf6253be30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbf6253a020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbf6253a1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbf6253a440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbf6253a5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbf6253a760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbf6253a8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fbf6253aa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbf6253ac10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbf6253ada0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbf62539020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbf625391b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbf62539340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbf625394d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62539660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbf625399f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbf62539b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbf62539d10"/>
        <function-ref name="tx" scoped="" ref="0x7fbf62538020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbf625381b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbf62538340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbf625384d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbf62538660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbf625387f0"/>
        <function-ref name="rx" scoped="" ref="0x7fbf62538980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbf62538b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbf62538ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbf62538e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbf62537020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbf625371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7fbf6253f790" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7fbf6253f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf6253fb30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7fbf6253fcc0"/>
        <function-ref name="receive" scoped="" ref="0x7fbf6253fe50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7fbf6253e020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7fbf6253e1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7fbf6253e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf6253e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbf62536020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf62536020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf62536e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62535800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62535340"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62535cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fbf6253d5b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fbf6253d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6253d950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6253dae0"/>
        <function-ref name="request" scoped="" ref="0x7fbf6253dc70"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6253de00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6253c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf625410d0" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf625410d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf62541470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf62541600"/>
        <function-ref name="request" scoped="" ref="0x7fbf62541790"/>
        <function-ref name="granted" scoped="" ref="0x7fbf62541920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf62541ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fbf625375b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf625375b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf62537950"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf62537ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf62533120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf62533120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf625334a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf62533630"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf625337c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf62533950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf62533ae0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62533c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf62533e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf625324d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf625321b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf62532020"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf62532340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fbf62525bd0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbf62525bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf62524020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fbf625266d0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf625266d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf62526a50"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf62526be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fbf6252db60" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf6252db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbf6252a020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbf6252a1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbf6252a340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbf6252a4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbf6252a660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbf6252a7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbf6252a980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbf6252ab10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbf6252aca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbf6252ae30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbf62529020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbf625291b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbf62529340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbf625295d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbf62529760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbf625298f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbf62529a80"/>
        <function-ref name="isUart" scoped="" ref="0x7fbf62529c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbf62529da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbf62528020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbf625281b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbf62528340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbf625284d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbf62528660"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf625287f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbf62528b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbf62528d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbf62527020"/>
        <function-ref name="tx" scoped="" ref="0x7fbf625271b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbf62527340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbf625274d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbf62527660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbf625277f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbf62527980"/>
        <function-ref name="rx" scoped="" ref="0x7fbf62527b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbf62527ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbf62527e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbf62526020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbf625261b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbf62526340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fbf624e0800" loc="82:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fbf624e0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf624e0b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf624e0d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624df020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624df1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624df340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624df4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624df660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624df7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf624df980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf624dfb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf624dfca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf624dfe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624de020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624de2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624de440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fbf6251c020" loc="76:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fbf6251c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf6251c3a0"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf6251c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fbf624de800" loc="83:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fbf624de800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf624deb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf624ded10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624dd020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624dd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624dd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624dd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624dd660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624dd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf624dd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf624ddb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf624ddca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf624dde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624dc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624dc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624dc440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fbf624dc800" loc="84:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fbf624dc800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf624dcb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf624dcd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624da020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624da1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624da340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624da4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624da660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624da7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf624da980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf624dab10"/>
        <function-ref name="set" scoped="" ref="0x7fbf624daca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf624dae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624d9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624d92b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624d9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fbf62521360" loc="75:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fbf62521360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbf625216e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbf62521870"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbf62521a00"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbf62521b90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbf62521d20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbf62520020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbf625201b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbf62520340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbf625204d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbf62520660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbf625207f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbf62520980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbf62520b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbf62520da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbf6251f020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbf6251f1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbf6251f340"/>
        <function-ref name="isUart" scoped="" ref="0x7fbf6251f4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbf6251f660"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbf6251f7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbf6251f980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbf6251fb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbf6251fca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbf6251fe30"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf6251e020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbf6251e3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbf6251e540"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbf6251e6d0"/>
        <function-ref name="tx" scoped="" ref="0x7fbf6251e860"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbf6251e9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbf6251eb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbf6251ed10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbf6251d020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbf6251d1b0"/>
        <function-ref name="rx" scoped="" ref="0x7fbf6251d340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbf6251d4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbf6251d660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbf6251d7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbf6251d980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbf6251db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf624d9700" loc="86:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf624d9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf624d9a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf624d9c10"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf624d9da0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf624d8020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf624d81b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf624d8340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf624d84d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf624d8b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf624d8660"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf624d87f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf624d8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fbf624f3bc0" loc="79:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fbf624f3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fbf6251a020"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fbf6251a1b0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fbf6251a340"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fbf6251a4d0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fbf6251a660"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fbf6251a7f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fbf6251a980"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fbf6251ab10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf6251aca0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fbf6251ae30"/>
        <function-ref name="getData" scoped="" ref="0x7fbf62519020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fbf625191b0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fbf62519340"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fbf625195d0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fbf62519760"/>
        <function-ref name="getIV" scoped="" ref="0x7fbf625198f0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fbf62519a80"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fbf62519c10"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fbf62519da0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fbf624f2020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fbf624f21b0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fbf624f2340"/>
        <function-ref name="isI2C" scoped="" ref="0x7fbf624f24d0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fbf624f2660"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fbf624f27f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fbf624f2b80"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fbf624f2d10"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fbf624f1020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fbf624f11b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fbf624f1340"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fbf624f14d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fbf624f1660"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fbf624f17f0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fbf624f1980"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fbf624f1b10"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fbf624f1ca0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fbf624f1e30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fbf624f0020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fbf624f01b0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fbf624f0340"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fbf624f04d0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fbf624f0660"/>
        <function-ref name="setData" scoped="" ref="0x7fbf624f07f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fbf624f0980"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fbf624f0b10"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fbf624f0ca0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fbf624f0e30"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fbf624ef020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fbf624ef1b0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fbf624ef740"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fbf624ef8d0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fbf624efa60"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fbf624efbf0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fbf624efd80"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fbf624ee020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fbf624ee1b0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fbf624ee340"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fbf624ee4d0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fbf624ee660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fbf624ec800" loc="81:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fbf624ec800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf624ecb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf624ecd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624e1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624e11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624e1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624e14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624e1660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624e17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf624e1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf624e1b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf624e1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf624e1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624e0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624e02b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624e0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fbf6251c970" loc="77:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbf6251c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6251ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fbf624e2860" loc="80:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fbf624e2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf624e2be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf624e2d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624ed020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624ed1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624ed340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624ed660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624ed7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf624ed980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf624edb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf624edca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf624ede30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624ec020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624ec2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624ec440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fbf62455810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fbf62455810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62455b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62455d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62454020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62454340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62454660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624547f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62454980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62454b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62454ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62454e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62453020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624532b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62453440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fbf62441810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fbf62441810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62441b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62441d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62440020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624401b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62440340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62440660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624407f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62440980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62440b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62440ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62440e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6243f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6243f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6243f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fbf623f7ca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fbf623f7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623f60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623f6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623f63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623f6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623f66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623f6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623f6a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623f6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623f6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623f5020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623f51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623f5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623f54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623f5760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623f58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fbf623d2cb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fbf623d2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623d10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623d1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623d13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623d1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623d16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623d1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623d1a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623d1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623d1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623d0020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623d01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623d0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623d04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623d0760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623d08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fbf623f5cc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fbf623f5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623f40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623f4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623f43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623f4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623f46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623f4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623f4a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623f4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623f4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623f3020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623f3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623f3760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623f38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fbf6243c810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fbf6243c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6243cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6243cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6243b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6243b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6243b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6243b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6243b660"/>
        <function-ref name="get" scoped="" ref="0x7fbf6243b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6243b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6243bb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf6243bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6243be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6243a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6243a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6243a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fbf624289a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fbf624289a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62428d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62427020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624271b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62427340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624274d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62427660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624277f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62427980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62427b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62427ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62427e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62426020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624261b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62426440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624265d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fbf624149a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fbf624149a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62414d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62413020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624131b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62413340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624134d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62413660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624137f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62413980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62413b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62413ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62413e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62412020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624121b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62412440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624125d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fbf624039a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fbf624039a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62403d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62402020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624021b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62402340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624024d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62402660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624027f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62402980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62402b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62402ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62402e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62401020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624011b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62401440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624015d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fbf623efcc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fbf623efcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623ee0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623ee230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623ee3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623ee550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623ee6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623ee870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623eea00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623eeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623eed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623ed020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623ed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623ed340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623ed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623ed760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623ed8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fbf623decb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fbf623decb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623dd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623dd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623dd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623dd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623dd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623dda00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623ddb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623ddd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623dc020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623dc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623dc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623dc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623dc760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623dc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fbf623cacc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fbf623cacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623c90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623c9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623c93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623c9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623c96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623c9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623c9a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623c9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623c9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623c8020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623c8760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fbf6244f810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fbf6244f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6244fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6244fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6244e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6244e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6244e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6244e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6244e660"/>
        <function-ref name="get" scoped="" ref="0x7fbf6244e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6244e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6244eb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf6244eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6244ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6244d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6244d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6244d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fbf623edcc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fbf623edcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623ec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623ec230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623ec3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623ec550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623ec6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623ec870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623eca00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623ecb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623ecd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623eb020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623eb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623eb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623eb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623eb760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623eb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fbf6244b810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fbf6244b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6244bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6244bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6244a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6244a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6244a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6244a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6244a660"/>
        <function-ref name="get" scoped="" ref="0x7fbf6244a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6244a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6244ab10"/>
        <function-ref name="set" scoped="" ref="0x7fbf6244aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6244ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62449020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624492b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62449440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fbf62436810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fbf62436810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62436b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62436d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62435020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62435340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62435660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624357f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62435980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62435b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62435ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62435e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62434020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624342b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62434440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fbf624229a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fbf624229a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62422d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62421020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624211b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62421340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624214d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62421660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624217f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62421980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62421b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62421ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62421e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62420020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624201b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62420440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624205d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fbf6240d9a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fbf6240d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6240dd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6240c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6240c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6240c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6240c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6240c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6240c7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6240c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6240cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6240cca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6240ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6240b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6240b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6240b440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6240b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fbf623fd9a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fbf623fd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623fdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623fc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623fc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623fc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623fc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623fc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623fc7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf623fc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623fcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623fcca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf623fce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623fb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623fb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623fb440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623fb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fbf62459810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fbf62459810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62459b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62459d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62458020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624581b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62458340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624584d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62458660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624587f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62458980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62458b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62458ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62458e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62457020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624572b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62457440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fbf62445810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fbf62445810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62445c90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62445e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62444020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624441b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62444340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62444660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624447f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62444980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62444b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62444ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62444e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62443020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624432b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62443440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fbf62430810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fbf62430810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62430b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62430d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6242f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6242f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6242f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6242f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6242f660"/>
        <function-ref name="get" scoped="" ref="0x7fbf6242f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6242f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6242fb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf6242fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6242fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6242e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6242e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6242e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fbf623f9cc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fbf623f9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623f80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623f8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623f83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623f8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623f86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623f8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623f8a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623f8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623f8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623f7020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623f71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623f7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623f74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623f7760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623f78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fbf623d8cb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fbf623d8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623d70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623d7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623d73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623d7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623d76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623d7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623d7a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623d7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623d7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623d6020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623d61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623d6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623d64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623d6760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fbf623cccb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fbf623cccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623cb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623cb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623cb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623cb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623cb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623cb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623cba00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623cbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623cbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623ca020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623ca1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623ca340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623ca4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623ca760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fbf623e5cc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fbf623e5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623e40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623e4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623e43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623e4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623e46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623e4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623e4a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623e4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623e4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623e3020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623e31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623e3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623e34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623e3760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623e38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fbf6242c810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fbf6242c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6242cd90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6242b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6242b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6242b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6242b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6242b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6242b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6242b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6242bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6242bca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6242be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6242a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6242a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6242a440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6242a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fbf624189a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fbf624189a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62418d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62417020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624171b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62417340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624174d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62417660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624177f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62417980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62417b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62417ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62417e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62416020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624161b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62416440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624165d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fbf624079a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fbf624079a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62407d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62406020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624061b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62406340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624064d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62406660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624067f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62406980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62406b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62406ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62406e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62405020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624051b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62405440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624055d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fbf623d6cb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fbf623d6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623d50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623d5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623d53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623d5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623d56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623d5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623d5a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623d5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623d5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623d4020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623d41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623d4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623d44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623d4760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623d48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fbf623ebcb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fbf623ebcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623ea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623ea230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623ea3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623ea550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623ea6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623ea870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623eaa00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623eab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623ead20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623e9020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623e91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623e9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623e94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623e9760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623e98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fbf62453810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fbf62453810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62453b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62453d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62452020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624521b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62452340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624524d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62452660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624527f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62452980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62452b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62452ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62452e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62451020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624512b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62451440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fbf6243f810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fbf6243f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6243fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6243fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6243d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6243d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6243d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6243d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6243d660"/>
        <function-ref name="get" scoped="" ref="0x7fbf6243d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6243d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6243db10"/>
        <function-ref name="set" scoped="" ref="0x7fbf6243dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6243de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6243c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6243c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6243c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fbf6240b9a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fbf6240b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6240bd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6240a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6240a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6240a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6240a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6240a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6240a7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6240a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6240ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6240aca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6240ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62409020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624091b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62409440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624095d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fbf6243a810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fbf6243a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6243ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6243ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62439020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62439340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62439660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624397f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62439980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62439b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62439ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62439e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62438020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624382b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62438440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fbf624269a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fbf624269a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62426d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62425020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624251b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62425340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624254d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62425660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624257f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62425980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62425b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62425ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62425e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62424020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624241b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62424440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624245d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fbf624129a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fbf624129a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62412d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62411020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624111b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62411340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624114d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62411660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624117f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62411980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62411b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62411ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62411e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62410020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624101b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62410440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624105d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fbf624019a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fbf624019a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62401d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62400020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624001b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62400340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624004d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62400660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624007f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62400980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62400b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62400ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62400e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623ff020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623ff1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623ff440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623ff5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fbf623e7cc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fbf623e7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623e60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623e6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623e63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623e6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623e66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623e6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623e6a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623e6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623e6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623e5020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623e51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623e5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623e54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623e5760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623e58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fbf6245f800" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fbf6245f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6245fb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6245fd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6245c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6245c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6245c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6245c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6245c660"/>
        <function-ref name="get" scoped="" ref="0x7fbf6245c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6245c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6245cb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf6245cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6245ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6245b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6245b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6245b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fbf62449810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fbf62449810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62449b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62449d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62448020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624481b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62448340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62448660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624487f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62448980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62448b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62448ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62448e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62447020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624472b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62447440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fbf62434810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fbf62434810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62434b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62434d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62433020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62433340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62433660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624337f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62433980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62433b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62433ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62433e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62432020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624322b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62432440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fbf624209a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fbf624209a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62420d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6241f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6241f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6241f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6241f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6241f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6241f7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6241f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6241fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6241fca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6241fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6241e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6241e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6241e440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6241e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fbf623e3cc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fbf623e3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623e20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623e2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623e23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623e2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623e26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623e2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623e2a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623e2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623e2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623e1020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623e11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623e1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623e14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623e1760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623e18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fbf623dccb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fbf623dccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623db0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623db230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623db3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623db550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623db6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623db870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623dba00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623dbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623dbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623da020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623da1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623da340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623da4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623da760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623da8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fbf623d0cb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fbf623d0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623cf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623cf230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623cf3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623cf550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623cf6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623cf870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623cfa00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623cfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623cfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623ce020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623ce1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623ce340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623ce4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623ce760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fbf6241c9a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fbf6241c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6241cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6241b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6241b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6241b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6241b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6241b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6241b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6241b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6241bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6241bca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6241be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6241a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6241a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6241a440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6241a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fbf623e1cc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fbf623e1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623df230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623df3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623df550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623df6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623df870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623dfa00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623dfb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623dfd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623de020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623de1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623de340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623de4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623de760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623de8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fbf62457810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fbf62457810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62457b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62457d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62456020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62456340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62456660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624567f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62456980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62456b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62456ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62456e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62455020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624552b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62455440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fbf62443810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fbf62443810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62443b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62443d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62442020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624421b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62442340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62442660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624427f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62442980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62442b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62442ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62442e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62441020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624412b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62441440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fbf6242e810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fbf6242e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6242eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6242ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6242d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6242d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6242d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6242d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6242d660"/>
        <function-ref name="get" scoped="" ref="0x7fbf6242d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6242d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6242db10"/>
        <function-ref name="set" scoped="" ref="0x7fbf6242dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6242de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6242c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6242c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6242c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fbf623e9cc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fbf623e9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623e80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623e8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623e83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623e8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623e86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623e8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623e8a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623e8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623e8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623e7020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623e71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623e7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623e74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623e7760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623e78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fbf623d4cb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fbf623d4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623d30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623d3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623d33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623d3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623d36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623d3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623d3a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623d3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623d3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623d2020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623d21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623d2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623d24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623d2760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623d28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fbf6242a9a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fbf6242a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6242ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62429020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624291b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62429340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624294d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62429660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624297f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62429980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62429b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62429ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62429e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62428020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624281b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62428440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624285d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fbf624169a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fbf624169a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62416d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62415020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624151b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62415340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624154d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62415660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624157f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62415980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62415b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62415ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62415e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62414020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624141b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62414440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624145d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fbf624059a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fbf624059a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62405d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62404020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624041b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62404340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624044d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62404660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624047f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62404980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62404b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62404ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62404e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62403020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624031b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62403440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624035d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fbf62451810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fbf62451810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62451b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62451d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62450020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62450340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62450660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624507f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62450980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62450b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62450ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62450e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6244f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6244f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6244f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fbf624099a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fbf624099a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62409d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62408020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624081b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62408340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624084d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62408660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624087f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62408980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62408b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62408ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62408e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62407020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624071b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62407440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624075d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fbf6244d810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fbf6244d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6244db90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6244dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6244c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6244c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6244c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6244c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6244c660"/>
        <function-ref name="get" scoped="" ref="0x7fbf6244c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6244c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6244cb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf6244cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6244ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6244b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6244b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6244b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fbf62438810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fbf62438810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62438b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62438d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62437020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624371b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62437340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624374d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62437660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624377f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62437980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62437b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62437ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62437e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62436020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624362b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62436440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fbf624249a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fbf624249a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62424d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62423020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62423340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624234d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62423660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624237f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62423980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62423b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62423ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62423e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62422020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624221b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62422440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624225d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fbf624109a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fbf624109a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62410d20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6240e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6240e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6240e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6240e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6240e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6240e7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6240e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6240eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6240eca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6240ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6240d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6240d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6240d440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6240d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fbf623ff9a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fbf623ff9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623ffd20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623fe020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623fe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623fe340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623fe4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623fe660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623fe7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf623fe980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623feb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623feca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf623fee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623fd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623fd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623fd440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623fd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fbf6245b810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fbf6245b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6245bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6245bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6245a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6245a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6245a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6245a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6245a660"/>
        <function-ref name="get" scoped="" ref="0x7fbf6245a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6245a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6245ab10"/>
        <function-ref name="set" scoped="" ref="0x7fbf6245aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6245ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62459020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624592b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62459440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fbf62447810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fbf62447810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62447b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62447d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62446020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624461b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62446340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624464d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62446660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624467f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62446980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62446b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62446ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62446e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62445020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624452b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62445440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fbf62432810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fbf62432810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62432b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62432d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62431020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf624311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62431340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf624314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62431660"/>
        <function-ref name="get" scoped="" ref="0x7fbf624317f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62431980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62431b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf62431ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62431e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62430020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf624302b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62430440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fbf6241e9a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fbf6241e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6241ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6241d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6241d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6241d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6241d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6241d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6241d7f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6241d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6241db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6241dca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6241de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6241c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6241c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6241c440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6241c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fbf623f1ca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fbf623f1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623f00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623f0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623f03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623f0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623f06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623f0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623f0a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623f0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623f0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623ef020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623ef1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623ef340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623ef4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623ef760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623ef8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fbf623dacb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fbf623dacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623d90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623d9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623d93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623d9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623d96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623d9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623d9a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623d9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623d9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623d8020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623d81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623d8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623d84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623d8760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623d88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fbf623f3cc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fbf623f3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623f20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623f2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623f23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623f2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623f26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623f2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623f2a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623f2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623f2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623f1020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623f11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623f1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623f14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623f1760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623f18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fbf6241a9a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fbf6241a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6241ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62419020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf624191b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62419340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf624194d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62419660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf624197f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62419980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62419b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62419ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62419e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62418020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf624181b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62418440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf624185d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fbf623cecb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fbf623cecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623cd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623cd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623cd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623cd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623cd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623cda00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623cdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623cdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623cc020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623cc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623cc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623cc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623cc760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fbf623c8cc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fbf623c8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623c70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623c7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623c73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623c7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623c76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623c7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623c7a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf623c7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623c7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623c6020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623c6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623c64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623c6760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623c68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fbf623fb9f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fbf623fb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623fa1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623fa350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623fa4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623fa670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623fa800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623fa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623fab20"/>
        <function-ref name="get" scoped="" ref="0x7fbf623facb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623fae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623f9020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623f91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623f9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623f94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623f9760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623f98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf623c3d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf623c3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6239c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6239c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6239c400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6239c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6239c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6239c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6239ca40"/>
        <function-ref name="get" scoped="" ref="0x7fbf6239cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6239cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6239b020"/>
        <function-ref name="set" scoped="" ref="0x7fbf6239b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6239b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6239b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6239b760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6239b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62398740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62398740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62398ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62398c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62398de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62397020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62397340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623974d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62397660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62397980"/>
        <function-ref name="set" scoped="" ref="0x7fbf62397b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62397ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62397e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62396120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62393100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62393100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62393480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62393610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623937a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62393930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62393ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62393c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62393de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62391020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623911b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62391340"/>
        <function-ref name="set" scoped="" ref="0x7fbf623914d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62391660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623917f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62391a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62391c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6238ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6238ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6238d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6238d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6238d400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6238d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6238d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6238d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6238da40"/>
        <function-ref name="get" scoped="" ref="0x7fbf6238dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6238dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6238c020"/>
        <function-ref name="set" scoped="" ref="0x7fbf6238c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6238c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6238c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6238c760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6238c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62389740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62389740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62389ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62389c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62389de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62388020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623881b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62388340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623884d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62388660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623887f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62388980"/>
        <function-ref name="set" scoped="" ref="0x7fbf62388b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62388ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62388e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62387120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623872b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62384100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62384100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62384480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62384610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623847a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62384930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62384ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62384c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62384de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62383020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623831b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62383340"/>
        <function-ref name="set" scoped="" ref="0x7fbf623834d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62383660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623837f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62383a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62383c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62380d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62380d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6237f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6237f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6237f400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6237f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6237f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6237f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6237fa40"/>
        <function-ref name="get" scoped="" ref="0x7fbf6237fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6237fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6237e020"/>
        <function-ref name="set" scoped="" ref="0x7fbf6237e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6237e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6237e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6237e760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6237e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6237b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6237b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6237bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6237bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6237bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6237a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6237a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6237a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6237a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6237a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6237a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6237a980"/>
        <function-ref name="set" scoped="" ref="0x7fbf6237ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6237aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6237ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62379120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62376100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62376100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62376480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62376610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623767a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62376930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62376ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62376c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62376de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62375020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623751b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62375340"/>
        <function-ref name="set" scoped="" ref="0x7fbf623754d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62375660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623757f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62375a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62375c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62372d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62372d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623710e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62371270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62371400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62371590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62371720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623718b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62371a40"/>
        <function-ref name="get" scoped="" ref="0x7fbf62371bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62371d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62370020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623701b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62370340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623704d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62370760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6236d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6236d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6236dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6236dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6236dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6236b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6236b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6236b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6236b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6236b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6236b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6236b980"/>
        <function-ref name="set" scoped="" ref="0x7fbf6236bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6236bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6236be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6236a120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6236a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62367100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62367100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62367480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62367610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623677a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62367930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62367ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62367c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62367de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62366020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62366340"/>
        <function-ref name="set" scoped="" ref="0x7fbf623664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62366660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62366a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62366c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62363d80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62363d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62362180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62362310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623624a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62362630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623627c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62362950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62362ae0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62362c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62362e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62361020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62361340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62361760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6235e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6235e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6235eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6235ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6235ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6235d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6235d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6235d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6235d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6235d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6235d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6235d980"/>
        <function-ref name="set" scoped="" ref="0x7fbf6235db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6235dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6235de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6235c120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6235c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62359100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62359100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62359480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62359610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623597a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62359930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62359ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62359c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62359de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62358020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62358340"/>
        <function-ref name="set" scoped="" ref="0x7fbf623584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62358660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62358a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62358c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62355d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62355d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623540e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62354270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62354400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62354590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62354720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623548b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62354a40"/>
        <function-ref name="get" scoped="" ref="0x7fbf62354bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62354d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62353020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62353340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62353760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62350740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62350740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62350ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62350c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62350de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6234f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6234f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6234f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6234f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6234f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6234f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6234f980"/>
        <function-ref name="set" scoped="" ref="0x7fbf6234fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6234fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6234fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6234e120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6234e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6234b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6234b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6234b480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6234b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6234b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6234b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6234bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6234bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6234bde0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6234a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6234a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6234a340"/>
        <function-ref name="set" scoped="" ref="0x7fbf6234a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6234a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6234a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6234aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6234ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62346d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62346d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623450e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62345270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62345400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62345590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62345720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623458b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62345a40"/>
        <function-ref name="get" scoped="" ref="0x7fbf62345bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62345d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62344020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623441b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62344340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623444d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62344760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623448f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62341740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62341740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62341ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62341c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62341de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62340020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62340340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623404d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62340660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623407f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62340980"/>
        <function-ref name="set" scoped="" ref="0x7fbf62340b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62340ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62340e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6233f120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6233f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6233c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6233c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6233c480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6233c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6233c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6233c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6233cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6233cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6233cde0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6233b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6233b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6233b340"/>
        <function-ref name="set" scoped="" ref="0x7fbf6233b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6233b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6233b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6233ba80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6233bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62338d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62338d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf623370e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62337270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62337400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62337590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62337720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623378b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62337a40"/>
        <function-ref name="get" scoped="" ref="0x7fbf62337bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62337d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62336020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623361b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62336340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623364d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62336760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623368f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62333740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62333740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62333ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62333c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62333de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62332020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623321b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62332340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623324d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62332660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62332980"/>
        <function-ref name="set" scoped="" ref="0x7fbf62332b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62332ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62332e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62331120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6232e100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6232e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6232e480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6232e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6232e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6232e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6232eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6232ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6232ede0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6232d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6232d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6232d340"/>
        <function-ref name="set" scoped="" ref="0x7fbf6232d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6232d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6232d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6232da80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6232dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6232ae60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6232ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62329210"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf623293a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62329530"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf623296c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62329850"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf623299e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62329b70"/>
        <function-ref name="get" scoped="" ref="0x7fbf62329d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62328020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf623281b0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62328340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf623284d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62328660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf623288f0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62328a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf623259f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf623259f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62325d70"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62323020"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62323340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623234d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62323660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623237f0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62323980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf62323b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62323ca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62323e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62322020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623221b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62322440"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623225d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6231f460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6231f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6231f7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6231f970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6231fb00"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6231fc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6231fe20"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6231e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6231e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6231e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6231e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6231e660"/>
        <function-ref name="set" scoped="" ref="0x7fbf6231e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6231e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6231eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6231eda0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6231d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6231be00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6231be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6231a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6231a350"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6231a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6231a670"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6231a800"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6231a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6231ab20"/>
        <function-ref name="get" scoped="" ref="0x7fbf6231acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6231ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62319020"/>
        <function-ref name="set" scoped="" ref="0x7fbf623191b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62319340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623194d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62319760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62316740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62316740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62316ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62316c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62316de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62315020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623151b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62315340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623154d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62315660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623157f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62315980"/>
        <function-ref name="set" scoped="" ref="0x7fbf62315b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62315ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62315e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62314120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623142b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62311100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62311100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62311480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62311610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623117a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62311930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62311ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62311c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62311de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62310020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623101b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62310340"/>
        <function-ref name="set" scoped="" ref="0x7fbf623104d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62310660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623107f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62310a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62310c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf6230dd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf6230dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6230c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6230c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf6230c400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6230c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6230c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf6230c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6230ca40"/>
        <function-ref name="get" scoped="" ref="0x7fbf6230cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf6230cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf6230b020"/>
        <function-ref name="set" scoped="" ref="0x7fbf6230b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf6230b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf6230b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf6230b760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6230b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62308740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62308740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62308ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62308c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf62308de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62307020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf623071b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62307340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf623074d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62307660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62307980"/>
        <function-ref name="set" scoped="" ref="0x7fbf62307b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62307ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf62307e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62306120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf623062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf62303100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf62303100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62303480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62303610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf623037a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62303930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62303ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf62303c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62303de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62302020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf623021b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf62302340"/>
        <function-ref name="set" scoped="" ref="0x7fbf623024d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf62302660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf623027f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf62302a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62302c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622ffd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622ffd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622fd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622fd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622fd400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622fd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622fd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622fd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622fda40"/>
        <function-ref name="get" scoped="" ref="0x7fbf622fdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622fdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622fc020"/>
        <function-ref name="set" scoped="" ref="0x7fbf622fc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622fc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622fc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622fc760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622f9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622f9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622f9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622f9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622f9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622f81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622f8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622f84d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622f8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622f87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622f8980"/>
        <function-ref name="set" scoped="" ref="0x7fbf622f8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622f8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622f8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622f7120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622f4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622f4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622f4480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622f4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622f47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622f4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622f4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622f4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622f4de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622f3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622f31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622f3340"/>
        <function-ref name="set" scoped="" ref="0x7fbf622f34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622f3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622f37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622f3a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622f3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622f0d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622f0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622ef0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622ef270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622ef400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622ef590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622ef720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622ef8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622efa40"/>
        <function-ref name="get" scoped="" ref="0x7fbf622efbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622efd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622ee020"/>
        <function-ref name="set" scoped="" ref="0x7fbf622ee1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622ee340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622ee4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622ee760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622ee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622eb740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622eb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622ebac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622ebc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622ebde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622ea1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622ea340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622ea4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622ea660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622ea7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622ea980"/>
        <function-ref name="set" scoped="" ref="0x7fbf622eab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622eaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622eae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622e9120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622e6100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622e6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622e6480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622e6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622e67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622e6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622e6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622e6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622e6de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622e5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622e51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622e5340"/>
        <function-ref name="set" scoped="" ref="0x7fbf622e54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622e5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622e57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622e5a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622e5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622e2d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622e2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622e10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622e1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622e1400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622e1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622e1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622e18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622e1a40"/>
        <function-ref name="get" scoped="" ref="0x7fbf622e1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622e1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622e0020"/>
        <function-ref name="set" scoped="" ref="0x7fbf622e01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622e0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622e04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622e0760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622dd740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622dd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622ddac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622ddc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622ddde0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622dc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622dc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622dc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622dc4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622dc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622dc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622dc980"/>
        <function-ref name="set" scoped="" ref="0x7fbf622dcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622dcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622dce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622db120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622db2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622d7100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622d7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622d7480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622d7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622d77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622d7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622d7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622d7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622d7de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622d6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622d61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622d6340"/>
        <function-ref name="set" scoped="" ref="0x7fbf622d64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622d6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622d67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622d6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622d6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622d3d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622d3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622d20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622d2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622d2400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622d2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622d2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622d28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622d2a40"/>
        <function-ref name="get" scoped="" ref="0x7fbf622d2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622d2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622d1020"/>
        <function-ref name="set" scoped="" ref="0x7fbf622d11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622d1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622d14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622d1760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622d18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622ce740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622ce740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622ceac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622cec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622cede0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622cd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622cd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622cd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622cd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622cd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622cd980"/>
        <function-ref name="set" scoped="" ref="0x7fbf622cdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622cdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622cde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622cc120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622cc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622c9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622c9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622c9480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622c9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622c97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622c9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622c9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622c9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622c9de0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622c8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622c81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622c8340"/>
        <function-ref name="set" scoped="" ref="0x7fbf622c84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622c8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622c87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622c8a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622c8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622c5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622c5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622c40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622c4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622c4400"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622c4590"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622c4720"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622c48b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622c4a40"/>
        <function-ref name="get" scoped="" ref="0x7fbf622c4bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622c4d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622c3020"/>
        <function-ref name="set" scoped="" ref="0x7fbf622c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622c3760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622c0740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622c0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622c0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622c0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622c0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622bf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622bf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622bf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622bf4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622bf660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622bf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622bf980"/>
        <function-ref name="set" scoped="" ref="0x7fbf622bfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622bfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622bfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622be120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622be2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fbf622bb100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fbf622bb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622bb480"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622bb610"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf622bb7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622bb930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622bbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf622bbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622bbde0"/>
        <function-ref name="get" scoped="" ref="0x7fbf622ba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf622ba1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf622ba340"/>
        <function-ref name="set" scoped="" ref="0x7fbf622ba4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf622ba660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf622ba7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf622baa80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf622bac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbf6224cd20" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf6224cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf62249b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62248550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf62248090"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62248a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fbf62247d90" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fbf62247d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf62244bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62243590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf622430d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62243a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fbf6222e020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf6222e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6222e3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf6222e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6222e6c0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6222e850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6222e9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6222eb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf6222ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf6222d020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf6222d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf6222d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf6222d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbf6223ee50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf6223ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf6223dca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf62230670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf622301b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf62230b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fbf6222a020" loc="47:../../../tos/platforms/shimmer2r/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf6222a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf6222a3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf6222a530"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf6222a6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf6222a850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf6222a9e0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6222ab70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf6222ad00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf622294d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62229020"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf622291b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf62229340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fbf62223060" loc="51:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fbf62223060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622233e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62223570"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62223700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62223890"/>
        <function-ref name="get" scoped="" ref="0x7fbf62223a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf62223bb0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62223d40"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62222020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf62226470" loc="47:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf62226470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf622267f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fbf62222340" loc="52:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fbf62222340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf622226c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf62222850"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf622229e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf62222b70"/>
        <function-ref name="get" scoped="" ref="0x7fbf62222d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6221d020"/>
        <function-ref name="set" scoped="" ref="0x7fbf6221d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6221d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fbf62226a70" loc="48:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf62226a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf62226df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf62225020"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf622251b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf62225340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf622254d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62225660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf622257f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf62225e30"/>
        <function-ref name="set" scoped="" ref="0x7fbf62225980"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf62225b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf62225ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fbf6221d660" loc="53:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fbf6221d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6221d9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf6221db70"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf6221dd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6221c020"/>
        <function-ref name="get" scoped="" ref="0x7fbf6221c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6221c340"/>
        <function-ref name="set" scoped="" ref="0x7fbf6221c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6221c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fbf62227b10" loc="42:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fbf62227b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf62200020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf622001b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf62200340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf622004d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf62200660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf622007f0"/>
        <function-ref name="set" scoped="" ref="0x7fbf62200980"/>
        <function-ref name="clr" scoped="" ref="0x7fbf62200b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fbf62200e70" loc="43:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fbf62200e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf621ff220"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf621ff3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf621ff540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf621ff6d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf621ff860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf621ff9f0"/>
        <function-ref name="set" scoped="" ref="0x7fbf621ffb80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf621ffd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fbf621fd2e0" loc="45:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf621fd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf621fd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fbf621fe0f0" loc="44:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fbf621fe0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf621fe470"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf621fe600"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf621fe790"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf621fe920"/>
        <function-ref name="get" scoped="" ref="0x7fbf621feab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf621fec40"/>
        <function-ref name="set" scoped="" ref="0x7fbf621fedd0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf621fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf621e92f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf621e92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf621e9670"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf621e9800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf621e9990"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf621e9b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf621e9cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf621e9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf621e8020"/>
        <function-ref name="get" scoped="" ref="0x7fbf621e81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf621e8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf621e84d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf621e8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf621e87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf621e8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf621e8c10"/>
        <function-ref name="clr" scoped="" ref="0x7fbf621e8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf621fa020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf621fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf621fa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf621fa530"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf621fa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf621fa850"/>
        <function-ref name="get" scoped="" ref="0x7fbf621fa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf621fab70"/>
        <function-ref name="set" scoped="" ref="0x7fbf621fad00"/>
        <function-ref name="clr" scoped="" ref="0x7fbf621e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf621e5de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf621e5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf621e4180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf621e4310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf621e44a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf621e4630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf621e47c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf621e4950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf621e4ae0"/>
        <function-ref name="get" scoped="" ref="0x7fbf621e4c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf621e4e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf621e3020"/>
        <function-ref name="set" scoped="" ref="0x7fbf621e31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf621e3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf621e34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf621e3760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf621e38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf621e6b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf621e6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf621e5020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf621e51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf621e5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf621e54d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf621e5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf621e57f0"/>
        <function-ref name="set" scoped="" ref="0x7fbf621e5980"/>
        <function-ref name="clr" scoped="" ref="0x7fbf621e5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf621e0930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf621e0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf621e0cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf621e0e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf621de020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf621de1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf621de340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf621de4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf621de660"/>
        <function-ref name="get" scoped="" ref="0x7fbf621de7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf621de980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf621deb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf621deca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf621dee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf621dd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf621dd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf621dd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf621e1710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf621e1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf621e1a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf621e1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf621e1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf621e0020"/>
        <function-ref name="get" scoped="" ref="0x7fbf621e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf621e0340"/>
        <function-ref name="set" scoped="" ref="0x7fbf621e04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf621e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf60a37a90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf60a37a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf60a37e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf60a36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fbf60a31be0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fbf60a31be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf60a2f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf60a28020" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf60a28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf60a283a0"/>
        <function-ref name="configure" scoped="" ref="0x7fbf60a28530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fbf60a2f2b0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbf60a2f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fbf60a2f630"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fbf60a2f7c0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fbf60a2f950"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fbf60a2fae0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fbf60a2fc70"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fbf60a2fe00"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fbf60a2e020"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fbf60a2e1b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf60a2e340"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fbf60a2e4d0"/>
        <function-ref name="getData" scoped="" ref="0x7fbf60a2e660"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fbf60a2e7f0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fbf60a2e980"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fbf60a2ec10"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fbf60a2eda0"/>
        <function-ref name="getIV" scoped="" ref="0x7fbf60a2d020"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fbf60a2d1b0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fbf60a2d340"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fbf60a2d4d0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fbf60a2d660"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fbf60a2d7f0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fbf60a2d980"/>
        <function-ref name="isI2C" scoped="" ref="0x7fbf60a2db10"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fbf60a2dca0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fbf60a2de30"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fbf60a2c220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fbf60a2c3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fbf60a2c540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fbf60a2c6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fbf60a2c860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fbf60a2c9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fbf60a2cb80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fbf60a2cd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fbf60a2b020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fbf60a2b1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fbf60a2b340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fbf60a2b4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fbf60a2b660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fbf60a2b7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fbf60a2b980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fbf60a2bb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fbf60a2bca0"/>
        <function-ref name="setData" scoped="" ref="0x7fbf60a2be30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fbf60a2a020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fbf60a2a1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fbf60a2a340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fbf60a2a4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fbf60a2a660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fbf60a2a7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fbf60a2ad80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fbf60a29020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fbf60a291b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fbf60a29340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fbf60a294d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fbf60a29660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fbf60a297f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fbf60a29980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fbf60a29b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fbf60a29ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fbf60a31440" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf60a31440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf60a317c0"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf60a31950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf60a38e00" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf60a38e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf60a371c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf60a37350"/>
        <function-ref name="request" scoped="" ref="0x7fbf60a374e0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf60a37670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf60a37800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fbf60a36a50" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf60a36a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbf60a36dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbf60a35020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbf60a351b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbf60a35340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbf60a354d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbf60a35660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbf60a357f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbf60a35980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbf60a35b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbf60a35ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbf60a35e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbf60a34020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbf60a341b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbf60a34440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbf60a345d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbf60a34760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbf60a348f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fbf60a34a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbf60a34c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbf60a34da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbf60a33020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbf60a331b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbf60a33340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbf60a334d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf60a33660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbf60a339f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbf60a33b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbf60a33d10"/>
        <function-ref name="tx" scoped="" ref="0x7fbf60a32020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbf60a321b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbf60a32340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbf60a324d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbf60a32660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbf60a327f0"/>
        <function-ref name="rx" scoped="" ref="0x7fbf60a32980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbf60a32b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbf60a32ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbf60a32e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbf60a31020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbf60a311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf60a362b0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf60a362b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf60a36630"/>
        <function-ref name="userId" scoped="" ref="0x7fbf60a367c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf621b02c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf621b02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf621b0640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf621b07d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf621af8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf621af8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf621afc20"/>
        <function-ref name="configure" scoped="" ref="0x7fbf621afdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fbf621b44d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fbf621b44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf621b4850"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf621b49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf621b2020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf621b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf621b23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf621b2530"/>
        <function-ref name="request" scoped="" ref="0x7fbf621b26c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf621b2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf621b29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fbf621b33f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbf621b33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf621b3770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf621b0ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf621b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf621b0e50"/>
        <function-ref name="userId" scoped="" ref="0x7fbf621af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fbf6219abf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6219abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf62199020"/>
        <function-ref name="userId" scoped="" ref="0x7fbf621991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fbf621add60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fbf621add60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf6219b180"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf6219b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fbf6219a5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fbf6219a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6219a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fbf6219b710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbf6219b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6219bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fbf6219bd80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fbf6219bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf6219a180"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf6219a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf6211f020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf6211f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf6211f3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf6211f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf6211ecd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6211ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf6211d0a0"/>
        <function-ref name="configure" scoped="" ref="0x7fbf6211d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fbf6211f7a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf6211f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6211fb20"/>
        <function-ref name="requested" scoped="" ref="0x7fbf6211fcb0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6211fe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6211e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf6211e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf62120210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf62120210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf621205b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf62120740"/>
        <function-ref name="request" scoped="" ref="0x7fbf621208d0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf62120a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf62120bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf6211e400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6211e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf6211e780"/>
        <function-ref name="userId" scoped="" ref="0x7fbf6211e910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60660c00" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60660c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf6065f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fbf6065f2b0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fbf6065f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbf6065f630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbf6065f7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbf6065f950"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf6065fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf6065b3a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf6065b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf6065b740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf6065b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf60659210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf60659210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf606595b0"/>
        <function-ref name="configure" scoped="" ref="0x7fbf60659740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fbf606599d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fbf606599d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbf60659d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbf60658020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbf606581b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf60658340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fbf6065bb20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf6065bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6065a020"/>
        <function-ref name="requested" scoped="" ref="0x7fbf6065a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6065a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6065a4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf6065a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf60658590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf60658590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf60658910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf60658aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf60658c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf60658dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf60657020"/>
        <function-ref name="get" scoped="" ref="0x7fbf606571b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf60657340"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf60657980"/>
        <function-ref name="set" scoped="" ref="0x7fbf60657660"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf606574d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf606577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6065c4d0" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6065c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6065c870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6065ca00"/>
        <function-ref name="request" scoped="" ref="0x7fbf6065cb90"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6065cd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6065b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf6065a8b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6065a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf6065ac30"/>
        <function-ref name="userId" scoped="" ref="0x7fbf6065adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fbf60657c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fbf60657c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf60656020"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf606561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fbf62116d70" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fbf62116d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fbf62113180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fbf62113310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fbf621134a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fbf62113630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fbf621137c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fbf62113950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fbf62113ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fbf62113c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62113e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fbf62112020"/>
        <function-ref name="getData" scoped="" ref="0x7fbf621121b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fbf62112340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fbf621124d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fbf62112760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fbf621128f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fbf62112a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fbf62112c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fbf62112da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fbf62111020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fbf621111b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fbf62111340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fbf621114d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fbf62111660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fbf621117f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fbf62111980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fbf62111d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fbf62110020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fbf621101b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fbf62110340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fbf621104d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fbf62110660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fbf621107f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fbf62110980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fbf62110b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fbf62110ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fbf62110e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fbf6210f020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fbf6210f1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fbf6210f340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fbf6210f4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fbf6210f660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fbf6210f7f0"/>
        <function-ref name="setData" scoped="" ref="0x7fbf6210f980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fbf6210fb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fbf6210fca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fbf6210fe30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fbf6210e020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fbf6210e1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fbf6210e340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fbf6210e8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fbf6210ea60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fbf6210ebf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fbf6210ed80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fbf6210d020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fbf6210d1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fbf6210d340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fbf6210d4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fbf6210d660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fbf6210d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fbf62103700" loc="41:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fbf62103700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbf62103a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbf62103c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbf62103da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbf62102020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbf621021b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbf62102340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbf621024d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbf62102660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbf621027f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbf62102980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbf62102b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbf62102ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbf62102e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbf62101120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbf621012b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbf62101440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbf621015d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fbf62101760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbf621018f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbf62101a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbf62101c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbf62101da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbf62100020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbf621001b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf62100340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbf621006d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbf62100860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbf621009f0"/>
        <function-ref name="tx" scoped="" ref="0x7fbf62100b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbf62100d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbf620ff020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbf620ff1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbf620ff340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbf620ff4d0"/>
        <function-ref name="rx" scoped="" ref="0x7fbf620ff660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbf620ff7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbf620ff980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbf620ffb10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbf620ffca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbf620ffe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fbf620fc1f0" loc="43:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fbf620fc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf620fc570"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf620fc700"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf620fc890"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf620fca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf620fcbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf620fcd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf620fb020"/>
        <function-ref name="get" scoped="" ref="0x7fbf620fb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf620fb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf620fb4d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf620fb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf620fb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf620fb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf620fbc10"/>
        <function-ref name="clr" scoped="" ref="0x7fbf620fbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fbf6210c940" loc="39:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fbf6210c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fbf6210ccc0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fbf6210ce50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fbf62109020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fbf621091b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fbf62109340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fbf621094d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fbf62109660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fbf621097f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf62109980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fbf62109b10"/>
        <function-ref name="getData" scoped="" ref="0x7fbf62109ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fbf62109e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fbf62108020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fbf621082b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fbf62108440"/>
        <function-ref name="getIV" scoped="" ref="0x7fbf621085d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fbf62108760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fbf621088f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fbf62108a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fbf62108c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fbf62108da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fbf62107020"/>
        <function-ref name="isI2C" scoped="" ref="0x7fbf621071b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fbf62107340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fbf621074d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fbf62107860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fbf621079f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fbf62107b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fbf62107d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fbf62106020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fbf621061b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fbf62106340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fbf621064d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fbf62106660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fbf621067f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fbf62106980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fbf62106b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fbf62106ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fbf62106e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fbf62105020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fbf621051b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fbf62105340"/>
        <function-ref name="setData" scoped="" ref="0x7fbf621054d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fbf62105660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fbf621057f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fbf62105980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fbf62105b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fbf62105ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fbf62105e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fbf62104420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fbf621045b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fbf62104740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fbf621048d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fbf62104a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fbf62104bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fbf62104d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fbf62103020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fbf621031b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fbf62103340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fbf620fe250" loc="42:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fbf620fe250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf620fe5d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf620fe760"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf620fe8f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf620fea80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf620fec10"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf620feda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf620fd020"/>
        <function-ref name="get" scoped="" ref="0x7fbf620fd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf620fd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf620fd4d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf620fd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf620fd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf620fd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf620fdc10"/>
        <function-ref name="clr" scoped="" ref="0x7fbf620fdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7fbf6204a920" loc="37:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7fbf6204a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbf6204aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fbf62049020" loc="38:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf62049020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf620493a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf62049530"/>
        <function-ref name="request" scoped="" ref="0x7fbf620496c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf62049850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf620499e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbf6204a0c0" loc="36:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbf6204a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf6204a440"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6204a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7fbf62037a30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7fbf62037a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7fbf62037db0"/>
        <function-ref name="offset" scoped="" ref="0x7fbf62034020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7fbf620341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7fbf62019bf0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fbf62019bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fbf61ff4ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7fbf61ff3880"/>
        <function-ref name="element" scoped="" ref="0x7fbf61ff2020"/>
        <function-ref name="full" scoped="" ref="0x7fbf61ff5ce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fbf61ff4660"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf61ff31d0"/>
        <function-ref name="empty" scoped="" ref="0x7fbf61ff5860"/>
        <function-ref name="size" scoped="" ref="0x7fbf61ff41e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fbf61feaa20" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fbf61feaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7fbf61feb920"/>
        <function-ref name="enqueue" scoped="" ref="0x7fbf61fe86d0"/>
        <function-ref name="element" scoped="" ref="0x7fbf61fe8d40"/>
        <function-ref name="full" scoped="" ref="0x7fbf61fecaf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7fbf61feb4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf61fe8020"/>
        <function-ref name="empty" scoped="" ref="0x7fbf61fec670"/>
        <function-ref name="size" scoped="" ref="0x7fbf61feb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fbf61fe7440" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf61fe7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf61fe77c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf61fe7950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf61fe7ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61fe7c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf61fe7e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fbf61fe60c0" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf61fe60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61fe6440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf61fe65d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf61fe6760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf61fe68f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf61fe6a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7fbf61fe0500" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7fbf61fe0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61fe0880"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61fe0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61ff0a60" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61ff0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf61ff0de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf61fe6d00" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf61fe6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf61fe50a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf61fe5230"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf61fe53c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf61fe5550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf61fe56e0"/>
        <function-ref name="get" scoped="" ref="0x7fbf61fe5870"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf61fe5a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf61fe41b0"/>
        <function-ref name="set" scoped="" ref="0x7fbf61fe5b90"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf61fe5d20"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf61fe4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7fbf61fea1a0" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fbf61fea1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fbf61fea520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fbf61fcabe0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fbf61fcabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fbf61fc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61fc4020" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61fc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf61fc43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7fbf61fc4680" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7fbf61fc4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7fbf61fc4a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fbf61fbd380" loc="39:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fbf61fbd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fbf61fbd700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7fbf61fbdaa0" loc="40:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7fbf61fbdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf61fbde20"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf61fba020"/>
        <function-ref name="start" scoped="" ref="0x7fbf61fba1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61fba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TEA" ref="0x7fbf61fafbc0" loc="2:../../../tos/platforms/shimmer2r/TEAC.nc">
      <component-ref qname="TEAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TEA" scoped="" ref="0x7fbf61fafbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7fbf61fb4020"/>
        <function-ref name="lsb" scoped="" ref="0x7fbf61fb41b0"/>
        <function-ref name="msb" scoped="" ref="0x7fbf61fb4340"/>
        <function-ref name="encrypt" scoped="" ref="0x7fbf61fb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TEA" ref="0x7fbf61fad2b0" loc="2:../../../tos/platforms/shimmer2r/TEAP.nc">
      <component-ref qname="TEAP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TEA" scoped="" ref="0x7fbf61fad2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7fbf61fad630"/>
        <function-ref name="lsb" scoped="" ref="0x7fbf61fad7c0"/>
        <function-ref name="msb" scoped="" ref="0x7fbf61fad950"/>
        <function-ref name="encrypt" scoped="" ref="0x7fbf61fadae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fbf61fb5e00" loc="51:../../../tos/platforms/shimmer/DemoSensorC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fbf61fb5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61faea80"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf619d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fbf60613020" loc="44:../../../tos/platforms/shimmer/VoltageC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fbf60613020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf60613c10"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf606120d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fbf60610020" loc="44:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fbf60610020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf60610c10"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf6060f0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fbf6060a140" loc="48:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fbf6060a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6060ad70"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf60609260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fbf6060f7b0" loc="45:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fbf6060f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fbf6060c2a0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fbf6060e400"/>
        <function-ref name="read" scoped="" ref="0x7fbf6060ed70"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf6060cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6060b340" loc="47:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6060b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6060b6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6060b850"/>
        <function-ref name="request" scoped="" ref="0x7fbf6060b9e0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6060bb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6060bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fbf606058d0" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fbf606058d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf60604560"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf606049e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fbf606031c0" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf606031c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf60603df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7fbf61f4c6e0" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7fbf61f4c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61f4ca60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61f4cbf0"/>
        <function-ref name="request" scoped="" ref="0x7fbf61f4cd80"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61f4b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61f4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fbf61f54390" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fbf61f54390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61f53020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf61f534a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fbf61f51210" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fbf61f51210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61f51e40"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf61f50340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7fbf61f4f020" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7fbf61f4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61f4f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61f4f530"/>
        <function-ref name="request" scoped="" ref="0x7fbf61f4f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61f4f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61f4f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fbf61f4bd40" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fbf61f4bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf61f4a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fbf61f48450" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61f48450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf61f487d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fbf61f48960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fbf61f48af0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fbf61f48c80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fbf61f48e10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fbf61f47020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fbf61f471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7fbf61f4e390" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7fbf61f4e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61f4e710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61f4e8a0"/>
        <function-ref name="request" scoped="" ref="0x7fbf61f4ea30"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61f4ebc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61f4ed50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7fbf61f1ce40" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7fbf61f1ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61f1b1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61f1b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fbf605ef400" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fbf605ef400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf605ef780"/>
        <function-ref name="configure" scoped="" ref="0x7fbf605ef910"/>
        <function-ref name="dataReady" scoped="" ref="0x7fbf605efaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fbf605f0400" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf605f0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf605f0780"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fbf605f0910"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fbf605f0aa0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fbf605f0c30"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fbf605f0dc0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fbf605ef020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fbf605ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fbf605efcf0" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fbf605efcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fbf605ee0a0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fbf605ee230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fbf605ee660" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605ee660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf605ed3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf605f1660" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf605f1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf605f19e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf605f1b70"/>
        <function-ref name="request" scoped="" ref="0x7fbf605f1d00"/>
        <function-ref name="granted" scoped="" ref="0x7fbf605f0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf605f01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fbf61ee0960" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fbf61ee0960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf61ee0ce0"/>
        <function-ref name="configure" scoped="" ref="0x7fbf61ee0e70"/>
        <function-ref name="dataReady" scoped="" ref="0x7fbf61ede030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fbf61edb1d0" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fbf61edb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf61edb550"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61edb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fbf61ede920" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fbf61ede920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fbf61edeca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fbf61edee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fbf61ee11d0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61ee11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf61ee1550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fbf61ee16e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fbf61ee1870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fbf61ee1a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fbf61ee1b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fbf61ee1d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fbf61ee0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf61ee7cc0" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61ee7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61ee20a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61ee2230"/>
        <function-ref name="request" scoped="" ref="0x7fbf61ee23c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61ee2550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61ee26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7fbf61ed5af0" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7fbf61ed5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf61ed5e70"/>
        <function-ref name="configure" scoped="" ref="0x7fbf61ed4030"/>
        <function-ref name="dataReady" scoped="" ref="0x7fbf61ed41c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fbf61ec30d0" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fbf61ec30d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fbf61ec3450"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fbf61ec35e0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fbf61ec3770"/>
        <function-ref name="isBusy" scoped="" ref="0x7fbf61ec3900"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fbf61ec3a90"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fbf61ec3c20"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fbf61ec3db0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fbf61ed0020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fbf61ed01b0"/>
        <function-ref name="getMem" scoped="" ref="0x7fbf61ed0340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fbf61ed04d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fbf61ed0660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fbf61ed07f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fbf61ed0a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fbf61ed0c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7fbf61eb6c80" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fbf61eb6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61eb50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61eb5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf61eb53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61eb5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61eb56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf61eb5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61eb5a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf61eb5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf61eb5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf61eb4020"/>
        <function-ref name="set" scoped="" ref="0x7fbf61eb41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf61eb4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf61eb44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf61eb4760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61eb48f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7fbf61ebfe60" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fbf61ebfe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf61ebe210"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf61ebe3a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf61ebe530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf61ebe6c0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61ebe850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7fbf61ec2880" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fbf61ec2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf61ec2c00"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf61ec2d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf61ec1020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf61ec11b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf61ec1340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf61ec14d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf61ec1660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf61ec17f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf61ec1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7fbf61ed3910" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7fbf61ed3910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf61ed3c90"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61ed3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7fbf61ebac80" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fbf61ebac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61eb90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61eb9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf61eb93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61eb9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61eb96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf61eb9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61eb9a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf61eb9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf61eb9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf61eb8020"/>
        <function-ref name="set" scoped="" ref="0x7fbf61eb81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf61eb8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf61eb84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf61eb8760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61eb88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7fbf61ed4ab0" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fbf61ed4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fbf61ed4e30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fbf61ed3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7fbf61eafc80" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fbf61eafc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61eae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61eae230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf61eae3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61eae550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61eae6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf61eae870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61eaea00"/>
        <function-ref name="get" scoped="" ref="0x7fbf61eaeb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf61eaed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf61ead020"/>
        <function-ref name="set" scoped="" ref="0x7fbf61ead1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf61ead340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf61ead4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf61ead760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61ead8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7fbf61ebebe0" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fbf61ebebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61ebd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61ebd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf61ebd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61ebd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61ebd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf61ebd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61ebda00"/>
        <function-ref name="get" scoped="" ref="0x7fbf61ebdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf61ebdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf61ebc020"/>
        <function-ref name="set" scoped="" ref="0x7fbf61ebc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf61ebc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf61ebc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf61ebc760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61ebc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61ed7660" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61ed7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf61ed79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7fbf61eb4c80" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fbf61eb4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61eb20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61eb2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf61eb23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61eb2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61eb26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf61eb2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61eb2a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf61eb2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf61eb2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf61eb1020"/>
        <function-ref name="set" scoped="" ref="0x7fbf61eb11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf61eb1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf61eb14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf61eb1760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61eb18f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7fbf61ecf020" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fbf61ecf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61ecf3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf61ecf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf61ecf6c0"/>
        <function-ref name="get" scoped="" ref="0x7fbf61ecf850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf61ecf9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61ecfb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf61ecfd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61ec2020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61ec21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf61ec2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf61ec24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7fbf61ed1280" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7fbf61ed1280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf61ed1600"/>
        <function-ref name="userId" scoped="" ref="0x7fbf61ed1790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7fbf61ec1d30" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fbf61ec1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf61ec00e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf61ec0270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf61ec0400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf61ec0590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf61ec0720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf61ec08b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf61ec0a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf61ec0bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf61ec0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7fbf61ed6370" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61ed6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf61ed66f0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fbf61ed6880"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fbf61ed6a10"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fbf61ed6ba0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fbf61ed6d30"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fbf61ed5020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fbf61ed51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7fbf61eb8c80" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fbf61eb8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61eb70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61eb7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf61eb73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61eb7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61eb76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf61eb7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61eb7a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf61eb7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf61eb7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf61eb6020"/>
        <function-ref name="set" scoped="" ref="0x7fbf61eb61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf61eb6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf61eb64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf61eb6760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61eb68f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7fbf61ebf120" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fbf61ebf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf61ebf4a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf61ebf630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf61ebf7c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf61ebf950"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61ebfae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7fbf61ebcc80" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fbf61ebcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61ebb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61ebb230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf61ebb3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61ebb550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61ebb6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf61ebb870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61ebba00"/>
        <function-ref name="get" scoped="" ref="0x7fbf61ebbb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf61ebbd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf61eba020"/>
        <function-ref name="set" scoped="" ref="0x7fbf61eba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf61eba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf61eba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf61eba760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61eba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7fbf61eb1c80" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fbf61eb1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61eb00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61eb0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf61eb03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61eb0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61eb06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf61eb0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61eb0a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf61eb0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf61eb0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf61eaf020"/>
        <function-ref name="set" scoped="" ref="0x7fbf61eaf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf61eaf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf61eaf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf61eaf760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61eaf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7fbf61df0020" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fbf61df0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fbf61df03a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fbf61df0530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fbf61df06c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fbf61df0850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fbf61df09e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fbf61df0b70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fbf61df0d00"/>
        <function-ref name="startConversion" scoped="" ref="0x7fbf61def020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fbf61def1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7fbf61def340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fbf61def4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fbf61def660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fbf61def7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fbf61defa80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fbf61defc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf61d603a0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf61d603a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf61d60740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf61d608d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf61d5f570" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf61d5f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf61d5f910"/>
        <function-ref name="configure" scoped="" ref="0x7fbf61d5faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf61d61520" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61d61520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61d618c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61d61a50"/>
        <function-ref name="request" scoped="" ref="0x7fbf61d61be0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61d61d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61d60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf61d60b20" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf61d60b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf61d5f020"/>
        <function-ref name="userId" scoped="" ref="0x7fbf61d5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf605c9060" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf605c9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf605c93e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fbf605c9670" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fbf605c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbf605c99f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbf605c9b80"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbf605c9d10"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf605c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf605c6530" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf605c6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf605c68d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf605c6a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf605c4610" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf605c4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf605c49b0"/>
        <function-ref name="configure" scoped="" ref="0x7fbf605c4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fbf605c4dd0" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fbf605c4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbf605c3180"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbf605c3310"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbf605c34a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf605c3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf605c76c0" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf605c76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf605c7a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf605c7bf0"/>
        <function-ref name="request" scoped="" ref="0x7fbf605c7d80"/>
        <function-ref name="granted" scoped="" ref="0x7fbf605c6020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf605c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf605c6cb0" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf605c6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf605c40a0"/>
        <function-ref name="userId" scoped="" ref="0x7fbf605c4230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fbf605c3900" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fbf605c3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf605c3c80"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf605c3e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fbf61d3d740" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fbf61d3d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf61d3c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fbf61d3f1d0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fbf61d3f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61d3f550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61d3f6e0"/>
        <function-ref name="request" scoped="" ref="0x7fbf61d3f870"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61d3fa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61d3fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fbf61d48d20" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fbf61d48d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61d400e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61d40270"/>
        <function-ref name="request" scoped="" ref="0x7fbf61d40400"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61d40590"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61d40720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fbf61d389a0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fbf61d389a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fbf61d38d20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fbf61d37020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fbf61d371b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7fbf61d37340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fbf61d374d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fbf61d37660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fbf61d377f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fbf61d37980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fbf61d37b10"/>
        <function-ref name="getMem" scoped="" ref="0x7fbf61d37ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fbf61d37e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fbf61d36020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fbf61d361b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fbf61d36440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fbf61d365d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7fbf61d27840" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7fbf61d27840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61d23cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61d25300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61d230d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61d25c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61d22660"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61d221e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61d25780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61d26480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61d236e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61d26950"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61d26e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7fbf61d39e00" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fbf61d39e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf61d381c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf61d38350"/>
        <function-ref name="start" scoped="" ref="0x7fbf61d384e0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61d38670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7fbf61d22d00" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7fbf61d22d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61d1d220"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61d207c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61d1e590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61d1e110"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61d1db20"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61d1d6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61d20c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61d21940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61d1eba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61d21e10"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61d20340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7fbf61d39240" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fbf61d39240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf61d395c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf61d39750"/>
        <function-ref name="start" scoped="" ref="0x7fbf61d398e0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61d39a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7fbf61d352b0" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7fbf61d352b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61d28870"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61d34e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61d2ac00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61d2a780"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61d271e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61d28cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61d2a300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61d34020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61d28260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61d344f0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61d349c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fbf61ccd920" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7fbf61ccd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf61ccc5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7fbf61cce540" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7fbf61cce540"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf61cce8c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf61ccea50"/>
        <function-ref name="start" scoped="" ref="0x7fbf61ccebe0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61cced70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7fbf61cd1ad0" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7fbf61cd1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61cd1e50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61cd0020"/>
        <function-ref name="request" scoped="" ref="0x7fbf61cd01b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61cd0340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61cd04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7fbf61cd26f0" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7fbf61cd26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61cd2a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61cd2c00"/>
        <function-ref name="request" scoped="" ref="0x7fbf61cd2d90"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61cd1020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61cd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7fbf61cca2a0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7fbf61cca2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61cca620"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61cca7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7fbf61cd0860" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7fbf61cd0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf61cd0be0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf61cd0d70"/>
        <function-ref name="start" scoped="" ref="0x7fbf61cce020"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61cce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf61b0a370" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf61b0a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61b06870"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61b09e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61b07c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61b07780"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61b051e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61b06cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61b07300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61b09020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61b06260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61b094f0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61b099c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fbf61c90020" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61c8c630"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61c8fa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61c8d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61c8d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61c8b020"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61c8cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61c8d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61c90c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61c8c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61c8f110"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61c8f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fbf61c87c30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fbf61c87c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61c82110"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61c856a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61c844a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61c84020"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61c82a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61c82590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61c85b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61c86860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61c84ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61c86d30"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61c85220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fbf61c7d500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fbf61c7d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61c80170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61c8be50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61c8be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf61c87210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf61ba6870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf61ba6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61ba2090"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61ba3090"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf61ba3a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61ba3550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf61ba2550"/>
        <function-ref name="start" scoped="" ref="0x7fbf61ba56a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61ba5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61ba6020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61ba6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf61ba63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf6058f140" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf6058f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf6058db30"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6058e9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf6058d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf6058d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf6058b020"/>
        <function-ref name="start" scoped="" ref="0x7fbf6058e020"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6058e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60590860" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60590860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60590be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fbf60577a80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf60577a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf60577e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf60576020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf605761b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf60576340"/>
        <function-ref name="fired" scoped="" ref="0x7fbf605764d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fbf60579020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf60579020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf605793a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf60579530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf605796c0"/>
        <function-ref name="get" scoped="" ref="0x7fbf60579850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf605799e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf60579b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf60579d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf60578020"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf605781b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf60578340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf605784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fbf60578760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf60578760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf60578ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf60578c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf60578e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf60577020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf605771b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf60577340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf605774d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf60577660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf605777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fbf61c5b3f0" loc="52:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf61c5b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf61c5b770"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf61c5b900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf61c5ba90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf61c5bc20"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61c5bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fbf61c62cd0" loc="50:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf61c62cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61c5f0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf61c5f230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf61c5f3c0"/>
        <function-ref name="get" scoped="" ref="0x7fbf61c5f550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf61c5f6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61c5f870"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf61c5fa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61c5fb90"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61c5fd20"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf61c5e020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf61c5e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fbf61c5ea40" loc="51:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf61c5ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf61c5edc0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf61c5c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf61c5c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf61c5c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf61c5c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf61c5c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf61c5c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf61c5c980"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf61c5cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fbf6056d760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf6056d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6056dae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf6056dc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf6056de00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf6056c020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6056c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fbf60570dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf60570dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6056f180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf6056f310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6056f4a0"/>
        <function-ref name="get" scoped="" ref="0x7fbf6056f630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6056f7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6056f950"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf6056fae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf6056fc70"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf6056fe00"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf6056e020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf6056e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf60574bf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf60574bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf605704e0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf605714e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf60571e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf605719a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf605709a0"/>
        <function-ref name="start" scoped="" ref="0x7fbf60572a80"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60571020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60574360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60574360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf605746e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fbf6056e440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf6056e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf6056e7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf6056e950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6056eae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf6056ec70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf6056ee00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6056d020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf6056d1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf6056d340"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf6056d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbf61c0ab70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf61c0ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61c079b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61c05360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61c07e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61c05820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fbf61be40f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fbf61be40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61be3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61be39a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61be34e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61be3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbf61c02cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf61c02cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61be7b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61be5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61be5090"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61be5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf605895f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf605895f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf60587e50"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60588e00"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf60587800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf60587340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf60586340"/>
        <function-ref name="start" scoped="" ref="0x7fbf60588430"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60588940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fbf60583d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fbf60583d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf60580670"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60581550"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf60580020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf60581a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf60580b30"/>
        <function-ref name="start" scoped="" ref="0x7fbf60582b60"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60581090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbf605869b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf605869b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf605857e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf605831b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf60585ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf60583670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fbf61b719c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fbf61b719c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61b71d40"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61b6f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fbf61b74850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf61b74850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61b71090"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61b72090"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf61b72a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61b72550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf61b71550"/>
        <function-ref name="start" scoped="" ref="0x7fbf61b736a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61b73bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf61b792f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf61b792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61b76870"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61b78e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61b77c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61b77780"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61b741e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61b76cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61b77300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61b78020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61b76260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61b784f0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61b789c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fbf61b1fa00" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fbf61b1fa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61b1fd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61b1e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fbf61b24640" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fbf61b24640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61b20c40"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61b221e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61b20020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61b22ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61b1f590"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61b1f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61b22660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61b23390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61b20630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61b23860"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61b23d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf61b2a150" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf61b2a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61b26700"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61b29c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61b27a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61b275b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61b24090"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61b26ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61b27110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61b2ad60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61b260d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61b292a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61b29790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fbf61b1c790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fbf61b1c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61b1b3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbf61b1ba60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf61b1ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61b11890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61b0f260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61b11d50"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61b0f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf61b04d10" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf61b04d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61aff220"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61b017c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61b00590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61b00110"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61affb20"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61aff6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61b01c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61b02940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61b00ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61b02e10"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61b01340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf61afc750" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf61afc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61af9c40"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61afa1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf61af9020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf61afaae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf61af8590"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf61af8110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61afa660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61afb390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf61af9630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf61afb860"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61afbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fbf605df020" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fbf605df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf605dfc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fbf605de2a0" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fbf605de2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf605dc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fbf605fd260" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605fd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf605fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fbf606014f0" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fbf606014f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fbf605fe020"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fbf605ff110"/>
        <function-ref name="read" scoped="" ref="0x7fbf605ffa80"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf605fead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7fbf61ac0720" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf61ac0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf61ac0aa0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fbf61ac0c30"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fbf61ac0dc0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fbf61abf020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fbf61abf1b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fbf61abf340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fbf61abf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fbf61ac2020" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf61ac2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf61ac2c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fbf61ac79f0" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fbf61ac79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fbf61ac44f0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fbf61ac6670"/>
        <function-ref name="read" scoped="" ref="0x7fbf61ac4020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf61ac3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fbf61abfce0" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61abfce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61abe0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61abe230"/>
        <function-ref name="request" scoped="" ref="0x7fbf61abe3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61abe550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61abe6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7fbf61a88020" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7fbf61a88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61a883a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61a88530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7fbf61a96600" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7fbf61a96600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61a96980"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61a96b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7fbf61a91d50" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7fbf61a91d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61a8f100"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61a8f290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fbf61ab2900" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf61ab2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61aae1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61aaf1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf61aafb30"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61aaf670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf61aae670"/>
        <function-ref name="start" scoped="" ref="0x7fbf61ab1780"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61ab1c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61abbbc0" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61abbbc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fbf6317a800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fbf6317a800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf61ab9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fbf61ab3580" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf61ab3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf61ab21f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7fbf61ab6d50" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7fbf61ab6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf61ab4100"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fbf61ab4290"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fbf61ab4420"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fbf61ab45b0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fbf61ab4740"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fbf61ab48d0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fbf61ab4a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fbf61ab99c0" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fbf61ab99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fbf61ab74f0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fbf61ab85f0"/>
        <function-ref name="read" scoped="" ref="0x7fbf61ab7020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf61ab6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf61a4c4f0" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf61a4c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf61a49db0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61a4ada0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf61a49760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf61a492a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf61a482a0"/>
        <function-ref name="start" scoped="" ref="0x7fbf61a4a3d0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61a4a8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61a4db10" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61a4db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf61a4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf604dd870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf604dd870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf604d9090"/>
        <function-ref name="fired" scoped="" ref="0x7fbf604da090"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf604daa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf604da550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf604d9550"/>
        <function-ref name="start" scoped="" ref="0x7fbf604db6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf604dbbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf604dd020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf604dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf604dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fbf604c4da0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf604c4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf604c3180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf604c3310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf604c34a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf604c3630"/>
        <function-ref name="fired" scoped="" ref="0x7fbf604c37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fbf604c6450" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf604c6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf604c67d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf604c6960"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf604c6af0"/>
        <function-ref name="get" scoped="" ref="0x7fbf604c6c80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf604c6e10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf604c5020"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf604c51b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf604c5340"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf604c54d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf604c5660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf604c57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fbf604c5a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf604c5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf604c5e00"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf604c4020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf604c41b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf604c4340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf604c44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf604c4660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf604c47f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf604c4980"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf604c4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fbf604baa80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf604baa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf604bae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf604b9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf604b91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf604b9340"/>
        <function-ref name="fired" scoped="" ref="0x7fbf604b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fbf604bc190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf604bc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf604bc510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf604bc6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf604bc830"/>
        <function-ref name="get" scoped="" ref="0x7fbf604bc9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf604bcb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf604bcce0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf604bce70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf604bb030"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf604bb1c0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf604bb350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf604bb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf604c0020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf604c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf604be870"/>
        <function-ref name="fired" scoped="" ref="0x7fbf604bf840"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf604be220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf604bfd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf604bed30"/>
        <function-ref name="start" scoped="" ref="0x7fbf604c0e30"/>
        <function-ref name="stop" scoped="" ref="0x7fbf604bf380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf604c1660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf604c1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf604c19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fbf604bb770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf604bb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf604bbaf0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf604bbc80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf604bbe10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf604ba020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf604ba1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf604ba340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf604ba4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf604ba660"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf604ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf604d7a90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf604d7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf604d32e0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf604d52e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf604d5c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf604d57a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf604d37a0"/>
        <function-ref name="start" scoped="" ref="0x7fbf604d68d0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf604d6de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fbf604d0210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fbf604d0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf604cdb30"/>
        <function-ref name="fired" scoped="" ref="0x7fbf604cfa60"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf604cd4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf604cd020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf604cc020"/>
        <function-ref name="start" scoped="" ref="0x7fbf604cf090"/>
        <function-ref name="stop" scoped="" ref="0x7fbf604cf5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbf604d3e10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf604d3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf604d2ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf604d1670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf604d11b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf604d1b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fbf61a18bf0" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7fbf61a18bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fbf61a16710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fbf61a17860"/>
        <function-ref name="read" scoped="" ref="0x7fbf61a16220"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf61a14220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7fbf61a45cb0" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7fbf61a45cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7fbf61a1a850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7fbf61a1b940"/>
        <function-ref name="read" scoped="" ref="0x7fbf61a1a360"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf61a18360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fbf61a148f0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61a148f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61a14c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61a14e20"/>
        <function-ref name="request" scoped="" ref="0x7fbf61a13020"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61a131b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61a13340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fbf604ebbd0" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fbf604ebbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf604ea020"/>
        <function-ref name="configure" scoped="" ref="0x7fbf604ea1b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fbf604ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fbf604edc30" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf604edc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf604eb020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fbf604eb1b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fbf604eb340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fbf604eb4d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fbf604eb660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fbf604eb7f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fbf604eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fbf604ea590" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fbf604ea590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fbf604ea910"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fbf604eaaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fbf604e9020" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf604e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf604e9c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf604ed020" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf604ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf604ed3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf604ed530"/>
        <function-ref name="request" scoped="" ref="0x7fbf604ed6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf604ed850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf604ed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fbf60479a60" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fbf60479a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf604786b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fbf60478cc0" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fbf60478cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf60476980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7fbf619fea10" loc="35:../../../tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <component-ref qname="Msp430InternalVoltageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf619fea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf619fb6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fbf605f99d0" loc="50:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7fbf605f99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf605f8630"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf605f8af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fbf605f7280" loc="52:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf605f7280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf605f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf605fac60" loc="49:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf605fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf605f9020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf605f91b0"/>
        <function-ref name="request" scoped="" ref="0x7fbf605f9340"/>
        <function-ref name="granted" scoped="" ref="0x7fbf605f94d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf605f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7fbf6046bd30" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7fbf6046bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf6046a0e0"/>
        <function-ref name="configure" scoped="" ref="0x7fbf6046a270"/>
        <function-ref name="dataReady" scoped="" ref="0x7fbf6046a400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7fbf6046cde0" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7fbf6046cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fbf6046b180"/>
        <function-ref name="configureSingle" scoped="" ref="0x7fbf6046b310"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7fbf6046b4a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7fbf6046b630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7fbf6046b7c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7fbf6046b950"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7fbf6046bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7fbf6046a650" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7fbf6046a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7fbf6046a9d0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7fbf6046ab60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7fbf60469020" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7fbf60469020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf60469c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6046c1d0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6046c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6046c550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6046c6e0"/>
        <function-ref name="request" scoped="" ref="0x7fbf6046c870"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6046ca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6046cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7fbf6045b670" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7fbf6045b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf6045a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7fbf6045a9e0" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="Tea16BitsAmAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7fbf6045a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7fbf604586b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbf619d0400" loc="58:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf619d0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf619d0780"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf619d0910"/>
        <function-ref name="start" scoped="" ref="0x7fbf619d0aa0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf619d0c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbf619cf430" loc="60:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf619cf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf619cf7b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf619cf940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf619cfad0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf619cfc60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf619cfdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fbf619cd210" loc="62:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fbf619cd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf619cd590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbf619cd820" loc="64:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf619cd820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf619cdba0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf619cdd30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf619cc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf619cc1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf619cc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fbf619c1d70" loc="67:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbf619c1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbf619bf330"/>
        <function-ref name="clear" scoped="" ref="0x7fbf619bfa60"/>
        <function-ref name="isValid" scoped="" ref="0x7fbf619c8ba0"/>
        <function-ref name="set" scoped="" ref="0x7fbf619be210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbf619b3b20" loc="69:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf619b3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbf619b9020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbf619b91b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbf619b9340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbf619b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf619ce600" loc="61:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf619ce600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf619ce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fbf619cbcb0" loc="66:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf619cbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbf619c90a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fbf619c9230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbf619c93c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbf619cc5f0" loc="65:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbf619cc5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbf619cc970"/>
        <function-ref name="source" scoped="" ref="0x7fbf619ccb00"/>
        <function-ref name="address" scoped="" ref="0x7fbf619ccc90"/>
        <function-ref name="destination" scoped="" ref="0x7fbf619cce20"/>
        <function-ref name="setSource" scoped="" ref="0x7fbf619cb020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbf619cb1b0"/>
        <function-ref name="type" scoped="" ref="0x7fbf619cb340"/>
        <function-ref name="setType" scoped="" ref="0x7fbf619cb4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbf619cb660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbf619cb7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbf619cb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fbf619bee60" loc="68:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbf619bee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbf619bb3f0"/>
        <function-ref name="clear" scoped="" ref="0x7fbf619bbb20"/>
        <function-ref name="isValid" scoped="" ref="0x7fbf619bdca0"/>
        <function-ref name="set" scoped="" ref="0x7fbf619ba2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbf619a7880" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf619a7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf619a7c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf619a7d90"/>
        <function-ref name="start" scoped="" ref="0x7fbf619a6020"/>
        <function-ref name="stop" scoped="" ref="0x7fbf619a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbf6198dd40" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf6198dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbf619950e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbf61995270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbf61995400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbf61995590"/>
        <function-ref name="setCca" scoped="" ref="0x7fbf61995720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbf619958b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fbf61980d20" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fbf61980d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fbf6198a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbf619a1760" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf619a1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf619a1ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf619a1c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf619a1e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf619a0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf619a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbf619a6980" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf619a6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf619a6d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf619a5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf619a51b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf619a5340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf619a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fbf619a3900" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fbf619a3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf619a3c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fbf61998970" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf61998970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbf61998cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbf61998e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbf6199f030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbf6199f1c0"/>
        <function-ref name="getPower" scoped="" ref="0x7fbf6199f350"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbf6199f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbf61995bb0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf61995bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbf61993020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbf619931b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbf61993340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbf619934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf619a5cb0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf619a5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf619a30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fbf6199f810" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf6199f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbf6199fb90"/>
        <function-ref name="noAck" scoped="" ref="0x7fbf6199fd20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbf6199e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fbf6198b020" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fbf6198b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fbf6198b3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fbf6198b530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fbf6198b6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fbf6198b850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fbf6198b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbf619a2020" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbf619a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbf619a23a0"/>
        <function-ref name="source" scoped="" ref="0x7fbf619a2530"/>
        <function-ref name="address" scoped="" ref="0x7fbf619a26c0"/>
        <function-ref name="destination" scoped="" ref="0x7fbf619a2850"/>
        <function-ref name="setSource" scoped="" ref="0x7fbf619a29e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbf619a2b70"/>
        <function-ref name="type" scoped="" ref="0x7fbf619a2d00"/>
        <function-ref name="setType" scoped="" ref="0x7fbf619a1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbf619a11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbf619a1340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbf619a14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fbf61994a80" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf61994a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fbf61994e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbf6197fb70" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf6197fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf6197c020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf6197c1b0"/>
        <function-ref name="start" scoped="" ref="0x7fbf6197c340"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6197c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fbf619769d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf619769d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fbf61976d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fbf61975b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fbf61975b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fbf61974020"/>
        <function-ref name="setRetries" scoped="" ref="0x7fbf619741b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fbf61974340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fbf619744d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fbf61974660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fbf61977140" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf61977140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbf619774c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbf61977650"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbf619777e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbf61977970"/>
        <function-ref name="getPower" scoped="" ref="0x7fbf61977b00"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbf61977c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fbf61979d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fbf61979d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf619780e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf61978270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf61978400"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61978590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf61978720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbf61975080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf61975080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbf61975400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbf61975590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbf61975720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbf619758b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fbf6197a820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fbf6197a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf6197aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fbf61976020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf61976020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbf619763a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fbf61976530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbf619766c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6197cd00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6197cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6197b0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6197b230"/>
        <function-ref name="request" scoped="" ref="0x7fbf6197b3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6197b550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6197b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fbf6197ba00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fbf6197ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf6197bd80"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6197a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf6197a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf6197a340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf6197a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fbf61979020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fbf61979020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf619793a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf61979530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf619796c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf61979850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf619799e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fbf61978a90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fbf61978a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61978e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbf61971460" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf61971460"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf619717e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf61971970"/>
        <function-ref name="start" scoped="" ref="0x7fbf61971b00"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61971c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbf6196f3b0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf6196f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbf6196f730"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbf6196f8c0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbf6196fa50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbf6196fbe0"/>
        <function-ref name="setCca" scoped="" ref="0x7fbf6196fd70"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbf6196d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf61970020" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf61970020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf619703a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf61970530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf619706c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61970850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf619709e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf61970cc0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf61970cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf6196f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7fbf6196ac60" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7fbf6196ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7fbf6196c020"/>
        <function-ref name="enableCca" scoped="" ref="0x7fbf6196c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbf619682d0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf619682d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf61968650"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf619687e0"/>
        <function-ref name="start" scoped="" ref="0x7fbf61968970"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61968b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbf61967ad0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf61967ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbf61967e50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbf61966020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbf619661b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbf61966340"/>
        <function-ref name="setCca" scoped="" ref="0x7fbf619664d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbf61966660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fbf6195c700" loc="55:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fbf6195c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbf6195ca80"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbf6195cc10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbf6195cda0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbf6195b020"/>
        <function-ref name="setCca" scoped="" ref="0x7fbf6195b1b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbf6195b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbf61952b00" loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf61952b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbf61952e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbf61950030"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbf619501c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbf61950350"/>
        <function-ref name="getPower" scoped="" ref="0x7fbf619504e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbf61950670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fbf61954810" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbf61954810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf61954b90"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61954d20"/>
        <function-ref name="modify" scoped="" ref="0x7fbf6195c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf6195c1b0"/>
        <function-ref name="resend" scoped="" ref="0x7fbf6195c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf61968dc0" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf61968dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf61967180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf61967310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf619674a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61967630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf619677c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fbf61951b60" loc="56:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fbf61951b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fbf61953020"/>
        <function-ref name="rand32" scoped="" ref="0x7fbf619531b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fbf61963ba0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fbf61963ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf61962020"/>
        <function-ref name="stop" scoped="" ref="0x7fbf619621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbf61949130" loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf61949130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbf619495b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbf61949740"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbf619498d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fbf6195d880" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fbf6195d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fbf6195dc00"/>
        <function-ref name="rfOff" scoped="" ref="0x7fbf6195dd90"/>
        <function-ref name="rxOn" scoped="" ref="0x7fbf61963020"/>
        <function-ref name="startVReg" scoped="" ref="0x7fbf619631b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fbf61963340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fbf619634d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fbf61963660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fbf619637f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf61953470" loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf61953470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf619537f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf61953980"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf61953b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf61953ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf61953e30"/>
        <function-ref name="get" scoped="" ref="0x7fbf61952020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf619521b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf619527f0"/>
        <function-ref name="set" scoped="" ref="0x7fbf61952340"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf619524d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf61952660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fbf61965310" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61965310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61965690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61965820"/>
        <function-ref name="request" scoped="" ref="0x7fbf619659b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61965b40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61965cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fbf61944850" loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fbf61944850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf61944bd0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf61944d60"/>
        <function-ref name="isState" scoped="" ref="0x7fbf6194f020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf6194f1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf6194f340"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf6194f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fbf6193f730" loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fbf6193f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf6193fab0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf6193fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7fbf61966980" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7fbf61966980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7fbf61966d00"/>
        <function-ref name="enableCca" scoped="" ref="0x7fbf61965020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fbf619407d0" loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fbf619407d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61940b50"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61940ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fbf61941890" loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fbf61941890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61941c10"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61941da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fbf618e1670" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fbf618e1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fbf618e19f0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fbf618e1b80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fbf618e1d10"/>
        <function-ref name="syncDone" scoped="" ref="0x7fbf618ed020"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fbf618ed1b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fbf618ed340"/>
        <function-ref name="setChannel" scoped="" ref="0x7fbf618ed4d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fbf618ed660"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fbf618ed7f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fbf618ed980"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fbf618edb10"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fbf618edca0"/>
        <function-ref name="sync" scoped="" ref="0x7fbf618ede30"/>
        <function-ref name="getChannel" scoped="" ref="0x7fbf618ec120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fbf618ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fbf618e09b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fbf618e09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618df5c0"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf618dfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fbf618ec5b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fbf618ec5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fbf618ec930"/>
        <function-ref name="rfOff" scoped="" ref="0x7fbf618ecac0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fbf618ecc50"/>
        <function-ref name="startVReg" scoped="" ref="0x7fbf618ecde0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fbf618e0020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fbf618e01b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fbf618e0340"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fbf618e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf618ef220" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf618ef220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf618ef5a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf618ef730"/>
        <function-ref name="request" scoped="" ref="0x7fbf618ef8c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf618efa50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf618efbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fbf618d91b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fbf618d91b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fbf618d9530"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fbf618d96c0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fbf618d9850"/>
        <function-ref name="syncDone" scoped="" ref="0x7fbf618d99e0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fbf618d9b70"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fbf618d9d00"/>
        <function-ref name="setChannel" scoped="" ref="0x7fbf618d8020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fbf618d81b0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fbf618d8340"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fbf618d84d0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fbf618d8660"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fbf618d87f0"/>
        <function-ref name="sync" scoped="" ref="0x7fbf618d8980"/>
        <function-ref name="getChannel" scoped="" ref="0x7fbf618d8c10"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fbf618d8da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fbf618b8020" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf618b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618b83a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf618b8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fbf618d2970" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbf618d2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fbf618d2cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fbf618d43a0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fbf618d43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf618d0be0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf618d3bc0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf618d0590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf618d00d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf618cf0d0"/>
        <function-ref name="start" scoped="" ref="0x7fbf618d31f0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf618d3700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fbf618bdc90" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf618bdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618bc0a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf618bc230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fbf618ce830" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fbf618ce830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf618cebb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf618ced40"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf618cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf618cd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf618cd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf618cd4d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf618cd660"/>
        <function-ref name="clr" scoped="" ref="0x7fbf618cd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fbf618d6500" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fbf618d6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618d5130"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf618d55b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fbf618a6020" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fbf618a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf618a63a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf618a6530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fbf618b88c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbf618b88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618b8c40"/>
        <function-ref name="write" scoped="" ref="0x7fbf618b8dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fbf618b71d0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbf618b71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618b7550"/>
        <function-ref name="write" scoped="" ref="0x7fbf618b76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fbf618b9a80" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbf618b9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618b9e00"/>
        <function-ref name="write" scoped="" ref="0x7fbf618bd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fbf618c3dd0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbf618c3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fbf618c9180"/>
        <function-ref name="changed" scoped="" ref="0x7fbf618c9310"/>
        <function-ref name="amGroup" scoped="" ref="0x7fbf618c94a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fbf618c9630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fbf618cf5c0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fbf618cf5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf618cf940"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf618cfad0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf618cfc60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf618cfdf0"/>
        <function-ref name="get" scoped="" ref="0x7fbf618ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf618ce1b0"/>
        <function-ref name="set" scoped="" ref="0x7fbf618ce340"/>
        <function-ref name="clr" scoped="" ref="0x7fbf618ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fbf618b6830" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf618b6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf618b6db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fbf618cdb50" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fbf618cdb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf618cc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf618cc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf618cc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf618cc4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf618cc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf618cc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fbf618cc980"/>
        <function-ref name="clr" scoped="" ref="0x7fbf618ccb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf618dedf0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf618dedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf618db1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fbf618bc5f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf618bc5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618bc970"/>
        <function-ref name="write" scoped="" ref="0x7fbf618bcb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fbf618b51d0" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbf618b51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf618b5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fbf618b58f0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fbf618b58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf618b5c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf618b5e00"/>
        <function-ref name="request" scoped="" ref="0x7fbf618b3020"/>
        <function-ref name="granted" scoped="" ref="0x7fbf618b31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf618b3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fbf618b1560" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fbf618b1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf618b18e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf618b1a70"/>
        <function-ref name="request" scoped="" ref="0x7fbf618b1c00"/>
        <function-ref name="granted" scoped="" ref="0x7fbf618b1d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf618b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fbf618d7130" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fbf618d7130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fbf618d74b0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fbf618d7640"/>
        <function-ref name="rxOn" scoped="" ref="0x7fbf618d77d0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fbf618d7960"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fbf618d7af0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fbf618d7c80"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fbf618d7e10"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fbf618d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fbf618bd3c0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbf618bd3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618bd740"/>
        <function-ref name="write" scoped="" ref="0x7fbf618bd8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fbf618b91d0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbf618b91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618b9550"/>
        <function-ref name="write" scoped="" ref="0x7fbf618b96e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fbf618b4990" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbf618b4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf618b4d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf618b02e0" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf618b02e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf618b0660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf618b07f0"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf618b0980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf618b0b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf618b0ca0"/>
        <function-ref name="get" scoped="" ref="0x7fbf618b0e30"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf618af020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf618af660"/>
        <function-ref name="set" scoped="" ref="0x7fbf618af1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf618af340"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf618af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fbf618a7020" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fbf618a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf618a73a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf618a7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf618db4b0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf618db4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf618db830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf618db9c0"/>
        <function-ref name="request" scoped="" ref="0x7fbf618dbb50"/>
        <function-ref name="granted" scoped="" ref="0x7fbf618dbce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf618dbe70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fbf618c59a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbf618c59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618c5d20"/>
        <function-ref name="write" scoped="" ref="0x7fbf618c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fbf618c5020" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbf618c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf618c54a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf618c5630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fbf618c65b0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fbf618c65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf618c6930"/>
        <function-ref name="disable" scoped="" ref="0x7fbf618c6ac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbf618c6c50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbf618c6de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fbf618b36f0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fbf618b36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf618b3a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf618b3c00"/>
        <function-ref name="request" scoped="" ref="0x7fbf618b3d90"/>
        <function-ref name="granted" scoped="" ref="0x7fbf618b1020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf618b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fbf618b6100" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbf618b6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf618b6480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf618307e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf618307e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf61830b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fbf6182d220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbf6182d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf6182bb30"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6182ca60"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf6182b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf6182b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf61829020"/>
        <function-ref name="start" scoped="" ref="0x7fbf6182c090"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6182c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61827260" loc="42:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61827260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf618275e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fbf61827af0" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fbf61827af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf617ec390"/>
        <function-ref name="fired" scoped="" ref="0x7fbf617ee360"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf617eece0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf617ee820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf617ec850"/>
        <function-ref name="start" scoped="" ref="0x7fbf617ef970"/>
        <function-ref name="stop" scoped="" ref="0x7fbf617efe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf60431ab0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf60431ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf6042d390"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6042e340"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf6042ecc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf6042e800"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf6042d850"/>
        <function-ref name="start" scoped="" ref="0x7fbf604308f0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60430e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60431260" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60431260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf604315e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf60429c20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf60429c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf604264e0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf604274e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf60427e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf604279a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf604269a0"/>
        <function-ref name="start" scoped="" ref="0x7fbf60428a80"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60427020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf604293d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf604293d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60429750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fbf60410440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf60410440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf604107c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf60410950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf60410ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf60410c70"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60410e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fbf604139d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf604139d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf60413d50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf60412020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf604121b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf60412340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf604124d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf60412660"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf604127f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf60412980"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf60412b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf60412ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf60412e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fbf60411120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf60411120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf604114a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf60411630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf604117c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf60411950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf60411ae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf60411c70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf60411e00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf60410020"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf604101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fbf604060c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fbf604060c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf60406440"/>
        <function-ref name="setEvent" scoped="" ref="0x7fbf604065d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fbf60406760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fbf604068f0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60406a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fbf60409710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf60409710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf60409a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf60409c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf60409db0"/>
        <function-ref name="get" scoped="" ref="0x7fbf60408020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf604081b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf60408340"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf604084d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf60408660"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf604087f0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf60408980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf60408b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf6040d5b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf6040d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf6040adf0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6040cdf0"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf6040a7a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf6040a2e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf604092e0"/>
        <function-ref name="start" scoped="" ref="0x7fbf6040c420"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6040c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf6040eca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf6040eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf6040d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fbf60408da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf60408da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf60407180"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf60407310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf604074a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf60407630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf604077c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf60407950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf60407ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf60407c70"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf60407e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbf61811080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf61811080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61810020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf618109a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf618104e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61810e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fbf618080f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fbf618080f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61807020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf618079a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf618074e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61807e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbf6180ccd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf6180ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf6180bb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61809550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61809090"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61809a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fbf60423020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fbf60423020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf60420870"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60421840"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf60420220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf60421d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf60420d30"/>
        <function-ref name="start" scoped="" ref="0x7fbf60423e30"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60421380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fbf6041c780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fbf6041c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf60419020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6041a020"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf6041a9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf6041a4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf604194e0"/>
        <function-ref name="start" scoped="" ref="0x7fbf6041b5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6041bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbf6041f3d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf6041f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf6041e240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6041ebc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf6041e700"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf6041c0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fbf617e6020" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fbf617e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617e63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617e6530"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617e66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617e6850"/>
        <function-ref name="get" scoped="" ref="0x7fbf617e69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617e6b70"/>
        <function-ref name="set" scoped="" ref="0x7fbf617e6d00"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fbf617e5390" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fbf617e5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617e5710"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617e58a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617e5a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617e5bc0"/>
        <function-ref name="get" scoped="" ref="0x7fbf617e5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617e4020"/>
        <function-ref name="set" scoped="" ref="0x7fbf617e41b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fbf617e46a0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fbf617e46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617e4a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617e4bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617e4d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617e3020"/>
        <function-ref name="get" scoped="" ref="0x7fbf617e31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617e3340"/>
        <function-ref name="set" scoped="" ref="0x7fbf617e34d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617e3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fbf617e8cd0" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fbf617e8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617e70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617e7230"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617e73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617e7550"/>
        <function-ref name="get" scoped="" ref="0x7fbf617e76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617e7870"/>
        <function-ref name="set" scoped="" ref="0x7fbf617e7a00"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fbf617e2ce0" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fbf617e2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617e1230"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617e13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617e1550"/>
        <function-ref name="get" scoped="" ref="0x7fbf617e16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617e1870"/>
        <function-ref name="set" scoped="" ref="0x7fbf617e1a00"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617e1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fbf6182ea70" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fbf6182ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf6182edf0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617e8020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617e81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617e8340"/>
        <function-ref name="get" scoped="" ref="0x7fbf617e84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617e8660"/>
        <function-ref name="set" scoped="" ref="0x7fbf617e87f0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617e8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fbf617e39b0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fbf617e39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617e3d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617e2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617e2340"/>
        <function-ref name="get" scoped="" ref="0x7fbf617e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617e2660"/>
        <function-ref name="set" scoped="" ref="0x7fbf617e27f0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617e2980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf617de2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617de2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617de670"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617de800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf617de990"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617deb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617decb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf617dee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617dd020"/>
        <function-ref name="get" scoped="" ref="0x7fbf617dd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf617dd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf617dd4d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf617dd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf617dd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf617dd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf617ddc10"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617ddda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf617df020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617df3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617df530"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617df6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617df850"/>
        <function-ref name="get" scoped="" ref="0x7fbf617df9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617dfb70"/>
        <function-ref name="set" scoped="" ref="0x7fbf617dfd00"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf617dade0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617dade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617d8180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617d8310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf617d84a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617d8630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617d87c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf617d8950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617d8ae0"/>
        <function-ref name="get" scoped="" ref="0x7fbf617d8c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf617d8e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf617d7020"/>
        <function-ref name="set" scoped="" ref="0x7fbf617d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf617d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf617d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf617d7760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf617dbb60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617dbb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617da020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617da1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617da340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617da4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf617da660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617da7f0"/>
        <function-ref name="set" scoped="" ref="0x7fbf617da980"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617dab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf617d4930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617d4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617d4cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617d4e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf617d3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617d31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617d3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf617d34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617d3660"/>
        <function-ref name="get" scoped="" ref="0x7fbf617d37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf617d3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf617d3b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf617d3ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf617d3e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf617d2020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf617d22b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617d2440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf617d5710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617d5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617d5a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617d5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617d5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617d4020"/>
        <function-ref name="get" scoped="" ref="0x7fbf617d41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617d4340"/>
        <function-ref name="set" scoped="" ref="0x7fbf617d44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617d4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf617cf480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617cf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617cf800"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617cf990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf617cfb20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617cfcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617cfe40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf617ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617ce1b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf617ce340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf617ce4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf617ce660"/>
        <function-ref name="set" scoped="" ref="0x7fbf617ce7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf617ce980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf617ceb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf617ceda0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf617d01d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617d01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617d0550"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617d06e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617d0870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617d0a00"/>
        <function-ref name="get" scoped="" ref="0x7fbf617d0b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617d0d20"/>
        <function-ref name="set" scoped="" ref="0x7fbf617cf020"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf617ca020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617ca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617ca530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf617ca6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617ca850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617ca9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf617cab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617cad00"/>
        <function-ref name="get" scoped="" ref="0x7fbf617c9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf617c91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf617c9340"/>
        <function-ref name="set" scoped="" ref="0x7fbf617c94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf617c9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf617c97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf617c9a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617c9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf617ccd70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617ccd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617cb180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617cb310"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617cb4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617cb630"/>
        <function-ref name="get" scoped="" ref="0x7fbf617cb7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617cb950"/>
        <function-ref name="set" scoped="" ref="0x7fbf617cbae0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617cbc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf617c6de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617c6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617c5180"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617c5310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf617c54a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617c5630"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617c57c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf617c5950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617c5ae0"/>
        <function-ref name="get" scoped="" ref="0x7fbf617c5c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf617c5e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf617c4020"/>
        <function-ref name="set" scoped="" ref="0x7fbf617c41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf617c4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf617c44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf617c4760"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617c48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf617c7b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617c7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617c6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617c61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617c6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617c64d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf617c6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617c67f0"/>
        <function-ref name="set" scoped="" ref="0x7fbf617c6980"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617c6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf617c0930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf617c0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617c0cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617c0e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf617bf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617bf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617bf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf617bf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617bf660"/>
        <function-ref name="get" scoped="" ref="0x7fbf617bf7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf617bf980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf617bfb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf617bfca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf617bfe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf617be020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf617be2b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617be440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf617c2710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf617c2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf617c2a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf617c2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf617c2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf617c0020"/>
        <function-ref name="get" scoped="" ref="0x7fbf617c01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617c0340"/>
        <function-ref name="set" scoped="" ref="0x7fbf617c04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf617c0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fbf617ab060" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fbf617ab060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fbf617ab3e0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617ab570"/>
        <function-ref name="captured" scoped="" ref="0x7fbf617ab700"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fbf617ab890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fbf617abc70" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fbf617abc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf617aa020"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617aa1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbf617aa340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbf617aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fbf617aa8c0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbf617aa8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf617aac40"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617aadd0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbf617a7020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbf617a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fbf6178a5d0" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fbf6178a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fbf6178a950"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fbf6178aae0"/>
        <function-ref name="captured" scoped="" ref="0x7fbf6178ac70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6178ae00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61789020"/>
        <function-ref name="setEdge" scoped="" ref="0x7fbf617891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fbf617a4760" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fbf617a4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fbf617a4ae0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617a4c70"/>
        <function-ref name="captured" scoped="" ref="0x7fbf617a4e00"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fbf6178b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMicro" ref="0x7fbf61786620" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMicro" scoped="" ref="0x7fbf61786620"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf617853d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fbf61787410" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fbf61787410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61786090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fbf6178b2b0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fbf6178b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fbf6178b630"/>
        <function-ref name="getControl" scoped="" ref="0x7fbf6178b7c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6178b950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fbf6178bae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fbf6178bc70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6178be00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fbf6178a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fbf6178a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fbf6178a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fbf61789480" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf61789480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61789800"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61789990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf61789b20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61789cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61789e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf61788020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf617881b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf61788340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf617884d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf61788660"/>
        <function-ref name="set" scoped="" ref="0x7fbf617887f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf61788980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf61788b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf61788da0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61787020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fbf61781180" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fbf61781180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61781db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbf6177f450" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf6177f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf6177e3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6177ed50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf6177e890"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf6177d260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbf61779110" loc="43:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf61779110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61778020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf617789a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf617784e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61778e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fbf61773260" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fbf61773260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61772090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61772a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61772550"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61771020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fbf6176dc30" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fbf6176dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6176c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fbf6176c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fbf6176c340"/>
        <function-ref name="get" scoped="" ref="0x7fbf6176c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fbf6176c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6176c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf6176c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf6176cb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf6176cca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fbf6176ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fbf6176b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbf6176fae0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf6176fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf6176e970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6176d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf6176ee30"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf6176d800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fbf61765910" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fbf61765910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61763780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61762150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61763c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61762610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fbf61767430" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf61767430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf617663d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61766d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61766890"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61765260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fbf6177ad30" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fbf6177ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf6175f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbf6175e020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf6175e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625c96b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fbf625c9a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf6175ee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf6175d800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf6175d340"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf6175dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fbf6174f020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fbf6174f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6174f3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6174f530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6174f6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6174f850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6174f9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6174fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fbf61744020" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fbf61744020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617443a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61744530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617446c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61744850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf617449e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61744b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fbf6174c020" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fbf6174c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6174c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6174c530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6174c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6174c850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6174c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6174cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fbf61749020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fbf61749020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617493a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61749530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617496c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61749850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf617499e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61749b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fbf61756060" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fbf61756060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617563e0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61756570"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61756700"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61756890"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61756a20"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61756bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fbf61746020" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fbf61746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617464a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61746630"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617467c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61746950"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61746ae0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61746c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fbf6174e020" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fbf6174e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6174e3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6174e530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6174e6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6174e850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6174e9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6174eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fbf61743020" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fbf61743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617433a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61743530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617436c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61743850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf617439e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61743b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fbf61751170" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fbf61751170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617514f0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61751680"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61751810"/>
        <function-ref name="edge" scoped="" ref="0x7fbf617519a0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61751b30"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61751cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fbf61748020" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fbf61748020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617483a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61748530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617486c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61748850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf617489e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61748b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fbf61750020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fbf61750020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617503a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61750530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617506c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61750850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf617509e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61750b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fbf61745060" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fbf61745060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617453e0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61745570"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61745700"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61745890"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61745a20"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61745bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fbf6174d020" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fbf6174d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6174d3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6174d530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6174d6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6174d850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6174d9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6174db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fbf6174a020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fbf6174a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6174a3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6174a530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6174a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6174a850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6174a9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6174ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fbf61758100" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fbf61758100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61758480"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61758610"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617587a0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61758930"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61758ac0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61758c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fbf61747020" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fbf61747020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617473a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61747530"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617476c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61747850"/>
        <function-ref name="enable" scoped="" ref="0x7fbf617479e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61747b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fbf6173cbc0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fbf6173cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6173b020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6173b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6173b340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6173b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6173b660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6173b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fbf61732bc0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fbf61732bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61730020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf617301b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61730340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf617304d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61730660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf617307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fbf61739bc0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fbf61739bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61738020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf617381b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61738340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf617384d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61738660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf617387f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fbf61737bc0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fbf61737bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61736020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf617361b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61736340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf617364d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61736660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf617367f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fbf6173ec40" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fbf6173ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6173d020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6173d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6173d340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6173d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6173d660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6173d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fbf61734bc0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fbf61734bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf617330a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61733230"/>
        <function-ref name="disable" scoped="" ref="0x7fbf617333c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf61733550"/>
        <function-ref name="enable" scoped="" ref="0x7fbf617336e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf61733870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fbf6173bbc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fbf6173bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6173a020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6173a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6173a340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6173a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6173a660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6173a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fbf61730bc0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fbf61730bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6172f020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6172f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6172f340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6172f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6172f660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6172f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fbf61742d30" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fbf61742d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6173f0e0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6173f270"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6173f400"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6173f590"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6173f720"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6173f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fbf61736bc0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fbf61736bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61735020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf617351b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61735340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf617354d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61735660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf617357f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fbf6173dbc0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fbf6173dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6173c020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6173c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6173c340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6173c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6173c660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6173c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fbf61733c40" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fbf61733c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61732020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf617321b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61732340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf617324d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61732660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf617327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fbf6173abc0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fbf6173abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61739020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf617391b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61739340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf617394d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61739660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf617397f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fbf61738bc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fbf61738bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61737020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf617371b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61737340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf617374d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61737660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf617377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fbf6173fc80" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fbf6173fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6173e0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6173e230"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6173e3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6173e550"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6173e6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6173e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fbf61735bc0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fbf61735bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf61734020"/>
        <function-ref name="fired" scoped="" ref="0x7fbf617341b0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61734340"/>
        <function-ref name="edge" scoped="" ref="0x7fbf617344d0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf61734660"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf617347f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fbf6165b610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fbf6165b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6165b990"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6165bb20"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6165bcb0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6165be40"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6164e020"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6164e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fbf6165ca30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fbf6165ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6165cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6165b020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbf6165b1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbf6165b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fbf6164c610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fbf6164c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6164c990"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6164cb20"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6164ccb0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf6164ce40"/>
        <function-ref name="enable" scoped="" ref="0x7fbf6164b020"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf6164b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fbf6164da70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fbf6164da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6164ddf0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6164c020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbf6164c1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbf6164c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbf613c5e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf613c5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c2410"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbf613ce160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbf613ce160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613ce4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbf613c8e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf613c8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c7210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbf613c0880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf613c0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c0c00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbf613b80a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbf613b80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b8420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbf613bf0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbf613bf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613bf420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613bf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbf613ac500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbf613ac500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613ac880"/>
        <function-ref name="write" scoped="" ref="0x7fbf613aca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbf613af500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbf613af500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613af880"/>
        <function-ref name="write" scoped="" ref="0x7fbf613afa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbf613cd490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbf613cd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613cd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbf613b5880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbf613b5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b5c00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbf613b0500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf613b0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b0880"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbf613c7e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbf613c7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c6210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbf613c6e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbf613c6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c5210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbf613bb880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbf613bb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613bbc00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613bbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbf613bc0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbf613bc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613bc420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613bc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbf613bf880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbf613bf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613bfc00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613bfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbf613d1a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf613d1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbf613d1e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbf613d0020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbf613d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbf613cce00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf613cce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613cb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbf613cb490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbf613cb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613cb910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbf613b4c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf613b4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b20a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbf613cbbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbf613cbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbf613b0ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf613b0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613af0a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613af230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbf613cc160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf613cc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613cc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbf613b50a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbf613b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b5420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbf613c6670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf613c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c69f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbf613c7670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf613c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c79f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbf613d0ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbf613d0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613d0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbf613b60a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf613b60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b6420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbf613b8880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbf613b8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b8c00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbf613b6880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf613b6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b6c00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbf613aece0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbf613aece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613ac0a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613ac230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbf613afce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbf613afce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613ae0a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613ae230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbf613bc880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbf613bc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613bcc00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613bcd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbf613b70a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbf613b70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b7420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbf613b1ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbf613b1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b00a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbf613be880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbf613be880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613bec00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613bed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbf613acce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbf613acce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf613ab0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf613ab230"/>
        <function-ref name="write" scoped="" ref="0x7fbf613ab3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf613ab550"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf613ab6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbf613d0480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbf613d0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613d0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbf613c8670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbf613c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c89f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbf613c5670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf613c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c59f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbf613b90a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbf613b90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b9420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbf613be0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbf613be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613be420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613be5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbf613b9880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbf613b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b9c00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbf613c2870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbf613c2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c2bf0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c2d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbf613ce7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbf613ce7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613ceb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbf613c00a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf613c00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613c0420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613c05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf613d2e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf613d2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf613d11c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf613d1350"/>
        <function-ref name="request" scoped="" ref="0x7fbf613d14e0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf613d1670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf613d1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbf613c92f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbf613c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613c9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbf613c8020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbf613c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbf613b1500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbf613b1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b1880"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbf613b2ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbf613b2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b10a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbf613cc7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf613cc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613ccb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbf613b2500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf613b2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b2880"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbf613ae500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbf613ae500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613ae880"/>
        <function-ref name="write" scoped="" ref="0x7fbf613aea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbf613bb0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf613bb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613bb420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613bb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbf613b7880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbf613b7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b7c00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbf613cee00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbf613cee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613cd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbf613cdae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbf613cdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613cde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbf613bd0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbf613bd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613bd420"/>
        <function-ref name="write" scoped="" ref="0x7fbf613bd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbf613c9940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbf613c9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613c9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbf613bd880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbf613bd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613bdc00"/>
        <function-ref name="write" scoped="" ref="0x7fbf613bdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbf613b40a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbf613b40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613b4820"/>
        <function-ref name="write" scoped="" ref="0x7fbf613b49b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbf613ab9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbf613ab9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf613abd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf613aa020"/>
        <function-ref name="write" scoped="" ref="0x7fbf613aa1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf613aa340"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf613aa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fbf616092c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fbf616092c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf61609640"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf616097d0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61609960"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf61609af0"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf61609c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbf6160a350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6160a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbf6160a6d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbf6160a860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbf6160a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fbf61608540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fbf61608540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf616088c0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61608a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fbf61606370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fbf61606370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf616066f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61606880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6160b4d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6160b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6160b850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6160b9e0"/>
        <function-ref name="request" scoped="" ref="0x7fbf6160bb70"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6160bd00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6160a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fbf616051d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fbf616051d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61605550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fbf615ef2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbf615ef2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf615ef660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf615ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fbf61600890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fbf61600890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf61600c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf61600da0"/>
        <function-ref name="write" scoped="" ref="0x7fbf615ff020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf615ff1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf615ff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbf61602660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf61602660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbf616029e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbf61602b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbf61602d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fbf615f8c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbf615f8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbf615fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fbf615efb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fbf615efb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf615f9020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf615f91b0"/>
        <function-ref name="isState" scoped="" ref="0x7fbf615f9340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf615f94d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf615f9660"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf615f97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fbf615fb060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fbf615fb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf615fb3e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf615fb570"/>
        <function-ref name="request" scoped="" ref="0x7fbf615fb700"/>
        <function-ref name="granted" scoped="" ref="0x7fbf615fb890"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf615fba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fbf615ffba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fbf615ffba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf615fd020"/>
        <function-ref name="write" scoped="" ref="0x7fbf615fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fbf615fda30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fbf615fda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf615fddb0"/>
        <function-ref name="write" scoped="" ref="0x7fbf615fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf615f9a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf615f9a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf615f9df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf615f7020"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf615f71b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf615f7340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf615f74d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf615f7660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf615f77f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf615f7e30"/>
        <function-ref name="set" scoped="" ref="0x7fbf615f7980"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf615f7b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf615f7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf61601510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61601510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61601890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61601a20"/>
        <function-ref name="request" scoped="" ref="0x7fbf61601bb0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61601d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61600020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fbf615ecbd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fbf615ecbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf615eb020"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf615eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fbf615fc8b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fbf615fc8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf615fcc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbf61591770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbf61591770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf61591af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf61591c80"/>
        <function-ref name="isState" scoped="" ref="0x7fbf61591e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf6158d020"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf6158d1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf6158d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbf6158c1d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbf6158c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf6158c550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf6158c6e0"/>
        <function-ref name="isState" scoped="" ref="0x7fbf6158c870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf6158ca00"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf6158cb90"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf6158cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61587020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61587020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf615873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbf61587b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbf61587b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf61586020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf615861b0"/>
        <function-ref name="isState" scoped="" ref="0x7fbf61586340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf615864d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf61586660"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf615867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fbf613f9410" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbf613f9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf613f9790"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf613f9920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fbf6156ed90" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbf6156ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbf613f9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6156e140" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6156e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6156e4c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6156e650"/>
        <function-ref name="request" scoped="" ref="0x7fbf6156e7e0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6156e970"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6156eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf602fb760" loc="82:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf602fb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf602fbae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf602fbc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fbf602f9120" loc="87:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbf602f9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf602f94a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf602f9630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fbf602f98c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbf602f98c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbf602f9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fbf602fa020" loc="83:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbf602fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbf602fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf602fc9c0" loc="81:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf602fc9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf602fcd40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf602fb020"/>
        <function-ref name="request" scoped="" ref="0x7fbf602fb1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf602fb340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf602fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fbf602fa630" loc="85:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fbf602fa630"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fbf602fa9b0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fbf602fab40"/>
        <function-ref name="splitRead" scoped="" ref="0x7fbf602facd0"/>
        <function-ref name="write" scoped="" ref="0x7fbf602fae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fbf6155b6b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6155b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf6155ba30"/>
        <function-ref name="configure" scoped="" ref="0x7fbf6155bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fbf61559850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbf61559850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf61559bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf61559d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fbf61557a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbf61557a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbf61557dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fbf6155a020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbf6155a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbf6155a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fbf61558690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fbf61558690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61558a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61558ba0"/>
        <function-ref name="request" scoped="" ref="0x7fbf61558d30"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61557020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf615571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6155c430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6155c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6155c7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6155c940"/>
        <function-ref name="request" scoped="" ref="0x7fbf6155cad0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6155cc60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6155cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fbf6155a6a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fbf6155a6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fbf6155aa20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fbf6155abb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fbf6155ad40"/>
        <function-ref name="write" scoped="" ref="0x7fbf61559020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fbf615552a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf615552a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf61555620"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf615557b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fbf614fd250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf614fd250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf614fd5f0"/>
        <function-ref name="configure" scoped="" ref="0x7fbf614fd780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fbf614fcc50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fbf614fcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf614fb020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf614fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fbf614fa3e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fbf614fa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fbf614fa780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fbf614fda10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fbf614fda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fbf614fdd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fbf614faa50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fbf614faa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbf614fadd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbf614f9020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbf614f91b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbf614f9340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbf614f94d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbf614f9660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbf614f97f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbf614f9980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbf614f9b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbf614f9ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbf614f9e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbf614f8020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbf614f81b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbf614f8440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbf614f85d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbf614f8760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbf614f88f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fbf614f8a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbf614f8c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbf614f8da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbf614f7020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbf614f71b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbf614f7340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbf614f74d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf614f7660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbf614f79f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbf614f7b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbf614f7d10"/>
        <function-ref name="tx" scoped="" ref="0x7fbf614f6020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbf614f61b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbf614f6340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbf614f64d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbf614f6660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbf614f67f0"/>
        <function-ref name="rx" scoped="" ref="0x7fbf614f6980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbf614f6b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbf614f6ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbf614f6e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbf614f5020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbf614f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf614f5c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf614f5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf614f3020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf614f31b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf614f3340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf614f34d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf614f3660"/>
        <function-ref name="get" scoped="" ref="0x7fbf614f37f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf614f3980"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf614f2020"/>
        <function-ref name="set" scoped="" ref="0x7fbf614f3ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf614f3b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf614f3e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fbf614fb5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fbf614fb5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf614fb950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf614fbae0"/>
        <function-ref name="request" scoped="" ref="0x7fbf614fbc70"/>
        <function-ref name="granted" scoped="" ref="0x7fbf614fbe00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf614fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf614fe470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf614fe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf614fe810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf614fe9a0"/>
        <function-ref name="request" scoped="" ref="0x7fbf614feb30"/>
        <function-ref name="granted" scoped="" ref="0x7fbf614fecc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf614fee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fbf614fc060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fbf614fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fbf614fc3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fbf614fc570"/>
        <function-ref name="splitRead" scoped="" ref="0x7fbf614fc700"/>
        <function-ref name="write" scoped="" ref="0x7fbf614fc890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fbf614f5480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fbf614f5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf614f5800"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf614f5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fbf614f22f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fbf614f22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf614f2670"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf614f2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fbf614e53b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf614e53b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf614e5730"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf614e58c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fbf614ea020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf614ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf614ea3a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf614ea530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fbf614ea850" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf614ea850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbf614eabd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbf614ead60"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbf614e9020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbf614e91b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbf614e9340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbf614e94d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbf614e9660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbf614e97f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbf614e9980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbf614e9b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbf614e9ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbf614e9e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbf614e8020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbf614e82b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbf614e8440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbf614e85d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbf614e8760"/>
        <function-ref name="isUart" scoped="" ref="0x7fbf614e88f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbf614e8a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbf614e8c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbf614e8da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbf614e7020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbf614e71b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbf614e7340"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf614e74d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbf614e7860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbf614e79f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbf614e7b80"/>
        <function-ref name="tx" scoped="" ref="0x7fbf614e7d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbf614e6020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbf614e61b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbf614e6340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbf614e64d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbf614e6660"/>
        <function-ref name="rx" scoped="" ref="0x7fbf614e67f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbf614e6980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbf614e6b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbf614e6ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbf614e6e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbf614e5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fbf614d8670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fbf614d8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf614d89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf614d8b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf614d8d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf614d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf614d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf614d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf614d74d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf614d7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf614d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf614d7980"/>
        <function-ref name="set" scoped="" ref="0x7fbf614d7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf614d7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf614d7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf614d6120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf614d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fbf614dddc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fbf614dddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf614dc180"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf614dc310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fbf614d6670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fbf614d6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf614d69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf614d6b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf614d6d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf614d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf614d51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf614d5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf614d54d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf614d5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf614d57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf614d5980"/>
        <function-ref name="set" scoped="" ref="0x7fbf614d5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf614d5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf614d5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf614d4120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf614d42b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fbf614d4670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fbf614d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf614d49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf614d4b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf614d4d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf614d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf614d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf614d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf614d34d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf614d3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf614d37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf614d3980"/>
        <function-ref name="set" scoped="" ref="0x7fbf614d3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf614d3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf614d3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf614d2120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf614d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fbf614e1020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fbf614e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbf614e13a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbf614e1530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbf614e16c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbf614e1850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbf614e19e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbf614e1b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbf614e1d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbf614e0020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbf614e01b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbf614e0340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbf614e04d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbf614e0660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbf614e07f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbf614e0a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbf614e0c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbf614e0da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbf614df020"/>
        <function-ref name="isUart" scoped="" ref="0x7fbf614df1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbf614df340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbf614df4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbf614df660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbf614df7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbf614df980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbf614dfb10"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf614dfca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbf614de220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbf614de3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbf614de540"/>
        <function-ref name="tx" scoped="" ref="0x7fbf614de6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbf614de860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbf614de9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbf614deb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbf614ded10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbf614dd020"/>
        <function-ref name="rx" scoped="" ref="0x7fbf614dd1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbf614dd340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbf614dd4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbf614dd660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbf614dd7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbf614dd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fbf614e4710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf614e4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf614e4a90"/>
        <function-ref name="stop" scoped="" ref="0x7fbf614e4c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fbf614da670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fbf614da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf614da9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf614dab80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf614dad10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf614d9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf614d91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf614d9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf614d94d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf614d9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf614d97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf614d9980"/>
        <function-ref name="set" scoped="" ref="0x7fbf614d9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf614d9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf614d9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf614d8120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf614d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fbf614dc6d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fbf614dc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf614dca50"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf614dcbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf614dcd70"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf614db020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf614db1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf614db340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf614db4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf614db660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf614db7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf614db980"/>
        <function-ref name="set" scoped="" ref="0x7fbf614dbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf614dbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf614dbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf614da120"/>
        <function-ref name="clr" scoped="" ref="0x7fbf614da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf602f12c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf602f12c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf602f1640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf602f17d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf602ea440" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf602ea440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf602ea7c0"/>
        <function-ref name="configure" scoped="" ref="0x7fbf602ea950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fbf602ebc10" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fbf602ebc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf602ea020"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf602ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf602f2640" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf602f2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf602f29c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf602f2b50"/>
        <function-ref name="request" scoped="" ref="0x7fbf602f2ce0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf602f2e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf602f1030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fbf602f02b0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fbf602f02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fbf602f0630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fbf602f07c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fbf602f0950"/>
        <function-ref name="enableUart" scoped="" ref="0x7fbf602f0ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fbf602f0c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fbf602f0e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fbf602ee020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fbf602ee1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fbf602ee340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fbf602ee4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fbf602ee660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fbf602ee7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fbf602ee980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fbf602eec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fbf602eeda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fbf602ed020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fbf602ed1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fbf602ed340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fbf602ed4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fbf602ed660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fbf602ed7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fbf602ed980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fbf602edb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fbf602edca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fbf602ede30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fbf602ec220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fbf602ec3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fbf602ec540"/>
        <function-ref name="tx" scoped="" ref="0x7fbf602ec6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fbf602ec860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fbf602ec9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fbf602ecb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fbf602ecd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fbf602eb020"/>
        <function-ref name="rx" scoped="" ref="0x7fbf602eb1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fbf602eb340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fbf602eb4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fbf602eb660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fbf602eb7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fbf602eb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf602f1a60" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf602f1a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf602f1de0"/>
        <function-ref name="userId" scoped="" ref="0x7fbf602f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf6143e2c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf6143e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf6143e640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf6143e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf6143d8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6143d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf6143dc20"/>
        <function-ref name="configure" scoped="" ref="0x7fbf6143ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fbf614411d0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fbf614411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf61441550"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf614416e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6143f020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6143f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6143f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6143f530"/>
        <function-ref name="request" scoped="" ref="0x7fbf6143f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6143f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6143f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf6143ead0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6143ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf6143ee50"/>
        <function-ref name="userId" scoped="" ref="0x7fbf6143d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fbf6143ae50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6143ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf61438210"/>
        <function-ref name="userId" scoped="" ref="0x7fbf614383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fbf6143b060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fbf6143b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf6143b400"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf6143b590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fbf6143a840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fbf6143a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6143abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fbf6143b990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fbf6143b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6143bd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fbf6143a060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fbf6143a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fbf6143a3e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fbf6143a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf614359e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf614359e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf61435d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf61434020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf61433770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf61433770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf61433b10"/>
        <function-ref name="configure" scoped="" ref="0x7fbf61433ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fbf61434270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf61434270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf614345f0"/>
        <function-ref name="requested" scoped="" ref="0x7fbf61434780"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61434910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61434aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf61434c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf61436b60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61436b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61435020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf614351b0"/>
        <function-ref name="request" scoped="" ref="0x7fbf61435340"/>
        <function-ref name="granted" scoped="" ref="0x7fbf614354d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61435660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf61434e80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf61434e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf61433220"/>
        <function-ref name="userId" scoped="" ref="0x7fbf614333b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60295ca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60295ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf602940a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fbf60294330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fbf60294330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbf602946b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbf60294840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbf602949d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf60294b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fbf602913a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fbf602913a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fbf60291740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf602918d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fbf6028e210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fbf6028e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fbf6028e5b0"/>
        <function-ref name="configure" scoped="" ref="0x7fbf6028e740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fbf6028e9d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fbf6028e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbf6028ed50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbf6028d020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbf6028d1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf6028d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fbf60291b20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf60291b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf60290020"/>
        <function-ref name="requested" scoped="" ref="0x7fbf602901b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf60290340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf602904d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf60290660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf6028d590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf6028d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf6028d910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf6028daa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf6028dc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf6028ddc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf6028c020"/>
        <function-ref name="get" scoped="" ref="0x7fbf6028c1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf6028c340"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf6028c980"/>
        <function-ref name="set" scoped="" ref="0x7fbf6028c660"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf6028c4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf6028c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf60292540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf60292540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf602928e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf60292a70"/>
        <function-ref name="request" scoped="" ref="0x7fbf60292c00"/>
        <function-ref name="granted" scoped="" ref="0x7fbf60292d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf60291020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fbf602908b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf602908b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf60290c30"/>
        <function-ref name="userId" scoped="" ref="0x7fbf60290dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fbf6028cc50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fbf6028cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf6028b020"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf6028b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fbf61417020" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fbf61417020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fbf614173a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fbf614175f0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf614175f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61417970"/>
        <function-ref name="requested" scoped="" ref="0x7fbf61417b00"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61417c90"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61417e20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf61416020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fbf6142e880" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf6142e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf6142ec00"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6142ed90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fbf61416270" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf61416270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf614165f0"/>
        <function-ref name="userId" scoped="" ref="0x7fbf61416780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fbf6025cb00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fbf6025cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fbf6025ce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fbf6025b0f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fbf6025b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6025b470"/>
        <function-ref name="requested" scoped="" ref="0x7fbf6025b600"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6025b790"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6025b920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fbf6025bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fbf6025c3a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fbf6025c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf6025c720"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6025c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fbf6025bd00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fbf6025bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fbf602590a0"/>
        <function-ref name="userId" scoped="" ref="0x7fbf60259230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbf61392c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf61392c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61391210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbf6139dda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbf6139dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6139c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbf61396b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf61396b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61395020"/>
        <function-ref name="write" scoped="" ref="0x7fbf613951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbf61390670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf61390670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613909f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61390b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbf61389e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbf61389e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61388210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbf61390e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbf61390e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138f210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbf6137c2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbf6137c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6137c670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbf6137e2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbf6137e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6137e670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbf6139b120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbf6139b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6139b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbf61384670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbf61384670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613849f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61384b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbf6137f2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf6137f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6137f670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbf61395c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbf61395c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61393020"/>
        <function-ref name="write" scoped="" ref="0x7fbf613931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbf61393c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbf61393c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61392020"/>
        <function-ref name="write" scoped="" ref="0x7fbf613921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbf6138a670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbf6138a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbf6138ce50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbf6138ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138b210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbf6138f670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbf6138f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbf6139e760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6139e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbf6139eae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbf6139ec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbf6139ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbf61399aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf61399aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61399e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbf61398120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbf61398120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613985a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbf61383a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf61383a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61383df0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61382020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbf61398870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbf61398870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61398bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbf6137fad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf6137fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6137fe50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbf6139bdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf6139bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61399180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbf61385e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbf61385e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61384210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbf61393480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf61393480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61393800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61393990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbf61395480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf61395480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61395800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61395990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbf6139d750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbf6139d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6139dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbf61386e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf61386e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61385210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbf61388670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbf61388670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613889f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61388b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbf61385670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf61385670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613859f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61385b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbf6137dad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbf6137dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6137de50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbf6137ead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbf6137ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6137ee50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbf6138b670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbf6138b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbf61388e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbf61388e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61386210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbf61381ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbf61381ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61381e50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbf6138d670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbf6138d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbf6137cad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbf6137cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf6137ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf6137b020"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf6137b340"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf6137b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbf6139d100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbf6139d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6139d480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbf61396370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbf61396370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613966f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61396880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbf61392480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf61392480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61392800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61392990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbf6138ae50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbf6138ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61389210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbf6138fe50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbf6138fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138d210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbf61389670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbf61389670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613899f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61389b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbf61391670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbf61391670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613919f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61391b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbf6139c450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbf6139c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6139c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbf61391e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf61391e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61390210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6139fa80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6139fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6139fe00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6139e020"/>
        <function-ref name="request" scoped="" ref="0x7fbf6139e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6139e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6139e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbf61397020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbf61397020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbf61397cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbf61397cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613960a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbf613812f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbf613812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61381670"/>
        <function-ref name="write" scoped="" ref="0x7fbf61381800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbf61382ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbf61382ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61382e50"/>
        <function-ref name="write" scoped="" ref="0x7fbf61381020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbf61399450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf61399450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613997d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbf613822f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf613822f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61382670"/>
        <function-ref name="write" scoped="" ref="0x7fbf61382800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbf6137d2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbf6137d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6137d670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbf6138be50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf6138be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138a210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbf61386670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbf61386670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613869f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61386b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbf6139caa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbf6139caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6139ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbf6139b770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbf6139b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6139baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbf6138de50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbf6138de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138c210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbf61397670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbf61397670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613979f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbf6138c670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbf6138c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6138c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6138cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbf61384e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbf61384e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61383610"/>
        <function-ref name="write" scoped="" ref="0x7fbf613837a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbf6137b7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbf6137b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf6137bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf6137bcb0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6137be40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf6137a020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf6137a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbf61366c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf61366c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61364210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbf61370da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbf61370da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbf61369b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf61369b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61368020"/>
        <function-ref name="write" scoped="" ref="0x7fbf613681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbf61363670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf61363670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613639f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61363b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbf6135ce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbf6135ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135b210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbf61363e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbf61363e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61362210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbf6134f2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbf6134f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6134f670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6134f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbf613522f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbf613522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61352670"/>
        <function-ref name="write" scoped="" ref="0x7fbf61352800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbf6136e120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbf6136e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbf61358670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbf61358670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613589f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61358b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbf613532f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf613532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61353670"/>
        <function-ref name="write" scoped="" ref="0x7fbf61353800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbf61368c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbf61368c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61367020"/>
        <function-ref name="write" scoped="" ref="0x7fbf613671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbf61367c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbf61367c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61366020"/>
        <function-ref name="write" scoped="" ref="0x7fbf613661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbf6135d670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbf6135d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbf61360e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbf61360e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135f210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbf61362670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbf61362670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613629f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61362b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbf61372760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf61372760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbf61372ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbf61372c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbf61372e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbf6136daa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf6136daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbf6136c120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbf6136c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbf61356a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf61356a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61356df0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61355020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbf6136c870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbf6136c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbf61353ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf61353ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61353e50"/>
        <function-ref name="write" scoped="" ref="0x7fbf61352020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbf6136edc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf6136edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbf61359e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbf61359e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61358210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbf61367480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf61367480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61367800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61367990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbf61368480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf61368480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61368800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61368990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbf61370750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbf61370750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61370ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbf6135ae50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf6135ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61359210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbf6135b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbf6135b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbf61359670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf61359670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613599f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61359b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbf61351ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbf61351ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61351e50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6134f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbf61352ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbf61352ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61352e50"/>
        <function-ref name="write" scoped="" ref="0x7fbf61351020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbf6135f670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbf6135f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbf6135be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbf6135be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135a210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbf61354ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbf61354ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61354e50"/>
        <function-ref name="write" scoped="" ref="0x7fbf61353020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbf61361670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbf61361670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613619f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61361b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbf6134fad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbf6134fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf6134fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf6134e020"/>
        <function-ref name="write" scoped="" ref="0x7fbf6134e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf6134e340"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf6134e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbf61370100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbf61370100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61370480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbf61369370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbf61369370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613696f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61369880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbf61366480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf61366480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61366800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61366990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbf6135de50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbf6135de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135c210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbf61362e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbf61362e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61361210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbf6135c670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbf6135c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbf61364670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbf61364670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613649f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61364b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbf6136f450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbf6136f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbf61364e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf61364e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61363210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf613739e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf613739e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61373d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61372020"/>
        <function-ref name="request" scoped="" ref="0x7fbf613721b0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61372340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf613724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbf6136a020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbf6136a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbf6136acc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbf6136acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf613690a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbf613542f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbf613542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61354670"/>
        <function-ref name="write" scoped="" ref="0x7fbf61354800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbf61355ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbf61355ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61355e50"/>
        <function-ref name="write" scoped="" ref="0x7fbf61354020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbf6136d450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf6136d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbf613552f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf613552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61355670"/>
        <function-ref name="write" scoped="" ref="0x7fbf61355800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbf613512f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbf613512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61351670"/>
        <function-ref name="write" scoped="" ref="0x7fbf61351800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbf6135fe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf6135fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135d210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbf6135a670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbf6135a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6135a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6135ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbf6136faa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbf6136faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbf6136e770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbf6136e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbf61361e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbf61361e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61360210"/>
        <function-ref name="write" scoped="" ref="0x7fbf613603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbf6136a670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbf6136a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6136a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbf61360670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbf61360670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf613609f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61360b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbf61358e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbf61358e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61356610"/>
        <function-ref name="write" scoped="" ref="0x7fbf613567a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbf6134e7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbf6134e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf6134eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf6134ecb0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6134ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf6134d020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf6134d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fbf61346b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbf61346b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fbf61343020"/>
        <function-ref name="changed" scoped="" ref="0x7fbf613431b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fbf61343340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fbf613434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fbf61345d70" loc="40:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fbf61345d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fbf6132f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbf6131ccb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf6131ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbf6131b0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbf6131b230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbf6131b3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbf6131b550"/>
        <function-ref name="setCca" scoped="" ref="0x7fbf6131b6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbf6131b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fbf61318990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fbf61318990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbf61318d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fbf6131c020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fbf6131c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf6131c3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf6131c530"/>
        <function-ref name="modify" scoped="" ref="0x7fbf6131c6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf6131c850"/>
        <function-ref name="resend" scoped="" ref="0x7fbf6131c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbf6131f6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbf6131f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf6131fa40"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6131fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fbf6131a150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fbf6131a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbf6131a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbf61313650" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf61313650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbf613139d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbf61313b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbf61313cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbf61313e80"/>
        <function-ref name="setCca" scoped="" ref="0x7fbf61312030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbf613121c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fbf6130a7c0" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fbf6130a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbf61309d50"/>
        <function-ref name="clear" scoped="" ref="0x7fbf613084c0"/>
        <function-ref name="isValid" scoped="" ref="0x7fbf61309620"/>
        <function-ref name="set" scoped="" ref="0x7fbf61308bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fbf612f1020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf612f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612f13a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf612f1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fbf612f1890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbf612f1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612f1c10"/>
        <function-ref name="write" scoped="" ref="0x7fbf612f1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fbf613125e0" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fbf613125e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbf61312960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fbf612f4530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbf612f4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612f48b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fbf61305880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fbf61305880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fbf61305c00"/>
        <function-ref name="disable" scoped="" ref="0x7fbf61305d90"/>
        <function-ref name="captured" scoped="" ref="0x7fbf61304020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fbf613041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fbf613107f0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fbf613107f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf6130d090"/>
        <function-ref name="fired" scoped="" ref="0x7fbf6130e090"/>
        <function-ref name="startAt" scoped="" ref="0x7fbf6130ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf6130e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fbf6130d550"/>
        <function-ref name="start" scoped="" ref="0x7fbf6130f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6130fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbf6130da00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf6130da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbf6130dd80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbf6130b020"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbf6130b1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbf6130b340"/>
        <function-ref name="getPower" scoped="" ref="0x7fbf6130b4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbf6130b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fbf612f6550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf612f6550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612f68d0"/>
        <function-ref name="write" scoped="" ref="0x7fbf612f6a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fbf612f6e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbf612f6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612f51c0"/>
        <function-ref name="write" scoped="" ref="0x7fbf612f5350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fbf612ead40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fbf612ead40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf612ee0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fbf612ee270"/>
        <function-ref name="sfd" scoped="" ref="0x7fbf612ee400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf613148c0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf613148c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf61314c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61314dd0"/>
        <function-ref name="modify" scoped="" ref="0x7fbf61313020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf613131b0"/>
        <function-ref name="resend" scoped="" ref="0x7fbf61313340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fbf612f8d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf612f8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbf612f70e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbf612f7270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbf612f7400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fbf612f4c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf612f4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612f3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fbf612fe820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fbf612fe820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf612feba0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf612fed30"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf612fb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf612fb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf612fb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf612fb4d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf612fb660"/>
        <function-ref name="clr" scoped="" ref="0x7fbf612fb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61315820" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61315820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf61315ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbf6130b9a0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf6130b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6130bd20"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbf6130a020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbf6130a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fbf612ffb30" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbf612ffb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61305020"/>
        <function-ref name="isSet" scoped="" ref="0x7fbf613051b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61305340"/>
        <function-ref name="set" scoped="" ref="0x7fbf613054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fbf612f33e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf612f33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612f3960"/>
        <function-ref name="write" scoped="" ref="0x7fbf612f3af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fbf612f8020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fbf612f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf612f83a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf612f8530"/>
        <function-ref name="request" scoped="" ref="0x7fbf612f86c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf612f8850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf612f89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fbf61304500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fbf61304500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61304980"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61304b10"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61304ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61304e30"/>
        <function-ref name="get" scoped="" ref="0x7fbf612fe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf612fe1b0"/>
        <function-ref name="set" scoped="" ref="0x7fbf612fe340"/>
        <function-ref name="clr" scoped="" ref="0x7fbf612fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fbf612f0130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbf612f0130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612f04b0"/>
        <function-ref name="write" scoped="" ref="0x7fbf612f0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fbf612f09c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbf612f09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612f0d40"/>
        <function-ref name="write" scoped="" ref="0x7fbf612ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fbf612f56d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbf612f56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612f5a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fbf612fbb40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fbf612fbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf612fa020"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf612fa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf612fa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf612fa4d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf612fa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf612fa7f0"/>
        <function-ref name="set" scoped="" ref="0x7fbf612fa980"/>
        <function-ref name="clr" scoped="" ref="0x7fbf612fab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf612ee6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf612ee6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf612eea40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf612eebd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf612eed60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf612ed020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf612ed1b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf612ed340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf612ed4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf612edb10"/>
        <function-ref name="set" scoped="" ref="0x7fbf612ed660"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf612ed7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf612ed980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fbf612f25e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf612f25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612f2960"/>
        <function-ref name="write" scoped="" ref="0x7fbf612f2af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbf61314020" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbf61314020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf613143a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61314530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fbf612f7780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbf612f7780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf612f7b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf612f7c90"/>
        <function-ref name="write" scoped="" ref="0x7fbf612f7e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf612f6020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf612f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fbf612f5de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbf612f5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612f4180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fbf612f3e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbf612f3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612f2220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fbf61312d70" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fbf61312d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbf61310180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbf61250c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf61250c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124f210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbf6125a020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbf6125a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6125a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbf61254c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf61254c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61253020"/>
        <function-ref name="write" scoped="" ref="0x7fbf612531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbf6124e670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf6124e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbf61247e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbf61247e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61246210"/>
        <function-ref name="write" scoped="" ref="0x7fbf612463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbf6124ee50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbf6124ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124d210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbf6123a2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbf6123a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6123a670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbf6123c2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbf6123c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6123c670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbf61259370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbf61259370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612596f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbf61242670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbf61242670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612429f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61242b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbf6123e2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf6123e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6123e670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbf61253c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbf61253c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61251020"/>
        <function-ref name="write" scoped="" ref="0x7fbf612511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbf61251c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbf61251c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61250020"/>
        <function-ref name="write" scoped="" ref="0x7fbf612501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbf61248670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbf61248670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612489f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61248b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbf6124ae50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbf6124ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61249210"/>
        <function-ref name="write" scoped="" ref="0x7fbf612493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbf6124d670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbf6124d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbf6125c8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf6125c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbf6125cc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbf6125ce00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbf6125b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbf61257d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf61257d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612560a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbf61256370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbf61256370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612567f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbf61241a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf61241a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61241df0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61240020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbf61256ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbf61256ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61256e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbf6123ead0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf6123ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6123ee50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbf61257060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf61257060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612573e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbf61243e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbf61243e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61242210"/>
        <function-ref name="write" scoped="" ref="0x7fbf612423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbf61251480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf61251480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61251800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61251990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbf61253480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf61253480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61253800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61253990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbf6125b940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbf6125b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6125bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbf61244e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf61244e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61243210"/>
        <function-ref name="write" scoped="" ref="0x7fbf612433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbf61246670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbf61246670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612469f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61246b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbf61243670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf61243670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612439f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61243b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbf6123bad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbf6123bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6123be50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbf6123cad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbf6123cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6123ce50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbf61249670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbf61249670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612499f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61249b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbf61246e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbf61246e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61244210"/>
        <function-ref name="write" scoped="" ref="0x7fbf612443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbf6123fad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbf6123fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6123fe50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbf6124c670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbf6124c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbf6123aad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbf6123aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf6123ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf61239020"/>
        <function-ref name="write" scoped="" ref="0x7fbf612391b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf61239340"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf612394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbf6125b2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbf6125b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6125b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbf61254490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbf61254490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61254810"/>
        <function-ref name="write" scoped="" ref="0x7fbf612549a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbf61250480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf61250480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61250800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61250990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbf61248e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbf61248e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61247210"/>
        <function-ref name="write" scoped="" ref="0x7fbf612473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbf6124de50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbf6124de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124c210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbf61247670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbf61247670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612479f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61247b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbf6124f670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbf6124f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbf6125a670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbf6125a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6125a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbf6124fe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf6124fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124e210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf6125dc30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf6125dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6125c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6125c1b0"/>
        <function-ref name="request" scoped="" ref="0x7fbf6125c340"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6125c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6125c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbf61255160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbf61255160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612554e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbf61255e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbf61255e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612541c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbf6123f2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbf6123f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6123f670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbf61240ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbf61240ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61240e50"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbf612576b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf612576b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61257a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbf612402f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf612402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61240670"/>
        <function-ref name="write" scoped="" ref="0x7fbf61240800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbf6123b2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbf6123b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6123b670"/>
        <function-ref name="write" scoped="" ref="0x7fbf6123b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbf61249e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf61249e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61248210"/>
        <function-ref name="write" scoped="" ref="0x7fbf612483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbf61244670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbf61244670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612449f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61244b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbf6125acc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbf6125acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf612590a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbf612599c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbf612599c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61259d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbf6124ce50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbf6124ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124a210"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbf612557b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbf612557b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61255b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbf6124a670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbf6124a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6124a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6124ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbf61242e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbf61242e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61241610"/>
        <function-ref name="write" scoped="" ref="0x7fbf612417a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbf612397a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbf612397a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf61239b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf61239cb0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61239e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf61238020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf612381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fbf6122ddf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fbf6122ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf6122a1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fbf6122a350"/>
        <function-ref name="sfd" scoped="" ref="0x7fbf6122a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf6122a7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf6122a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf6122ab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fbf61229020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fbf61229020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbf612293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbf6122d5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbf6122d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf6122d940"/>
        <function-ref name="stop" scoped="" ref="0x7fbf6122dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fbf61221380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fbf61221380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61221700"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61221890"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61221a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61221bb0"/>
        <function-ref name="get" scoped="" ref="0x7fbf61221d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61220020"/>
        <function-ref name="set" scoped="" ref="0x7fbf612201b0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61220340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fbf6121ab90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fbf6121ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fbf61219020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fbf612191b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fbf61219340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fbf612194d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fbf61219660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fbf612197f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fbf61219980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fbf61219b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fbf61219ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fbf61219e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fbf61218020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fbf612181b0"/>
        <function-ref name="sync" scoped="" ref="0x7fbf61218340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fbf612185d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fbf61218760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fbf612039d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fbf612039d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf61203d50"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf61202020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fbf61218d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fbf61218d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbf61215330"/>
        <function-ref name="clear" scoped="" ref="0x7fbf61215a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fbf61217ba0"/>
        <function-ref name="set" scoped="" ref="0x7fbf61214210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fbf612206b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fbf612206b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf61220a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61220bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf61220d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf6121f020"/>
        <function-ref name="get" scoped="" ref="0x7fbf6121f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf6121f340"/>
        <function-ref name="set" scoped="" ref="0x7fbf6121f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fbf6121f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fbf61213cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf61213cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612120a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61212230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fbf61212590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbf61212590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61212910"/>
        <function-ref name="write" scoped="" ref="0x7fbf61212aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fbf612116d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbf612116d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61211a50"/>
        <function-ref name="write" scoped="" ref="0x7fbf61211be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbf6121b330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf6121b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbf6121b6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbf6121b840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbf6121b9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbf6121bb60"/>
        <function-ref name="getPower" scoped="" ref="0x7fbf6121bcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbf6121be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fbf61224550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fbf61224550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf612248d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fbf61224a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fbf61224bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fbf6121c3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbf6121c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6121c720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fbf61222020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fbf61222020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf612223a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf61222530"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf612226c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf61222850"/>
        <function-ref name="get" scoped="" ref="0x7fbf612229e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf61222b70"/>
        <function-ref name="set" scoped="" ref="0x7fbf61222d00"/>
        <function-ref name="clr" scoped="" ref="0x7fbf61221020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fbf6120f020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf6120f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6120f3a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6120f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61225620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61225620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf612259a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbf6121a1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf6121a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6121a560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbf6121a6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbf6121a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf61223020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf61223020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf612233a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fbf6121e6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fbf6121e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf6121ea60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf6121ebf0"/>
        <function-ref name="request" scoped="" ref="0x7fbf6121ed80"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6121d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6121d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fbf61212e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbf61212e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf612111c0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61211350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fbf6121d530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbf6121d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf6121d8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf6121da40"/>
        <function-ref name="write" scoped="" ref="0x7fbf6121dbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf6121dd60"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf6121c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fbf6120f8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbf6120f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6120fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fbf612237c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fbf612237c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fbf61223b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf6120e150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf6120e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf6120e4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf6120e660"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf6120e7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf6120e980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf6120eb10"/>
        <function-ref name="get" scoped="" ref="0x7fbf6120eca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf6120ee30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf6120d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6120d020"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf6120d1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf6120d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fbf612133e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf612133e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61213760"/>
        <function-ref name="write" scoped="" ref="0x7fbf612138f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fbf61214b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbf61214b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61213020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fbf6121fa50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fbf6121fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf6121fdd0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf6121e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbf6121e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbf6121e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fbf6121cad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf6121cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf6121b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbf61225ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbf61225ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf612240a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61224230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fbf611a2a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf611a2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fbf611a2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fbf611a6670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf611a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbf611a69f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbf611a6b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbf611a6d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbf611a3020"/>
        <function-ref name="getPower" scoped="" ref="0x7fbf611a31b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbf611a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fbf611a1550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbf611a1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbf611a0b00"/>
        <function-ref name="clear" scoped="" ref="0x7fbf6119e2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fbf611a03d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6119e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fbf611a20c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf611a20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbf611a2440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbf611a25d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbf611a2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fbf61199480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbf61199480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61199800"/>
        <function-ref name="isSet" scoped="" ref="0x7fbf61199990"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61199b20"/>
        <function-ref name="set" scoped="" ref="0x7fbf61199cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fbf6119d660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbf6119d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbf6119cce0"/>
        <function-ref name="clear" scoped="" ref="0x7fbf6119a460"/>
        <function-ref name="isValid" scoped="" ref="0x7fbf6119c5b0"/>
        <function-ref name="set" scoped="" ref="0x7fbf6119ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fbf611a36e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fbf611a36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbf611a3a60"/>
        <function-ref name="noAck" scoped="" ref="0x7fbf611a3bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbf611a3d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fbf61193020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fbf61193020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fbf611933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fbf61198d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf61198d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbf611950e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbf61195270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbf61195400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbf61195590"/>
        <function-ref name="getPower" scoped="" ref="0x7fbf61195720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbf611958b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fbf6118a4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf6118a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6118a820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf6118a9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6118ab40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf6118acd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf6118ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fbf61193a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fbf61193a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbf61190020"/>
        <function-ref name="clear" scoped="" ref="0x7fbf61190750"/>
        <function-ref name="isValid" scoped="" ref="0x7fbf611928d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf61190e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fbf61194640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf61194640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbf611949c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbf61194b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbf61194ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fbf6118b8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fbf6118b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf6118bc30"/>
        <function-ref name="isSet" scoped="" ref="0x7fbf6118bdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf6118a020"/>
        <function-ref name="set" scoped="" ref="0x7fbf6118a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fbf611893b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fbf611893b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61187020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fbf611876e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fbf611876e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf611863d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fbf6118faf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fbf6118faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fbf6118c0d0"/>
        <function-ref name="clear" scoped="" ref="0x7fbf6118c800"/>
        <function-ref name="isValid" scoped="" ref="0x7fbf6118e970"/>
        <function-ref name="set" scoped="" ref="0x7fbf6118b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fbf61195c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fbf61195c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbf61194020"/>
        <function-ref name="noAck" scoped="" ref="0x7fbf611941b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbf61194340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fbf61138cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fbf61138cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61137980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fbf61135020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fbf61135020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625caed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7fbf625c9270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fbf61135e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fbf61134800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fbf61134340"/>
        <function-ref name="overflow" scoped="" ref="0x7fbf61134cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf611310b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf611310b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf6112d630"/>
        <function-ref name="fired" scoped="" ref="0x7fbf61130b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf6112e920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf6112e4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf6112c020"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf6112dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf6112e020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf61131ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf6112d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf611301b0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf61130680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fbf6111b620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fbf6111b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111bba0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fbf61126940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fbf61126940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61126cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fbf6111f620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fbf6111f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111f9a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fbf61119060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fbf61119060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf611193e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61119570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fbf61112840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fbf61112840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61112bc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61112d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fbf61119840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fbf61119840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61119bc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61119d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fbf61106c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fbf61106c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61105020"/>
        <function-ref name="write" scoped="" ref="0x7fbf611051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fbf61109c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fbf61109c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61108020"/>
        <function-ref name="write" scoped="" ref="0x7fbf611081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fbf61125cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fbf61125cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf611240a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fbf6110d060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fbf6110d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6110d3e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6110d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fbf6110ac60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fbf6110ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61109020"/>
        <function-ref name="write" scoped="" ref="0x7fbf611091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fbf6111e620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fbf6111e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111e9a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fbf6111d620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fbf6111d620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111d9a0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fbf61113060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fbf61113060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf611133e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61113570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fbf61116840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fbf61116840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61116bc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61116d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fbf61118060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fbf61118060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf611183e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61118570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fbf611272b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fbf611272b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fbf61127630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fbf611277c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fbf61127950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fbf611236b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fbf611236b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61123a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fbf61123d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fbf61123d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf611211c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fbf6110c480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fbf6110c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6110c800"/>
        <function-ref name="write" scoped="" ref="0x7fbf6110c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fbf61121490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fbf61121490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61121810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fbf61109480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fbf61109480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61109800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61109990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fbf611249c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fbf611249c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61124d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fbf6110f840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fbf6110f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6110fbc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6110fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fbf6111ee00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fbf6111ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111d1c0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fbf6111fe00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fbf6111fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111e1c0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fbf611262f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fbf611262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61126670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fbf61110840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fbf61110840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61110bc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61110d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fbf61111060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fbf61111060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf611113e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61111570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fbf6110f060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fbf6110f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6110f3e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6110f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fbf61106480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fbf61106480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61106800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61106990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fbf61108480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fbf61108480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61108800"/>
        <function-ref name="write" scoped="" ref="0x7fbf61108990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fbf61115060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fbf61115060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf611153e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61115570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fbf61111840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fbf61111840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61111bc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61111d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fbf6110a480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fbf6110a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6110a800"/>
        <function-ref name="write" scoped="" ref="0x7fbf6110a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fbf61117060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fbf61117060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf611173e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61117570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fbf61105480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fbf61105480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf61105800"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf61105990"/>
        <function-ref name="write" scoped="" ref="0x7fbf61105b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf61105cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf61105e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fbf61127c20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fbf61127c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61126020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fbf61120e00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fbf61120e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111f1c0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111f350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fbf6111de00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fbf6111de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111b1c0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fbf61113840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fbf61113840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61113bc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61113d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fbf61118840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fbf61118840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61118bc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61118d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fbf61112060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fbf61112060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf611123e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61112570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fbf6111a060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fbf6111a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111a3e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fbf61125020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fbf61125020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf611253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fbf6111a840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fbf6111a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6111abc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf6111ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf61129520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61129520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf611298a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61129a30"/>
        <function-ref name="request" scoped="" ref="0x7fbf61129bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61129d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf61127020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fbf61121ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fbf61121ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61121e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fbf611207b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fbf611207b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf61120b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fbf6110bc60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fbf6110bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6110a020"/>
        <function-ref name="write" scoped="" ref="0x7fbf6110a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fbf6110b480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fbf6110b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6110b800"/>
        <function-ref name="write" scoped="" ref="0x7fbf6110b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fbf61123060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fbf61123060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf611233e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fbf6110cc60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fbf6110cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6110b020"/>
        <function-ref name="write" scoped="" ref="0x7fbf6110b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fbf61108c60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fbf61108c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61106020"/>
        <function-ref name="write" scoped="" ref="0x7fbf611061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fbf61115840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fbf61115840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61115bc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61115d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fbf61110060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fbf61110060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf611103e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61110570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fbf61125670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fbf61125670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf611259f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fbf61124370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fbf61124370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf611246f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fbf61117840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fbf61117840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf61117bc0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61117d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fbf61120160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fbf61120160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fbf611204e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fbf61116060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fbf61116060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf611163e0"/>
        <function-ref name="write" scoped="" ref="0x7fbf61116570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fbf6110d840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fbf6110d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf6110c020"/>
        <function-ref name="write" scoped="" ref="0x7fbf6110c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fbf61104160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fbf61104160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fbf611044e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fbf61104670"/>
        <function-ref name="write" scoped="" ref="0x7fbf61104800"/>
        <function-ref name="beginRead" scoped="" ref="0x7fbf61104990"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf61104b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fbf610dba20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fbf610dba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fbf610dbda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fbf610da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fbf610d8920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fbf610d8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf610db560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf610df990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf610df990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf610dfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fbf610d0a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fbf610d0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fbf610d0da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fbf610cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fbf610d1940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fbf610d1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf610d0560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf610d1080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf610d1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf610d1400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbf610ddaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbf610ddaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf610dde20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf610c2020"/>
        <function-ref name="isState" scoped="" ref="0x7fbf610c21b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf610c2340"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf610c24d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf610c2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbf610b83b0" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbf610b83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf610b8730"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf610b88c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf610b8a50"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf610b8be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf610b8d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf610bb4d0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf610bb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf610bb850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf610bb9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf610bbb70"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf610bbd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf610b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbf610b3110" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbf610b3110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf610b3490"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf610b3620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf610b37b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf610b3940"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf610b3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf610b7d50" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf610b7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf610b4100"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf610b4290"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf610b4420"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf610b45b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf610b4740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fbf610b2be0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fbf610b2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fbf610b1020"/>
        <function-ref name="rand32" scoped="" ref="0x7fbf610b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf610b49c0" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf610b49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf610b4d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbf610b14b0" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf610b14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbf610b1830"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbf610b19c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbf610b1b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fbf610b3d60" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbf610b3d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf610b2180"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf610b2310"/>
        <function-ref name="isState" scoped="" ref="0x7fbf610b24a0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf610b2630"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf610b27c0"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf610b2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbf610b5b00" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbf610b5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf610b5e80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf610a0030"/>
        <function-ref name="isState" scoped="" ref="0x7fbf610a01c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf610a0350"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf610a04e0"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf610a0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbf6109ab80" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbf6109ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61099020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf6109dd00" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf6109dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf6109a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fbf6109a430" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fbf6109a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf6109a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbf61093770" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbf61093770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61093af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf61093020" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf61093020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf610933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf610951e0" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf610951e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61095560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbf61093df0" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf61093df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbf610921c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbf61092350"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbf610924e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fbf610958f0" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fbf610958f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61095c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbf61065200" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbf61065200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61065580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbf61065890" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbf61065890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf61065c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf61065da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf61064020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf610641b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf61064340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf61069c60" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf61069c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf61068020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf610681b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf61068340"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf610684d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf61068660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fbf61067020" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fbf61067020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf610673a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf61067530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf610676c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61067850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf610679e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf61068900" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf61068900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61068c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf61069020" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61069020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf610693a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61069530"/>
        <function-ref name="request" scoped="" ref="0x7fbf610696c0"/>
        <function-ref name="granted" scoped="" ref="0x7fbf61069850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf610699e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fbf61067d50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fbf61067d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61066100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fbf61066440" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fbf61066440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf610667c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf61066950"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf61066ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf61066c70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf61066e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbf6105be20" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbf6105be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf6105a1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6105a350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf6105a4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf6105a670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf6105a800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbf6105ab50" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbf6105ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61059020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fbf6102cdb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fbf6102cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf6102b180"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf6102b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbf610592f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf610592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbf61059670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbf61059800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbf61059990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbf61059b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fbf61059cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbf61059e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fbf6105dbb0" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fbf6105dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf6105c020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6105c1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf6105c340"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf6105c4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf6105c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fbf61058b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fbf61058b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbf61057020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbf610571b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbf61057340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf610574d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbf61058170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf61058170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbf610584f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbf61058680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbf61058810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fbf6105d500" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fbf6105d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf6105d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fbf61060910" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fbf61060910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf61060c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf61060e20"/>
        <function-ref name="request" scoped="" ref="0x7fbf6105f020"/>
        <function-ref name="granted" scoped="" ref="0x7fbf6105f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf6105f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fbf6105f660" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fbf6105f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf6105f9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6105fb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf6105fd00"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf6105d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf6105d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fbf6105c9d0" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fbf6105c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf6105cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fbf6105b0d0" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fbf6105b0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf6105b450"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf6105b5e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf6105b770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf6105b900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf6105ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf6100cdd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf6100cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf6100b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fbf6100b410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fbf6100b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fbf6100b790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fbf6100b920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fbf6100bab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fbf6100bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fbf60fffb80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf60fffb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf60ffe020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf60ffe1b0"/>
        <function-ref name="start" scoped="" ref="0x7fbf60ffe340"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60ffe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbf60ffd860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbf60ffd860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf60ffdbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60ffdd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60ffc020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf60ffc1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf60ffc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbf60ffc690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbf60ffc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf60ffca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf61003ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf61003ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf610000a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf61000230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf610003c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf61000550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf610006e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbf60fff080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf60fff080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbf60fff400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbf60fff590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbf60fff720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbf60fff8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fbf60ffe800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fbf60ffe800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf60ffeb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf60ffed10"/>
        <function-ref name="isState" scoped="" ref="0x7fbf60ffd020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf60ffd1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf60ffd340"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf60ffd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fbf60ffcd90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fbf60ffcd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf60ffb180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf60ffb310"/>
        <function-ref name="start" scoped="" ref="0x7fbf60ffb4a0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60ffb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf61000980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf61000980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf61000d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fbf60ff82d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fbf60ff82d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fbf60ff8650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fbf60ff87e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fbf60ff8970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fbf60ff8b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fbf60ffa580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fbf60ffa580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fbf60ffa900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fbf60ffaa90"/>
        <function-ref name="isState" scoped="" ref="0x7fbf60ffac20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fbf60ffadb0"/>
        <function-ref name="requestState" scoped="" ref="0x7fbf60ff9020"/>
        <function-ref name="forceState" scoped="" ref="0x7fbf60ff91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbf60febd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbf60febd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf60fea180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60fea310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60fea4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf60fea630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf60fea7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fbf60fee350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fbf60fee350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf60fee6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60fee860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60fee9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf60feeb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf60feed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fbf60feb020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fbf60feb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fbf60feb3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fbf60feb530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fbf60feb6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fbf60feb850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fbf60feb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fbf60fe61c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fbf60fe61c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fbf60fe6540"/>
        <function-ref name="noAck" scoped="" ref="0x7fbf60fe66d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fbf60fe6860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fbf60fe9410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fbf60fe9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fbf60fe9790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fbf60fe9920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fbf60fe9ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fbf60fe9c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fbf60fe9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fbf60fc6690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fbf60fc6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf60fc6a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fbf60fc7860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fbf60fc7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf60fc7be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60fc7d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60fc6020"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf60fc61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf60fc6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fbf60fc4610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fbf60fc4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fbf60fc4990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fbf60fc4b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fbf60fc4cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fbf60fc4e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fbf60fc3020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fbf60fc31b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fbf60fc3340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fbf60fc34d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fbf60fc3660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fbf60fc37f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fbf60fc3980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fbf60fc3b10"/>
        <function-ref name="sync" scoped="" ref="0x7fbf60fc3ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fbf60fc2020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fbf60fc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fbf60fc88b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fbf60fc88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbf60fc8c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbf60fc8dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbf60fc7020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbf60fc71b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fbf60fc7340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbf60fc74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fbf60fc9ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fbf60fc9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fbf60fc80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fbf60fc11f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fbf60fc11f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fbf60fc1570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fbf60fc1700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fbf60fc1890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fbf60fc1a20"/>
        <function-ref name="setCca" scoped="" ref="0x7fbf60fc1bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fbf60fc1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fbf60fcaa80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf60fcaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf60fcae00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf60fc9020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60fc91b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60fc9340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf60fc94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fbf60fce020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf60fce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf60fce3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60fce530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60fce6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf60fce850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf60fce9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fbf60fcddf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fbf60fcddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf60fcb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fbf60fc6ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fbf60fc6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fbf60fc50a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fbf60fc5230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fbf60fc53c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fbf60fc5550"/>
        <function-ref name="getPower" scoped="" ref="0x7fbf60fc56e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fbf60fc5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fbf60fc24d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fbf60fc24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fbf60fc2950"/>
        <function-ref name="changed" scoped="" ref="0x7fbf60fc2ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fbf60fc2c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fbf60fc2e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fbf60fc5b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fbf60fc5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60fc4020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fbf60fc41b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fbf60fc4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fbf60fcd210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fbf60fcd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fbf60fcd590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf60fc0d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf60fc0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf60fbe0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf60fbe270"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf60fbe400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf60fbe590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf60fbe720"/>
        <function-ref name="get" scoped="" ref="0x7fbf60fbe8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf60fbea40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf60fbd1b0"/>
        <function-ref name="set" scoped="" ref="0x7fbf60fbebd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf60fbed60"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf60fbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fbf60fcb470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fbf60fcb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fbf60fcb7f0"/>
        <function-ref name="source" scoped="" ref="0x7fbf60fcb980"/>
        <function-ref name="address" scoped="" ref="0x7fbf60fcbb10"/>
        <function-ref name="destination" scoped="" ref="0x7fbf60fcbca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fbf60fcbe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fbf60fca020"/>
        <function-ref name="type" scoped="" ref="0x7fbf60fca1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fbf60fca340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fbf60fca4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fbf60fca660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fbf60fca7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fbf60fc00f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fbf60fc00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fbf60fc0470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fbf60fc0600"/>
        <function-ref name="request" scoped="" ref="0x7fbf60fc0790"/>
        <function-ref name="granted" scoped="" ref="0x7fbf60fc0920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fbf60fc0ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf60f368c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Tea16BitsAmAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf60f368c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf60f32cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60f34320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf60f320d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf60f34c20"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf60f31660"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf60f311e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf60f347a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf60f354e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf60f326e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf60f359b0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60f35e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7fbf60f222f0" loc="17:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fbf60f222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fbf60f22670"/>
        <function-ref name="stopDone" scoped="" ref="0x7fbf60f22800"/>
        <function-ref name="start" scoped="" ref="0x7fbf60f22990"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60f22b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fbf60f2d790" loc="12:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf60f2d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf60f29c40"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60f2a220"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf60f29020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf60f2ab20"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf60f28590"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf60f28110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf60f2a6a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf60f2c3b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf60f29630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf60f2c880"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60f2cd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroBoard" ref="0x7fbf60eed020" loc="27:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7fbf60eed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7fbf60eed3a0"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7fbf60eed530"/>
        <function-ref name="ledOn" scoped="" ref="0x7fbf60eed6c0"/>
        <function-ref name="ledOff" scoped="" ref="0x7fbf60eed850"/>
        <function-ref name="ledToggle" scoped="" ref="0x7fbf60eed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fbf60f2d020" loc="11:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fbf60f2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fbf60f2d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fbf60f22db0" loc="18:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fbf60f22db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf60f21180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fbf60f21310"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60f214a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60f21630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fbf60f217c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fbf60f235d0" loc="16:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fbf60f235d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fbf60f23950"/>
        <function-ref name="getPayload" scoped="" ref="0x7fbf60f23ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fbf60f23c70"/>
        <function-ref name="cancel" scoped="" ref="0x7fbf60f23e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fbf60f22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x7fbf60f252e0" loc="14:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7fbf60f252e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fbf60f24020"/>
        <function-ref name="readDone" scoped="" ref="0x7fbf60f244a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelStdControl" ref="0x7fbf60f136e0" loc="22:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AccelStdControl" scoped="" ref="0x7fbf60f136e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf60f13a60"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60f13bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DMA0" ref="0x7fbf60ef1600" loc="21:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA0" scoped="" ref="0x7fbf60ef1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7fbf60ef1980"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7fbf60ef1b10"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7fbf60ef1ca0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7fbf60ef1e30"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7fbf60f13020"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60f131b0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7fbf60f13340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopSensing" ref="0x7fbf60ec97e0" loc="133:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopSensing" scoped="" ref="0x7fbf60ec97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf60ec9b60"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf60ec9cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf60f289b0" loc="13:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf60f289b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf60f28d30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf60f27020"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf60f271b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf60f27340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf60f274d0"/>
        <function-ref name="get" scoped="" ref="0x7fbf60f27660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf60f277f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf60f27e30"/>
        <function-ref name="set" scoped="" ref="0x7fbf60f27980"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf60f27b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf60f27ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TEA" ref="0x7fbf60f24a40" loc="15:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TEA" scoped="" ref="0x7fbf60f24a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TEA"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x7fbf60f24dc0"/>
        <function-ref name="lsb" scoped="" ref="0x7fbf60f23020"/>
        <function-ref name="msb" scoped="" ref="0x7fbf60f231b0"/>
        <function-ref name="encrypt" scoped="" ref="0x7fbf60f23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroStdControl" ref="0x7fbf60eef060" loc="26:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroStdControl" scoped="" ref="0x7fbf60eef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf60eef3e0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60eef570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSensing" ref="0x7fbf60ecb020" loc="126:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startSensing" scoped="" ref="0x7fbf60ecb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf60ecb3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf60ecb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroInit" ref="0x7fbf60ef0900" loc="25:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroInit" scoped="" ref="0x7fbf60ef0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60ef0c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelInit" ref="0x7fbf60ef0160" loc="24:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AccelInit" scoped="" ref="0x7fbf60ef0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60ef05e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Accel" ref="0x7fbf60eee8e0" loc="23:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7fbf60eee8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7fbf60eeec60"/>
        <function-ref name="wake" scoped="" ref="0x7fbf60eeedf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="shimmerAnalogSetup" ref="0x7fbf60f144c0" loc="20:Tea16BitsAmC.nc">
      <component-ref qname="Tea16BitsAmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7fbf60f144c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7fbf60f14840"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7fbf60f149d0"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7fbf60f14b60"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7fbf60f14cf0"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7fbf60f14e80"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60f20030"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7fbf60f201c0"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7fbf60f20350"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7fbf60f204e0"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7fbf60f20670"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7fbf60f20800"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7fbf60f20990"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fbf60f20b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60ebc7b0" loc="39:../../../tos/platforms/shimmer2r/AccelC.nc">
      <component-ref qname="AccelC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60ebc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60ebcb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Accel" ref="0x7fbf60ebc020" loc="38:../../../tos/platforms/shimmer2r/AccelC.nc">
      <component-ref qname="AccelC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7fbf60ebc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7fbf60ebc3a0"/>
        <function-ref name="wake" scoped="" ref="0x7fbf60ebc530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60ebb610" loc="39:../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <component-ref qname="Mma7361P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60ebb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60ebb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Accel" ref="0x7fbf60ebbcc0" loc="40:../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <component-ref qname="Mma7361P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7fbf60ebbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7fbf60eb80a0"/>
        <function-ref name="wake" scoped="" ref="0x7fbf60eb8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60ebe560" loc="37:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <component-ref qname="shimmerAnalogSetupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60ebe560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60ebe8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="shimmerAnalogSetup" ref="0x7fbf60ebebf0" loc="38:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <component-ref qname="shimmerAnalogSetupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7fbf60ebebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7fbf60eaf020"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7fbf60eaf1b0"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7fbf60eaf340"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7fbf60eaf4d0"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7fbf60eaf660"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60eaf7f0"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7fbf60eaf980"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7fbf60eafb10"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7fbf60eafca0"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7fbf60eafe30"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7fbf60eae020"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7fbf60eae1b0"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fbf60eae340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430DmaControl" ref="0x7fbf60ea4140" loc="45:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430DmaControl" scoped="" ref="0x7fbf60ea4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7fbf60ea44c0"/>
        <function-ref name="init" scoped="" ref="0x7fbf60ea4650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430DmaChannel" ref="0x7fbf60ea4950" loc="46:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430DmaChannel" scoped="" ref="0x7fbf60ea4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7fbf60ea4cd0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7fbf60ea4e60"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7fbf60ea8020"/>
        <function-ref name="startTransfer" scoped="" ref="0x7fbf60ea81b0"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7fbf60ea8340"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60ea84d0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7fbf60ea8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7fbf60ea8910" loc="47:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7fbf60ea8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7fbf60ea8c90"/>
        <function-ref name="getMCtl" scoped="" ref="0x7fbf60ea8e20"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7fbf60ea7020"/>
        <function-ref name="isBusy" scoped="" ref="0x7fbf60ea71b0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7fbf60ea7340"/>
        <function-ref name="getCtl1" scoped="" ref="0x7fbf60ea74d0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7fbf60ea7660"/>
        <function-ref name="startConversion" scoped="" ref="0x7fbf60ea77f0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7fbf60ea7980"/>
        <function-ref name="getMem" scoped="" ref="0x7fbf60ea7b10"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7fbf60ea7ca0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7fbf60ea7e30"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fbf60ea3020"/>
        <function-ref name="enableConversion" scoped="" ref="0x7fbf60ea32b0"/>
        <function-ref name="setCtl1" scoped="" ref="0x7fbf60ea3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60eaab70" loc="42:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60eaab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60ea9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fbf60ea36c0" loc="48:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fbf60ea36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fbf60ea3a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fbf60ea3bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fbf60ea3d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fbf60ea2020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fbf60ea21b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf60ea2340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fbf60ea24d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fbf60ea2b10"/>
        <function-ref name="set" scoped="" ref="0x7fbf60ea2660"/>
        <function-ref name="led0On" scoped="" ref="0x7fbf60ea27f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fbf60ea2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="shimmerAnalogSetup" ref="0x7fbf60eab080" loc="41:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7fbf60eab080"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7fbf60eab400"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7fbf60eab590"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7fbf60eab720"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7fbf60eab8b0"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7fbf60eaba40"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60eabbd0"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7fbf60eabd60"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7fbf60eaa020"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7fbf60eaa1b0"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7fbf60eaa340"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7fbf60eaa4d0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7fbf60eaa660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7fbf60eaa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7fbf60e57d60" loc="51:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel2" scoped="" ref="0x7fbf60e57d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7fbf60e55180"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7fbf60e55310"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7fbf60e554a0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7fbf60e55630"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7fbf60e557c0"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60e55950"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7fbf60e55ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel0" ref="0x7fbf60e59a00" loc="49:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel0" scoped="" ref="0x7fbf60e59a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7fbf60e59d80"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7fbf60e58020"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7fbf60e581b0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7fbf60e58340"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7fbf60e584d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60e58660"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7fbf60e587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf60e59110" loc="48:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf60e59110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7fbf60e59490"/>
        <function-ref name="init" scoped="" ref="0x7fbf60e59620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7fbf60e58bd0" loc="50:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel1" scoped="" ref="0x7fbf60e58bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7fbf60e57020"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7fbf60e571b0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7fbf60e57340"/>
        <function-ref name="startTransfer" scoped="" ref="0x7fbf60e574d0"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7fbf60e57660"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60e577f0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7fbf60e57980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7fbf60e25be0" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel2" scoped="" ref="0x7fbf60e25be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60e24020"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60e241b0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60e24340"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60e244d0"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60e24660"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60e247f0"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60e24980"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60e24b10"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60e24ca0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60e24e30"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60e23020"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60e231b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60e23340"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60e235d0"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60e23760"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60e238f0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60e23a80"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60e23c10"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60e23da0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60e22020"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60e221b0"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60e22340"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60e224d0"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60e22660"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60e227f0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60e22b80"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60e22d10"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60e21020"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60e211b0"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60e21340"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60e214d0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60e21660"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60e217f0"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60e21980"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60e21b10"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60e21ca0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60e21e30"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60e20020"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60e201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel0" ref="0x7fbf60e2c930" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel0" scoped="" ref="0x7fbf60e2c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60e2ccb0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60e2ce40"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60e4f020"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60e4f1b0"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60e4f340"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60e4f4d0"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60e4f660"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60e4f7f0"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60e4f980"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60e4fb10"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60e4fca0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60e4fe30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60e48020"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60e482b0"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60e48440"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60e485d0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60e48760"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60e488f0"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60e48a80"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60e48c10"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60e48da0"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60e2b020"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60e2b1b0"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60e2b340"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60e2b4d0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60e2b860"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60e2b9f0"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60e2bb80"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60e2bd10"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60e2a020"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60e2a1b0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60e2a340"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60e2a4d0"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60e2a660"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60e2a7f0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60e2a980"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60e2ab10"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60e2aca0"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60e2ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf60e49370" loc="41:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf60e49370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7fbf60e504d0"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7fbf60e49880"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7fbf60e49a10"/>
        <function-ref name="setENNMI" scoped="" ref="0x7fbf60e49ba0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60e49d30"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60e50020"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7fbf60e501b0"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60e50340"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7fbf60e496f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7fbf60e29280" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel1" scoped="" ref="0x7fbf60e29280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60e29600"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60e29790"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60e29920"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60e29ab0"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60e29c40"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60e29dd0"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60e28020"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60e281b0"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60e28340"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60e284d0"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60e28660"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60e287f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60e28980"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60e28c10"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60e28da0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60e27020"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60e271b0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60e27340"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60e274d0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60e27660"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60e277f0"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60e27980"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60e27b10"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60e27ca0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60e27e30"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60e26220"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60e263b0"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60e26540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60e266d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60e26860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60e269f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60e26b80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60e26d10"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60e25020"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60e251b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60e25340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60e254d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60e25660"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60e257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DmaControl" ref="0x7fbf60e20e80" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <component-ref qname="HplMsp430DmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DmaControl" scoped="" ref="0x7fbf60e20e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7fbf60e1c020"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7fbf60e1d3b0"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7fbf60e1d540"/>
        <function-ref name="setENNMI" scoped="" ref="0x7fbf60e1d6d0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60e1d860"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60e1d9f0"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7fbf60e1db80"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60e1dd10"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7fbf60e1d220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fbf60e1b0e0" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <component-ref qname="HplMsp430DmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fbf60e1b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf60e1b460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7fbf60d98d00" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7fbf60d98d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60d970a0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60d97230"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60d973c0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60d97550"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60d976e0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d97870"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60d97a00"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60d97b90"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60d97d20"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60d96020"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60d961b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60d96340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60d964d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60d96760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60d968f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60d96a80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60d96c10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60d96da0"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d95020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60d951b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60d95340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60d954d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60d95660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60d957f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60d95980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60d95d10"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60d94020"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60d941b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60d94340"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d944d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60d94660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60d947f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60d94980"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60d94b10"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d94ca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60d94e30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60d93020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60d931b0"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60d93340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7fbf60d93610" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fbf60d93610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf60d93990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7fbf60d8f9b0" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7fbf60d8f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60d8fd30"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60d8e020"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60d8e1b0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60d8e340"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60d8e4d0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d8e660"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60d8e7f0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60d8e980"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60d8eb10"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60d8eca0"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60d8ee30"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60d8d020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60d8d1b0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60d8d440"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60d8d5d0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60d8d760"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60d8d8f0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60d8da80"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d8dc10"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60d8dda0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60d8c020"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60d8c1b0"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60d8c340"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60d8c4d0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60d8c660"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60d8c9f0"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60d8cb80"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60d8cd10"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60d8b020"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d8b1b0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60d8b340"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60d8b4d0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60d8b660"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60d8b7f0"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d8b980"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60d8bb10"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60d8bca0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60d8be30"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60d8a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7fbf60d8a2f0" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fbf60d8a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf60d8a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7fbf60d863f0" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7fbf60d863f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60d86770"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60d86900"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60d86a90"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60d86c20"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60d86db0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d85020"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60d851b0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60d85340"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60d854d0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60d85660"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60d857f0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60d85980"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60d85b10"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60d85da0"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60d84020"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60d841b0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60d84340"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60d844d0"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d84660"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60d847f0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60d84980"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60d84b10"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60d84ca0"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60d84e30"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60d83020"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60d833b0"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60d83540"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60d836d0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60d83860"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d839f0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60d83b80"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60d83d10"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60d82020"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60d821b0"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d82340"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60d824d0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60d82660"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60d827f0"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60d82980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7fbf60d82c50" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fbf60d82c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf60d80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7fbf60d4d020" loc="45:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7fbf60d4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60d4d3a0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60d4d530"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60d4d6c0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60d4d850"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60d4d9e0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d4db70"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60d4dd00"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60d4c020"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60d4c1b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60d4c340"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60d4c4d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60d4c660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60d4c7f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60d4ca80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60d4cc10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60d4cda0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60d4b020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60d4b1b0"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d4b340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60d4b4d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60d4b660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60d4b7f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60d4b980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60d4bb10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60d4bca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60d4a220"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60d4a3b0"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60d4a540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60d4a6d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d4a860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60d4a9f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60d4ab80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60d4ad10"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60d49020"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d491b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60d49340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60d494d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60d49660"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60d497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7fbf60d4e020" loc="44:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7fbf60d4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7fbf60d4e3a0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7fbf60d4e530"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7fbf60d4e6c0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7fbf60d4e850"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7fbf60d4e9e0"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d4eb70"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7fbf60d4ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7fbf60d447a0" loc="45:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7fbf60d447a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60d44b20"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60d44cb0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60d44e40"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60d43020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60d431b0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d43340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60d434d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60d43660"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60d437f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60d43980"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60d43b10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60d43ca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60d43e30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60d42120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60d422b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60d42440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60d425d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60d42760"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d428f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60d42a80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60d42c10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60d42da0"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60d41020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60d411b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60d41340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60d416d0"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60d41860"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60d419f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60d41b80"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d41d10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60d40020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60d401b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60d40340"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60d404d0"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d40660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60d407f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60d40980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60d40b10"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60d40ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7fbf60d457a0" loc="44:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7fbf60d457a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7fbf60d45b20"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7fbf60d45cb0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7fbf60d45e40"/>
        <function-ref name="startTransfer" scoped="" ref="0x7fbf60d44020"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7fbf60d441b0"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d44340"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7fbf60d444d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7fbf60d3cdb0" loc="45:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel2P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7fbf60d3cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60d3b180"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60d3b310"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60d3b4a0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60d3b630"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60d3b7c0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d3b950"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60d3bae0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60d3bc70"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60d3be00"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60d3a020"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60d3a1b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60d3a340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60d3a4d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60d3a760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60d3a8f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60d3aa80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60d3ac10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60d3ada0"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d39020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60d391b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60d39340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60d394d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60d39660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60d397f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60d39980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60d39d10"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60d38020"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60d381b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60d38340"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d384d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60d38660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60d387f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60d38980"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60d38b10"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d38ca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60d38e30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60d37020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60d371b0"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60d37340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7fbf60d3dd80" loc="44:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel2P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7fbf60d3dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7fbf60d3c180"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7fbf60d3c310"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7fbf60d3c4a0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7fbf60d3c630"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7fbf60d3c7c0"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d3c950"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7fbf60d3cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel1" ref="0x7fbf60d2c740" loc="48:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel1" scoped="" ref="0x7fbf60d2c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60d2cac0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60d2cc50"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60d2cde0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60d2b020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60d2b1b0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d2b340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60d2b4d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60d2b660"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60d2b7f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60d2b980"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60d2bb10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60d2bca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60d2be30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60d2a120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60d2a2b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60d2a440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60d2a5d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60d2a760"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d2a8f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60d2aa80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60d2ac10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60d2ada0"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60d29020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60d291b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60d29340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60d296d0"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60d29860"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60d299f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60d29b80"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d29d10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60d28020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60d281b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60d28340"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60d284d0"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d28660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60d287f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60d28980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60d28b10"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60d28ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplControl" ref="0x7fbf60d32970" loc="46:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplControl" scoped="" ref="0x7fbf60d32970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7fbf60d31990"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7fbf60d32e80"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7fbf60d31030"/>
        <function-ref name="setENNMI" scoped="" ref="0x7fbf60d311c0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d31350"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d314e0"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7fbf60d31670"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d31800"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7fbf60d32cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel2" ref="0x7fbf60d270d0" loc="49:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel2" scoped="" ref="0x7fbf60d270d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60d27450"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60d275e0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60d27770"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60d27900"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60d27a90"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d27c20"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60d27db0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60d26020"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60d261b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60d26340"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60d264d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60d26660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60d267f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60d26a80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60d26c10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60d26da0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60d25020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60d251b0"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d25340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60d254d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60d25660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60d257f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60d25980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60d25b10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60d25ca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60d24220"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60d243b0"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60d24540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60d246d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d24860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60d249f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60d24b80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60d24d10"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60d23020"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d231b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60d23340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60d234d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60d23660"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60d237f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fbf60d32060" loc="44:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fbf60d32060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7fbf60d323e0"/>
        <function-ref name="init" scoped="" ref="0x7fbf60d32570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel0" ref="0x7fbf60d31d90" loc="47:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel0" scoped="" ref="0x7fbf60d31d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7fbf60d30180"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7fbf60d30310"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7fbf60d304a0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7fbf60d30630"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7fbf60d307c0"/>
        <function-ref name="getState" scoped="" ref="0x7fbf60d30950"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7fbf60d30ae0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7fbf60d30c70"/>
        <function-ref name="getDestination" scoped="" ref="0x7fbf60d30e00"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7fbf60d2f020"/>
        <function-ref name="aborted" scoped="" ref="0x7fbf60d2f1b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7fbf60d2f340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fbf60d2f4d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7fbf60d2f760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7fbf60d2f8f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7fbf60d2fa80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7fbf60d2fc10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7fbf60d2fda0"/>
        <function-ref name="reset" scoped="" ref="0x7fbf60d2e020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7fbf60d2e1b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7fbf60d2e340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7fbf60d2e4d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7fbf60d2e660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7fbf60d2e7f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7fbf60d2e980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7fbf60d2ed10"/>
        <function-ref name="getSource" scoped="" ref="0x7fbf60d2d020"/>
        <function-ref name="getSize" scoped="" ref="0x7fbf60d2d1b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7fbf60d2d340"/>
        <function-ref name="transferDone" scoped="" ref="0x7fbf60d2d4d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7fbf60d2d660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7fbf60d2d7f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7fbf60d2d980"/>
        <function-ref name="setSize" scoped="" ref="0x7fbf60d2db10"/>
        <function-ref name="setState" scoped="" ref="0x7fbf60d2dca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7fbf60d2de30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7fbf60d2c020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7fbf60d2c1b0"/>
        <function-ref name="setDst" scoped="" ref="0x7fbf60d2c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GyroBoard" ref="0x7fbf60cf7460" loc="42:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7fbf60cf7460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7fbf60cf77e0"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7fbf60cf7970"/>
        <function-ref name="ledOn" scoped="" ref="0x7fbf60cf7b00"/>
        <function-ref name="ledOff" scoped="" ref="0x7fbf60cf7c90"/>
        <function-ref name="ledToggle" scoped="" ref="0x7fbf60cf7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60cfa510" loc="40:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60cfa510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60cfa890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbf60cfab50" loc="41:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbf60cfab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf60cf7020"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60cf71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GyroBoard" ref="0x7fbf60cf25c0" loc="45:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7fbf60cf25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7fbf60cf2940"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7fbf60cf2ad0"/>
        <function-ref name="ledOn" scoped="" ref="0x7fbf60cf2c60"/>
        <function-ref name="ledOff" scoped="" ref="0x7fbf60cf2df0"/>
        <function-ref name="ledToggle" scoped="" ref="0x7fbf60cf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fbf60cf3770" loc="43:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fbf60cf3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fbf60cf3af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="buttonNotify" ref="0x7fbf60cedbd0" loc="48:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="buttonNotify" scoped="" ref="0x7fbf60cedbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60cf6840"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fbf60cf32f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fbf60cf0ce0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf60cf0860"/>
        <function-ref name="notify" scoped="" ref="0x7fbf60cef1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fbf60cf3db0" loc="44:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fbf60cf3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fbf60cf2180"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60cf2310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7fbf60cf4600" loc="51:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <component-ref qname="GyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fbf60cf4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60cf6840"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fbf60cf32f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fbf60cd0690"/>
        <function-ref name="enable" scoped="" ref="0x7fbf60cd0210"/>
        <function-ref name="notify" scoped="" ref="0x7fbf60cd0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7fbf60cccb20" loc="44:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <component-ref qname="HplGyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7fbf60cccb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf60ccb020"/>
        <function-ref name="disable" scoped="" ref="0x7fbf60ccb1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbf60ccb340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbf60ccb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf60ccf960" loc="43:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <component-ref qname="HplGyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf60ccf960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf60ccfce0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf60ccfe70"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf60ccc030"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf60ccc1c0"/>
        <function-ref name="get" scoped="" ref="0x7fbf60ccc350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf60ccc4e0"/>
        <function-ref name="set" scoped="" ref="0x7fbf60ccc670"/>
        <function-ref name="clr" scoped="" ref="0x7fbf60ccc800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fbf60cc7020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplGyroButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fbf60cc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf60cc73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf60cc7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fbf60cc76c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf60cc7850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf60cc79e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fbf60cc7b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf60cc7d00"/>
        <function-ref name="get" scoped="" ref="0x7fbf60cc6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fbf60cc61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fbf60cc6340"/>
        <function-ref name="set" scoped="" ref="0x7fbf60cc64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fbf60cc6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fbf60cc67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fbf60cc6a80"/>
        <function-ref name="clr" scoped="" ref="0x7fbf60cc6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fbf60ccad50" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplGyroButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf60ccad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf60cc8100"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf60cc8290"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf60cc8420"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf60cc85b0"/>
        <function-ref name="get" scoped="" ref="0x7fbf60cc8740"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf60cc88d0"/>
        <function-ref name="set" scoped="" ref="0x7fbf60cc8a60"/>
        <function-ref name="clr" scoped="" ref="0x7fbf60cc8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fbf60cc3de0" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplGyroButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fbf60cc3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fbf60cc2180"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60cc2310"/>
        <function-ref name="disable" scoped="" ref="0x7fbf60cc24a0"/>
        <function-ref name="edge" scoped="" ref="0x7fbf60cc2630"/>
        <function-ref name="enable" scoped="" ref="0x7fbf60cc27c0"/>
        <function-ref name="getValue" scoped="" ref="0x7fbf60cc2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fbf60cc32e0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplGyroButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fbf60cc32e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf60cc3660"/>
        <function-ref name="disable" scoped="" ref="0x7fbf60cc37f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbf60cc3980"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbf60cc3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7fbf60cab2f0" loc="51:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7fbf60cab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf60cab670"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf60cab800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7fbf60cac760" loc="48:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7fbf60cac760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fbf60cacae0"/>
        <function-ref name="disable" scoped="" ref="0x7fbf60cacc70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fbf60cace00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fbf60cab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7fbf60cb0b10" loc="45:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fbf60cb0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fbf60cafbd0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf60caf750"/>
        <function-ref name="notify" scoped="" ref="0x7fbf60cad090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fbf60cad510" loc="47:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fbf60cad510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fbf60cad890"/>
        <function-ref name="isInput" scoped="" ref="0x7fbf60cada20"/>
        <function-ref name="toggle" scoped="" ref="0x7fbf60cadbb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fbf60cadd40"/>
        <function-ref name="get" scoped="" ref="0x7fbf60cac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fbf60cac1b0"/>
        <function-ref name="set" scoped="" ref="0x7fbf60cac340"/>
        <function-ref name="clr" scoped="" ref="0x7fbf60cac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounce" ref="0x7fbf60c98c40" loc="64:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounce" scoped="" ref="0x7fbf60c98c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fbf60c97020"/>
        <function-ref name="runTask" scoped="" ref="0x7fbf60c971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7fbf60ca9af0" loc="45:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7fbf60ca9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60cf6840"/>
            <typename><typedef-ref name="button_state_t" ref="0x7fbf60cf32f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fbf60ca6bd0"/>
        <function-ref name="enable" scoped="" ref="0x7fbf60ca6750"/>
        <function-ref name="notify" scoped="" ref="0x7fbf60ca5090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7fbf60ca5750" loc="47:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7fbf60ca5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7fbf60ca4810"/>
        <function-ref name="enable" scoped="" ref="0x7fbf60ca4390"/>
        <function-ref name="notify" scoped="" ref="0x7fbf60ca4c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounceTimer" ref="0x7fbf60ca23d0" loc="48:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounceTimer" scoped="" ref="0x7fbf60ca23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf60c9e870"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60ca1e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf60ca0c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf60ca0780"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf60c9d1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf60c9ecf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf60ca0300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf60ca1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf60c9e260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf60ca14f0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60ca19c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fbf60c928c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="GyroButtonC.debounceTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fbf60c928c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf625ca720"/>
            <typename><typedef-ref name="TMilli" ref="0x7fbf625caa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fbf60c8ecf0"/>
        <function-ref name="fired" scoped="" ref="0x7fbf60c8f320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fbf60c8e0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fbf60c8fc20"/>
        <function-ref name="getdt" scoped="" ref="0x7fbf60c8d660"/>
        <function-ref name="gett0" scoped="" ref="0x7fbf60c8d1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fbf60c8f7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fbf60c904e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fbf60c8e6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fbf60c909b0"/>
        <function-ref name="stop" scoped="" ref="0x7fbf60c90e80"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fbf62aa5020" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fbf62ab2b80" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fbf62a6a740" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fbf62a6d990" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fbf62a6a020" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fbf62a6d2b0" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fbf62a6c120" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fbf62a6e4d0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fbf62a6ebb0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fbf62a6c840" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fbf62df7020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fbf630b83a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fbf62a19500" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fbf62a19280" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fbf62a269c0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fbf62a625a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fbf62a61020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fbf62a19d70" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fbf62a18c80" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fbf62a1ab00" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fbf62a184f0" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fbf62a1b190" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fbf62a1b920" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fbf62a1a390" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fbf62a625a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fbf62a61020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fbf62a1a110" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fbf62a625a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fbf62a61020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fbf62a0b560" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fbf62a09ca0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fbf62a09a20" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fbf62a089d0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fbf62a08750" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fbf62a09270" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fbf62a0a940" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fbf62a0a020" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fbf62a0bc90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fbf62a14890" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fbf62a112a0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fbf62a11020" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fbf62a11c80" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fbf62a11a00" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fbf62a106a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fbf62a10420" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fbf62a10d90" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fbf62a21120" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fbf62a20a10" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fbf62a20790" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fbf62a21850" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fbf62a25350" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fbf62a20020" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fbf62a24270" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fbf62a239e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fbf62a25ae0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fbf62a24980" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fbf62a232e0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fbf62a23060" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fbf62a1f450" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fbf62a1f1d0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fbf629e21f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fbf62b497f0" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fbf62b46020" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fbf62b49020" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fbf62fd1810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fbf63177020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fbf63176020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fbf63177790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fbf6316b270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fbf6316bac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fbf628cabb0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fbf628ca260" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fbf628ca5e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf628ca910" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fbf628c4620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628c4020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf628c4350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fbf628c36d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fbf628c72a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628c7020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fbf628c67f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628c6210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fbf628c6560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fbf628bf020" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628ccc60" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fbf628be110" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628bfe10" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fbf628ba490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628bbe50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf628ba1c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fbf628bb560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fbf628bd5e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628bd020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf628bd350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fbf628abd30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fbf62ad1930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbf628abab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fbf628b4a10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbf628b4790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fbf628c2e50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fbf628b6950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbf628b66d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fbf628b13a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbf628b2d70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fbf628b1110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fbf628b3e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbf628b3870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fbf628b3bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fbf628ae810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbf628ae590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fbf628acb90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbf628ac5e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fbf628ac900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fbf62ad1550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fbf628b0600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbf628b0380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fbf628a92f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fbf62ad1930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fbf628adcf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fbf628a9060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fbf62ad1930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fbf628a8190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fbf62ad1930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fbf628a5ad0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628a5850" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fbf628a3cd0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628a3a50" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fbf628a1020" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628a4ce0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fbf6289b5e0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf6289b020" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf6289b350" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fbf62896bb0" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf628965b0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf628968e0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fbf62898d20" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fbf62899900" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf62899680" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fbf62897e00" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf62897820" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fbf62897b70" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fbf6282aab0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fbf6282a830" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fbf62828020" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fbf62829d30" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fbf6282ed60" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fbf62829350" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fbf62824410" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
              <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf6282ca80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fbf6282cdd0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf62824130" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="52:../../../tos/platforms/shimmer2r/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fbf6281a270" loc="62:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="59:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fbf6281aa20" loc="68:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="64:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fbf62819270" loc="73:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="70:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fbf628181f0" loc="84:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="80:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fbf62816940" loc="101:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="97:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fbf62815190" loc="117:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="103:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fbf62819a00" loc="78:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="75:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbf62815d00" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="120:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fbf62815a80" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fbf6281ba60" loc="57:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="54:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fbf628189d0" loc="90:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="87:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fbf62816190" loc="95:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="92:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7fbf627ac020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf627ad960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7fbf627adce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7fbf627af020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7fbf627ad020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf627af8b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7fbf627afc20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fbf62791a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fbf6278e270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7fbf6278c070" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7fbf627908e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7fbf627a1b20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7fbf62795020" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7fbf62794c20" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf627949a0" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7fbf627958a0" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7fbf627966d0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf62796450" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7fbf627934b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7fbf62794190" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7fbf6279e0e0" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7fbf6279ea10" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7fbf627a0720" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7fbf627a04a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7fbf6279d5c0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fbf6279d340" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7fbf6279b7a0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7fbf6279a400" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf6279a180" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7fbf62799020" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fbf6279ac50" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fbf62667dd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fbf62667800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf62667b40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7fbf6265fac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fbf6265f840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fbf6265e930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fbf6265e360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf6265e6a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7fbf62660740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7fbf6265d2c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fbf6265c920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf6265cc60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fbf6265d020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7fbf6265f070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fbf62662720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fbf62663db0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf62662130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fbf62662480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fbf6263c5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fbf6263c330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7fbf6263cdf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fbf6263bcf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7fbf6263b700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7fbf6263ba60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7fbf62639b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fbf625e1270" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fbf625e1ba0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fbf625dc070" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fbf62605450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fbf62605870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fbf625e49c0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fbf625e5990" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fbf625e5020" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fbf625e41f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fbf625e3470" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fbf625d5510" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fbf625d8cb0" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fbf625cd2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf625cd020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fbf625ce780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fbf625a4af0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fbf625af790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fbf625bc530" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf62634360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fbf62634ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fbf625bc2b0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf62634360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fbf62634ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fbf625b2870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fbf625baa40" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf6262f2d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fbf6262fb10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fbf625ba7c0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf6262f2d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fbf6262fb10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fbf625a9e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fbf625a5480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fbf625ba020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf62632230"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fbf626329c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fbf625b8270" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf6262f2d0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fbf6262fb10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fbf625b5020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fbf625b6d30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fbf625b6610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fbf625a9740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fbf625bb780" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf62632230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fbf626329c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fbf625bb500" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf62632230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fbf626329c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fbf625b7420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fbf625a85d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fbf625b7e00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fbf625b7b80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fbf625b3910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fbf625b20e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fbf625aa840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fbf625ad790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fbf625b17e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fbf625a9020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fbf625ae020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fbf625a8cf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fbf625b5800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf6263d320"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fbf62636a10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fbf625a74c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fbf625a4350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fbf625b8c10" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fbf625b8990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fbf625a34d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf625a3250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fbf625bcd10" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf62634360"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fbf62634ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fbf625b1020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fbf625ae770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fbf625aa020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fbf62605450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fbf62605870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbf625accf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fbf62605450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fbf62605870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fbf625ac2a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fbf62618420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fbf62618840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbf625ac020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fbf62618420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fbf62618840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fbf625a3d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fbf625a7cb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fbf625b3070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fbf625a5be0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fbf625ad020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fbf625af020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbf6259b410" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbf6259b410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fbf6259b650" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf6259b650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fbf6259a020" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf6259b650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fbf62599120" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fbf6259a8a0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fbf62599880" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fbf62525930" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fbf624e8a50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fbf624e71f0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fbf624e3b10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fbf624e3890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fbf624e92d0" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fbf624e60e0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fbf624e2490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fbf624e7930" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fbf624e82b0" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fbf624e47c0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fbf624e9a70" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbf624eb420" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fbf624e6860" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fbf624e3020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fbf624e4070" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fbf624ebb50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/platforms/shimmer/chips/msp430/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fbf624fc780" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fbf6250fc90" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fbf62502020" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fbf62503ca0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fbf62516390" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fbf624ff7a0" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fbf62507020" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fbf62510da0" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fbf6250db70" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fbf62511d40" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fbf62511ac0" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fbf62513270" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fbf6250b900" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fbf62501020" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fbf624fc020" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fbf62503560" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fbf624f71f0" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fbf624f3880" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fbf62515270" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fbf6250b190" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fbf6250aa90" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fbf62510650" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fbf62518190" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fbf62505d40" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fbf62505ac0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fbf6251b9f0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fbf624ff020" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fbf624fa020" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fbf624f59a0" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fbf624f3120" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fbf624fe790" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fbf624fa750" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fbf625027b0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fbf624f81f0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fbf62515990" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fbf625061f0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fbf624f9630" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fbf624fd790" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fbf62508760" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fbf625084e0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fbf624f4190" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fbf62505390" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fbf624fe020" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fbf62518c10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fbf625f1240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fbf625f1660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbf62518990" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fbf625f1240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fbf625f1660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fbf6250ca00" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fbf62514a80" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fbf62514800" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fbf6250a2a0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf6250a020" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fbf624f89c0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fbf625113b0" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fbf62514120" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fbf62506bb0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fbf62506930" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fbf62516ac0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fbf624fae70" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fbf624fd020" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fbf62501790" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fbf625079f0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fbf62507770" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fbf6250c2b0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fbf6250f530" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fbf624f4900" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fbf62513bf0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fbf62513970" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fbf624f79b0" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fbf6250d420" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fbf624f51f0" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fbf6221f730" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fbf6221fe60" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fbf62221880" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fbf6221ecf0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fbf6221f020" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fbf6221e5b0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbf62224a90" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fbf62221190" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fbf621c4020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fbf621c4880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fbf6218fe00" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fbf6218d020" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fbf6218f570" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fbf6218e6d0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fbf6218d950" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fbf62180020" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fbf62187090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fbf62182d20" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fbf62187090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fbf62183020" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fbf62183b20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fbf62187090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fbf621838a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fbf62187090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fbf62182470" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fbf62187090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fbf62017ad0" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fbf62017ad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fbf62012270" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fbf62017ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fbf62011cb0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fbf62017ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fbf62011a30" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fbf62017ad0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7fbf63b57c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7fbf63b57c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fbf6200ec70" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fbf62017ad0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fbf6200e9f0" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7fbf62014b20" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fbf62013ad0" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fbf62012e50" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fbf62017ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fbf620143b0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fbf620132d0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7fbf61feddd0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7fbf61fedb50" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TEA" loc="1:../../../tos/platforms/shimmer2r/TEA.nc">
      <function command="" provided="0" name="decrypt" ref="0x7fbf61fb05e0" loc="3:../../../tos/platforms/shimmer2r/TEA.nc">
        <interfacedef-ref qname="TEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v0" ref="0x7fbf61fb0020" loc="3:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="v1" ref="0x7fbf61fb0350" loc="3:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lsb" ref="0x7fbf61faf020" loc="4:../../../tos/platforms/shimmer2r/TEA.nc">
        <interfacedef-ref qname="TEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61fb0c60" loc="4:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="msb" ref="0x7fbf61faf920" loc="5:../../../tos/platforms/shimmer2r/TEA.nc">
        <interfacedef-ref qname="TEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61faf6a0" loc="5:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x7fbf61fb2840" loc="2:../../../tos/platforms/shimmer2r/TEA.nc">
        <interfacedef-ref qname="TEA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v0" ref="0x7fbf61fb2280" loc="2:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="v1" ref="0x7fbf61fb25b0" loc="2:../../../tos/platforms/shimmer2r/TEA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fbf61fc5de0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61fc5de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fbf61f936c0" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fbf61f92440" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61fc5de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fbf61f93e40" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fbf61f921b0" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61fc5de0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fbf61f7c5a0" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61f7c5a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fbf61f79020" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fbf61f79d90" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61f7c5a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fbf61f797e0" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fbf61f79b00" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61f7c5a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fbf61f854a0" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61f854a0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7fbf61f82810" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61f854a0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fbf61f83e50" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fbf61f82210" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61f854a0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fbf61f82570" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7fbf61f843e0" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61f854a0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fbf61f85da0" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf61f854a0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7fbf61f84150" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fbf61f83630" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7fbf61f833b0" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fbf61f7fdf0" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fbf61f7f7b0" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7fbf61f7fb60" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7fbf61f5ad20" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fbf61f5ad20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7fbf61f57730" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7fbf61f5ad20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fbf61f3ddf0" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7fbf61f468c0" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbf61f46640" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7fbf61f44de0" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbf61f447e0" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7fbf61f44b50" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7fbf61f3e9c0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbf61f3f700" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fbf61f3e020" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fbf61f3e3a0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fbf61f3e710" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7fbf61f39770" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fbf61f390d0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fbf61f39460" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7fbf61f402d0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbf61f42020" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7fbf61f428c0" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fbf61f42c50" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fbf61f40020" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7fbf61f3cad0" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61f3c850" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fbf61eeace0" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fbf61eea020" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf61f71290"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fbf61f71760"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fbf61eec970" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7fbf61f73640"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7fbf61f74cf0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7fbf61eecd60" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf61f71290"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7fbf61f71760"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7fbf61eeb110" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7fbf61eeb4b0" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fbf61eeb860" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7fbf61eebbd0" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fbf61ee9d40" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fbf61ee9720" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7fbf61ee9ab0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7fbf61ee6780" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7fbf61ee5020" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fbf61eddda0" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fbf61eda6a0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7fbf61ecdac0" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf61f61ce0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7fbf61f607a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7fbf61ecbc30" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf61f71290"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7fbf61f71760"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fbf61ecb9b0" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7fbf61ec7350" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7fbf61ec5550" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7fbf61ec7d50" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7fbf61ec7ad0" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7fbf61ecc350" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf61f5ee20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7fbf61f5d770"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7fbf61ecb130" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf61f71290"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fbf61f71760"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fbf61eccac0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7fbf61ecce80" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fbf61f71290"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7fbf61f71760"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fbf61ec4600" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7fbf61ece760" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf61f61ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fbf61f607a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7fbf61ece4e0" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf61f61ce0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7fbf61f607a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7fbf61ec9750" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fbf61ec94d0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7fbf61ec82a0" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fbf61ec8020" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7fbf61ec8b10" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7fbf61ec5d10" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7fbf61ec4da0" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7fbf61ecd2a0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf61f5ee20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fbf61f5d770"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7fbf61ecd020" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fbf61f5ee20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7fbf61f5d770"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbf61d33020" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbf61d33020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fbf61d2dc50" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fbf61d305b0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fbf61d2e360" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fbf61d2fd60" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fbf61d2e0d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fbf61d2f5b0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fbf61d2bca0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fbf61d2b420" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fbf61d30d90" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fbf61d33b90" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fbf61d33910" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fbf61d2d2f0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fbf61d2ed00" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fbf61d2d060" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fbf61d32680" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fbf61d32400" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fbf61d32e80" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbf61c816d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbf61c816d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fbf61c7d020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fbf61c78070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbf61c78070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fbf61c782b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf61c782b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fbf61c74e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf61c782b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fbf61c77e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fbf61c74460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf61c782b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf61c782b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fbf61c76e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf61c782b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fbf61c741d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf61c782b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fbf61c76640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fbf61c73620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf61c782b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fbf61c78e10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf61c782b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fbf61c78b90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf61c782b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fbf61c77680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fbf619c9b30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fbf619c9b30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fbf619c9d70" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf619c9d70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fbf619c3c00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf619c9d70"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619c3980" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fbf619c2d80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619c2b00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fbf619c59c0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619c5740" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbf619c10c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf619c9d70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619c0a80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fbf619c0de0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fbf619c9d70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fbf619b4030" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619b69e0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fbf619b6d70" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fbf619b32a0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619b3020" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fbf619b61f0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fbf619b77f0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fbf619b7570" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fbf6198d430" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf6198d1b0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fbf6198f720" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf6198f4a0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fbf61992dc0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fbf61992b40" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fbf619922a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fbf61992020" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fbf61990880" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fbf61990600" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fbf6198e5e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf6198e360" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fbf61981e60" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fbf61981850" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fbf61981bd0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fbf6199c0c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbf6199daa0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fbf6199ddf0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fbf619986d0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbf619980d0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fbf61998440" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fbf6199cba0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fbf63b52110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbf6199c920" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fbf61999600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbf61999380" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fbf6199d2a0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbf6199d020" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fbf6199a720" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbf6199a4a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fbf61985630" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619853b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fbf619896f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619890d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fbf61989460" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fbf619865f0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf61986370" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fbf61988af0" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619884d0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fbf61988860" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fbf61984630" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf619843b0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fbf619940b0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf6199edd0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420RxState" loc="41:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <short>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; </short>
        <long>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; @author Steve Ayer&#10; @date   February, 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="enableRx" ref="0x7fbf6196a040" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fbf6196dd90" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x7fbf6196a9c0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fbf6196a740" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fbf6195a900" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbf6195a340" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fbf6195a670" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fbf61958c10" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fbf61954410" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fbf619565e0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fbf61956e20" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf61954170" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fbf61957dc0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fbf619577e0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fbf61957b30" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fbf619583d0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fbf61958150" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fbf61951820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fbf61951020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fbf6194bae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf6194b820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fbf6194b020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fbf62b0c720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fbf62b09090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf6194dbe0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fbf6194ade0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fbf62b09b90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fbf62b07b80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf6194aae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fbf6195f4c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fbf6195d570" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fbf6195ed50" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fbf61964b70" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fbf61961be0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fbf6195fd30" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fbf6195e580" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fbf61961420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fbf61944480" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fbf61946ac0" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fbf61945c90" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fbf61945a10" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fbf61945270" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fbf61948800" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fbf61948580" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fbf619462e0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fbf61946060" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fbf618e2120" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fbf618e4ad0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fbf618e4e20" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fbf618e5a70" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fbf618e5130" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fbf618e6aa0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fbf618e6e80" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fbf618eb4e0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fbf618eb260" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fbf618e4350" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fbf618e7020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fbf618e9d20" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fbf618ea610" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fbf618ea390" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fbf618e1390" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fbf618e62a0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fbf618e6020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fbf618e2b20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fbf618ead90" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fbf619b1670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fbf619b1dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fbf618e95c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fbf618eea60" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fbf618ebc30" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fbf618e77c0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fbf618ba2a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbf62b0e8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf618ba020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fbf618bad80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbf62b0e8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf618bab00" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fbf618d2640" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fbf619b1670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fbf619b1dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fbf618c4af0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fbf618c3ab0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fbf618c3350" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fbf62ad1930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fbf618c42b0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fbf62ad1930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fbf618cab40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fbf62ad1930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fbf618c4020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fbf62ad1d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fbf618b4540" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbf62b0e8d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fbf618bf2c0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbf62b0e8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fbf618c03d0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fbf618c0c40" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbf618bf020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fbf618bea80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbf62b0e8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fbf618bfb90" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fbf618be490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbf618be7e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fbf618c6190" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fbf618c8960" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fbf618c81f0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fbf618cb8d0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fbf617a9ad0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fbf617a8c90" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fbf617a84e0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fbf617a8260" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fbf617a9270" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fbf617532b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fbf61752d50" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fbf61755af0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fbf61752530" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fbf617522b0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fbf61755350" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fbf61753ab0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fbf6163d810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fbf6163c0e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fbf6163c920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fbf61615420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61616e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbf61615190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fbf61610700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61611d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbf61610110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fbf61610460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fbf61611020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbf62b0e8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61612970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbf61612cc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fbf61616020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fbf62b0e8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf616179d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbf61617d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fbf61614b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61614250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fbf616145a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fbf616148f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fbf615f6a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fbf615f60d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fbf615f6460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf615f67a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fbf615f2020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fbf615f42a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fbf615f4630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fbf615f4970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fbf615f4ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fbf615f88f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fbf615f8670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fbf6155f120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fbf62618420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fbf62618840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fbf61566d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61566ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fbf615622a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61562020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fbf61563610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fbf61562d30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fbf61562ab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fbf6142a2b0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fbf61318580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fbf612ea9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fbf612ea020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fbf612ea750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fbf612ec7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fbf612ec020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fbf612efd30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fbf63b51920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fbf613022a0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf61302020" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fbf613032a0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf61303020" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fbf612ff2a0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf612ff020" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fbf613012a0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fbf61301020" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fbf62ac1720"/>
                <typename><typedef-ref name="message_t" ref="0x7fbf62ac0d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fbf610dc5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fbf610dc5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fbf610d82a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fbf610dc5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fbf610d8020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fbf610dc5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GyroBoard" loc="39:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
      <function command="" provided="0" name="autoZero" ref="0x7fbf60ee9560" loc="47:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="buttonPressed" ref="0x7fbf60ee9cc0" loc="50:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOn" ref="0x7fbf60eeb0e0" loc="43:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOff" ref="0x7fbf60eeb790" loc="44:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledToggle" ref="0x7fbf60eebe60" loc="45:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430DmaChannel" loc="41:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
      <function command="" provided="0" name="stopTransfer" ref="0x7fbf60ef37f0" loc="102:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Stop a DMA transfer in progress&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="repeatTransfer" ref="0x7fbf60ef4630" loc="91:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Repeat a DMA transfer using previous settings but new pointers&#10; and transfer size.</short>
          <long>&#10; Repeat a DMA transfer using previous settings but new pointers&#10; and transfer size.  Automatically starts the transfer (sets the&#10; enable bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src_addr" ref="0x7fbf60ef5c20" loc="91:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dst_addr" ref="0x7fbf60ef4020" loc="91:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7fbf60ef4390" loc="92:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setupTransfer" ref="0x7fbf60ef8090" loc="49:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="43:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Setup a transfer using explicit argument (most robust and simple&#10; mechanism and recommended for novice users)&#10;&#10; See MSP430DMA.h for parameter options&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f05a70"/>
              <typename><typedef-ref name="dma_transfer_mode_t" ref="0x7fbf60f03740"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f0e1c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7fbf60f0be00"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f00600"/>
              <typename><typedef-ref name="dma_level_t" ref="0x7fbf60eff090"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f01860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7fbf60f00350"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f01860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7fbf60f00350"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f02700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7fbf60f015d0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f02700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7fbf60f015d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="transfer_mode" ref="0x7fbf60efbc50" loc="49:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f05a70"/>
              <typename><typedef-ref name="dma_transfer_mode_t" ref="0x7fbf60f03740"/></typename>
            </type-tag>
          </variable>
          <variable name="trigger" ref="0x7fbf60efa060" loc="50:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f0e1c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7fbf60f0be00"/></typename>
            </type-tag>
          </variable>
          <variable name="level" ref="0x7fbf60efa3f0" loc="51:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f00600"/>
              <typename><typedef-ref name="dma_level_t" ref="0x7fbf60eff090"/></typename>
            </type-tag>
          </variable>
          <variable name="src_addr" ref="0x7fbf60efa770" loc="52:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dst_addr" ref="0x7fbf60efaaf0" loc="53:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7fbf60efae60" loc="54:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="src_byte" ref="0x7fbf60ef9240" loc="55:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f01860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7fbf60f00350"/></typename>
            </type-tag>
          </variable>
          <variable name="dst_byte" ref="0x7fbf60ef95f0" loc="56:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f01860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7fbf60f00350"/></typename>
            </type-tag>
          </variable>
          <variable name="src_incr" ref="0x7fbf60ef99a0" loc="57:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f02700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7fbf60f015d0"/></typename>
            </type-tag>
          </variable>
          <variable name="dst_incr" ref="0x7fbf60ef9d50" loc="58:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f02700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7fbf60f015d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startTransfer" ref="0x7fbf60ef53e0" loc="84:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="80:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Enable the DMA module.</short>
          <long>&#10; Enable the DMA module.  Equivalent to setting the DMA enable bit.&#10; This function does not force a transfer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setupTransferRaw" ref="0x7fbf60ef6900" loc="77:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="60:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Raw interface for setting up a DMA transfer.</short>
          <long>&#10; Raw interface for setting up a DMA transfer.  This function is&#10; intended to provide as much raw performance as possible but&#10; sacrifices type checking in the process.  Recommended ONLY for&#10; advanced users that have very intricate knowledge of the MSP430&#10; DMA module described in the user's guide.&#10;&#10; @param state The control register value, as specified by &#10;              dma_control_state_t in MSP430DMA.h&#10; @param trigger The trigger for the DMA transfer.  Should be one&#10;                of the options from dma_trigger_t in MSP430DMA.h&#10; @param src Pointer to the source address&#10; @param dest Pointer to the destination address&#10; @param size Size of the DMA transfer&#10;&#10; See MSP430DMA.h for parameter options&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x7fbf60ef88b0" loc="77:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="trigger" ref="0x7fbf60ef8c20" loc="77:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="src" ref="0x7fbf60ef6020" loc="78:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7fbf60ef6350" loc="78:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7fbf60ef6640" loc="78:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transferDone" ref="0x7fbf60ef12a0" loc="107:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="104:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Notification that the transfer has completed&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="success" ref="0x7fbf60ef1020" loc="107:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="softwareTrigger" ref="0x7fbf60ef3020" loc="97:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="94:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Trigger a DMA transfer using software&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mma_Accel" loc="40:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
      <function command="" provided="0" name="setSensitivity" ref="0x7fbf60eee510" loc="54:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
        <documentation loc="49:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
          <short>&#10; Sets the sensitivity (gain) of the sensors.</short>
          <long>&#10; Sets the sensitivity (gain) of the sensors.&#10;&#10; @param sensitivity the sensitivity (gain)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mma_Accel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sensitivity" ref="0x7fbf60eee290" loc="54:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wake" ref="0x7fbf60f12a10" loc="47:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
        <documentation loc="42:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
          <short>&#10; Turns the accelerometer on or off.</short>
          <long>&#10; Turns the accelerometer on or off.&#10;&#10; @param wakeup if &#60;code>TRUE&#60;/code> turns it on; if &#60;code>FALSE&#60;/code> turns it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mma_Accel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="wakeup" ref="0x7fbf60f12790" loc="47:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="shimmerAnalogSetup" loc="43:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
      <function command="" provided="0" name="addAccelInputs" ref="0x7fbf60f1c420" loc="46:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerConversion" ref="0x7fbf60f16270" loc="79:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumberOfChannels" ref="0x7fbf60f14120" loc="83:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addECGInputs" ref="0x7fbf60f1b270" loc="52:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addAnExInput" ref="0x7fbf60f182a0" loc="64:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fbf60f18020" loc="64:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fbf63b51160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fbf60f17120" loc="70:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addEMGInput" ref="0x7fbf60f197e0" loc="61:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addStrainGaugeInputs" ref="0x7fbf60f18a00" loc="67:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addGSRInput" ref="0x7fbf60f190e0" loc="58:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="finishADCSetup" ref="0x7fbf60f17b00" loc="77:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fbf60f17880" loc="77:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addUVInputs" ref="0x7fbf60f1b970" loc="55:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addGyroInputs" ref="0x7fbf60f1cb40" loc="49:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7fbf60f16970" loc="81:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430DmaControl" loc="40:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setFlags" ref="0x7fbf60ea6e70" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
        <interfacedef-ref qname="Msp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable_nmi" ref="0x7fbf60ea6500" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
          <variable name="round_robin" ref="0x7fbf60ea6860" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
          <variable name="on_fetch" ref="0x7fbf60ea6bd0" loc="43:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fbf60ea9db0" loc="41:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
        <interfacedef-ref qname="Msp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaChannel" loc="38:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableDMA" ref="0x7fbf60e3a740" loc="61:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTrigger" ref="0x7fbf60e47c60" loc="40:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstDecrement" ref="0x7fbf60e3f020" loc="51:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLevelSensitive" ref="0x7fbf60e3c780" loc="58:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcIncrement" ref="0x7fbf60e41020" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getState" ref="0x7fbf60e30580" loc="77:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7fbf60eff420"/>
            <typename><typedef-ref name="dma_channel_state_t" ref="0x7fbf60efb2e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordToWord" ref="0x7fbf60e3e020" loc="53:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTrigger" ref="0x7fbf60e47530" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f0e1c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7fbf60f0be00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="trigger" ref="0x7fbf60e472b0" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fbf60f0e1c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7fbf60f0be00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestination" ref="0x7fbf60e2f4f0" loc="79:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedBlockMode" ref="0x7fbf60e431f0" loc="45:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="aborted" ref="0x7fbf60e38950" loc="68:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setByteToByte" ref="0x7fbf60e3d760" loc="56:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fbf60e39020" loc="63:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterrupt" ref="0x7fbf60e39780" loc="64:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="interruptPending" ref="0x7fbf60e38020" loc="66:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fbf6317b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStateRaw" ref="0x7fbf60e32d70" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x7fbf60e33d50" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="trigger" ref="0x7fbf60e32110" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
          <variable name="src" ref="0x7fbf60e32430" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7fbf60e32760" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7fbf60e32ab0" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTrigger" ref="0x7fbf60e2e490" loc="81:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7fbf60f0a200"/>
            <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7fbf60f0ad50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstIncrement" ref="0x7fbf60e3f870" loc="52:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fbf60e2eb80" loc="83:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSingleMode" ref="0x7fbf60e463e0" loc="41:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerDMA" ref="0x7fbf60e370e0" loc="69:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setByteToWord" ref="0x7fbf60e3e760" loc="54:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrc" ref="0x7fbf60e37a30" loc="71:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="saddr" ref="0x7fbf60e377b0" loc="71:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedSingleMode" ref="0x7fbf60e45a00" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcNoIncrement" ref="0x7fbf60e42120" loc="47:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBurstMode" ref="0x7fbf60e45270" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSource" ref="0x7fbf60e30cd0" loc="78:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x7fbf60e2fc50" loc="80:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcDecrement" ref="0x7fbf60e42870" loc="48:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="transferDone" ref="0x7fbf60e2c5d0" loc="85:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="success" ref="0x7fbf60e2c350" loc="85:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableDMA" ref="0x7fbf60e3a020" loc="60:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedBurstMode" ref="0x7fbf60e43970" loc="46:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBlockMode" ref="0x7fbf60e46b10" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSize" ref="0x7fbf60e35d30" loc="73:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sz" ref="0x7fbf60e35ab0" loc="73:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setState" ref="0x7fbf60e33630" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7fbf60eff420"/>
              <typename><typedef-ref name="dma_channel_state_t" ref="0x7fbf60efb2e0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7fbf60f0a200"/>
              <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7fbf60f0ad50"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7fbf60e344b0" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7fbf60eff420"/>
              <typename><typedef-ref name="dma_channel_state_t" ref="0x7fbf60efb2e0"/></typename>
            </type-tag>
          </variable>
          <variable name="t" ref="0x7fbf60e34860" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7fbf60f0a200"/>
              <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7fbf60f0ad50"/></typename>
            </type-tag>
          </variable>
          <variable name="src" ref="0x7fbf60e34b80" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7fbf60e33020" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7fbf60e33370" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fbf63b51520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstNoIncrement" ref="0x7fbf60e41780" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdgeSensitive" ref="0x7fbf60e3c020" loc="57:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordToByte" ref="0x7fbf60e3d020" loc="55:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDst" ref="0x7fbf60e353d0" loc="72:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="daddr" ref="0x7fbf60e35150" loc="72:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaControl" loc="40:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearENNMI" ref="0x7fbf60e4c740" loc="47:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoundRobin" ref="0x7fbf60e4d120" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOnFetch" ref="0x7fbf60e4e9a0" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setENNMI" ref="0x7fbf60e4c020" loc="46:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getState" ref="0x7fbf60e4b890" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7fbf60f08c30"/>
            <typename><typedef-ref name="dma_state_t" ref="0x7fbf60f07e40"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fbf60e49020" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOnFetch" ref="0x7fbf60e4e270" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setState" ref="0x7fbf60e4b110" loc="48:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7fbf60f08c30"/>
              <typename><typedef-ref name="dma_state_t" ref="0x7fbf60f07e40"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7fbf60e4ce30" loc="48:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7fbf60f08c30"/>
              <typename><typedef-ref name="dma_state_t" ref="0x7fbf60f07e40"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRoundRobin" ref="0x7fbf60e4d870" loc="45:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaInterrupt" loc="38:../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fbf60e1cd40" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fbf60cf1a80" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf60cf1a80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7fbf60ceebb0" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fbf60cee390" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fbf63172c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7fbf60ced5f0" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf60cf1a80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fbf60ced370" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fbf60cf1a80"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
