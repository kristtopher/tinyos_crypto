<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="25:TestAMCryptoAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f879b19fdf0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f879abda110"/></to>
    </wire>
    <wire loc="26:../../../tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f879abda110"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f879bf6c500"/></to>
    </wire>
    <wire loc="27:TestAMCryptoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f879b21b080"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f879cd81020"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f879cd81020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f879cbad590"/></to>
    </wire>
    <wire loc="28:TestAMCryptoAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879b21b7f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879b2258c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879b2258c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf7f020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:TestAMCryptoAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879b217a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4f6a70"/></to>
    </wire>
    <wire loc="30:TestAMCryptoAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f879b2142e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f879c295e00"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f879c295e00"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f879a55dbc0"/></to>
    </wire>
    <wire loc="31:TestAMCryptoAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f879b1d42b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f879bcbe430"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:TestAMCryptoAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f879b1d3ae0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879bcbb820"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f879bcbb820"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879bc90760"/></to>
    </wire>
    <wire loc="33:TestAMCryptoAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f879b1d3020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879bcbf400"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f879bcbf400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879bc95880"/></to>
    </wire>
    <wire loc="34:TestAMCryptoAppC.nc">
      <from><interface-ref name="CRYPTO" scoped="" ref="0x7f879b212020"/></from>
      <to><interface-ref name="CRYPTO" scoped="" ref="0x7f879b175de0"/></to>
    </wire>
    <wire loc="6:../../../tos/platforms/shimmer2r/CRYPTOC.nc">
      <from><interface-ref name="CRYPTO" scoped="" ref="0x7f879b175de0"/></from>
      <to><interface-ref name="CRYPTO" scoped="" ref="0x7f879b16e940"/></to>
    </wire>
    <wire loc="37:TestAMCryptoAppC.nc">
      <from><interface-ref name="DMA0" scoped="" ref="0x7f879b1a4600"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7f879adaba00"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel0" scoped="" ref="0x7f879adaba00"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f879aca0020"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879b2fbdd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879b383020"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879b3a79c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879b3c4080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879b514620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879b602820"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879bb1f7e0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a1deca0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879b876020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879bbccdf0"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879bda9bc0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879bf7be50"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a513ca0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879c1c6660"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879c294020"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a5a9c00"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879ca87540"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879c2c0a60"/></to>
    </wire>
    <wire loc="38:TestAMCryptoAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879ae02270"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879ae02270"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879adfc850"/></to>
    </wire>
    <wire loc="39:TestAMCryptoAppC.nc">
      <from><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f879b1c73c0"/></from>
      <to><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f879ae02900"/></to>
    </wire>
    <wire loc="44:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f879ae02900"/></from>
      <to><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f879ae00d00"/></to>
    </wire>
    <wire loc="40:TestAMCryptoAppC.nc">
      <from><interface-ref name="AccelInit" scoped="" ref="0x7f879b1a3160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879ae0f2a0"/></to>
    </wire>
    <wire loc="44:../../../tos/platforms/shimmer2r/AccelC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879ae0f2a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879ae0c0f0"/></to>
    </wire>
    <wire loc="41:TestAMCryptoAppC.nc">
      <from><interface-ref name="Accel" scoped="" ref="0x7f879b1a18e0"/></from>
      <to><interface-ref name="Accel" scoped="" ref="0x7f879aee79c0"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer2r/AccelC.nc">
      <from><interface-ref name="Accel" scoped="" ref="0x7f879aee79c0"/></from>
      <to><interface-ref name="Accel" scoped="" ref="0x7f879ae0c7a0"/></to>
    </wire>
    <wire loc="42:TestAMCryptoAppC.nc">
      <from><interface-ref name="GyroInit" scoped="" ref="0x7f879b1a3900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879ac52510"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879ac52510"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879ac46770"/></to>
    </wire>
    <wire loc="43:TestAMCryptoAppC.nc">
      <from><interface-ref name="GyroStdControl" scoped="" ref="0x7f879b1a2060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f879ac52b50"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f879ac52b50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f879ac46db0"/></to>
    </wire>
    <wire loc="44:TestAMCryptoAppC.nc">
      <from><interface-ref name="GyroBoard" scoped="" ref="0x7f879b19f020"/></from>
      <to><interface-ref name="GyroBoard" scoped="" ref="0x7f879ac4f460"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="GyroBoard" scoped="" ref="0x7f879ac4f460"/></from>
      <to><interface-ref name="GyroBoard" scoped="" ref="0x7f879ac445c0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f879cbadc00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f879d4463a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f879d4463a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f879ce1ec30"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f879cbac6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879cd77480"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879cd77480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879cd732b0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cbacdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f879cd739c0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f879cd71500"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f879cd71500"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879cd43440"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f879cd70120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879cd6a080"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f879cd70800"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879c4cd2e0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879cd43440"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879cd2b3c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f879cd3a9e0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f879cd2ba70"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f879d0c74c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f879cd29cc0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f879cce6a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cc246d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f879ccd4410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cc1cb30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f879ccddd10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cc29160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f879ccc0020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cc03cb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f879cce2020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cc2a480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f879ccc8570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cc03020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f879ccbd020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cbeccb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f879cccfa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cbfd220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f879ccee020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cc7a9d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f879ccc3020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cc122f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f879ccca890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cc13610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f879ccd38c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cc14220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f879ccdcc70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cc227a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f879ccbf020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cbfa2f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f879ccd1020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cc0d6d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f879cce2da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cc23ac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f879ccef7b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc87540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f879ccc73e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cbfb610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f879cced5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cc2b020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f879cccd020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cbf56d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f879ccd8dc0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cc32a90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f879ccc2020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cc0a7a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f879cce3140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cc33de0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f879ccc9700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cc0bac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f879ccbe020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cbf37a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f879ccd05a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cc05b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc803e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f879ccc61f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cbf4ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f879ccc4020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879cc1acb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f879ccc5020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cbec020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f879cccba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f879cc1a020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f879cccc5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879cbeeb30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f879cc85450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc86d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f879cc85aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f879cbe6a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f879cc84120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f879cbe3260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cc31930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc87540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cc2f020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc86d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cc28020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc87540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cc277a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc86d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cc21610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc87540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cc20c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc86d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f879cc7e2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc7fbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f879cc7e940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f879cbe39f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f879cc7d020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f879cbe2240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cc19b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc803e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cc172f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc7fbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cc11160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc803e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cc107a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc7fbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cc09610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc803e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cc08c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc7fbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cc02b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc803e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cc002f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc7fbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cbf9160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc803e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cbf87a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc7fbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cbf2610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc803e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cbf1c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc7fbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879cbeab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879cc803e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f879cbe82f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f879cc7fbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879ce1db70"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f879ce162c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f879d4383b0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f879c2baa20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f879c2e9bf0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f879c2b7440"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f879c2f0020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f879c2f0020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f879aa3d020"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f879c2b60c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879c2f0c30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f879c2f0c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879caf77e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f879c29abe0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f879c2ba1a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f879caf77e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879ca8dd60"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f879c2ef8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f879caf6470"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f879caf6470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f879ca8e6c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f879c2ed020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879caf1b20"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879caf1b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879ca8ca10"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f879aa3dc90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879cb53ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f879aa3c930"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f879caf6470"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f879cb53ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879cb07580"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f879cb06400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f879cafd3f0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f879cafd3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f879cae3300"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f879cb05060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f879caf6470"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f879cb04720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879caf77e0"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f879cb03480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f879cb03c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f879caf83b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879ca87b90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f879ca87b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879ca74c40"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879caf71d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879ca8e0d0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879ca87540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879ca745f0"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879ca812b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879cae4330"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f879ca8b4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879ca83790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f879ca89120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879ca84c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f879ca7c970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f879c307a30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f879ca83790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879c942de0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879ca84c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879c9426c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f879c941c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f879ca7c970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879ca6c760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879ca812b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879c93f920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879ca812b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879c936cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879ca812b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f879c940590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f879ca69530"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f879c940e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f879ca6da40"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f879ca637e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f879c93be00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f879ca5e780"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f879c9100c0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f879c9100c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f879c31a0c0"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f879c92dd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f879c9108d0"/></to>
    </wire>
    <wire loc="45:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f879c9108d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f879c322440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f879ca0c6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f879ca434f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f879ca0fc70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f879ca08a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f879c93d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f879c93d800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f879c90e020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f879c321440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f879c321440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f879c8a4210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f879c322440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f879c8a7b50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c320020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c31a920"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879c319020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879c323020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879c323020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879c8aa320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c323c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a980a90"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a980a90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c4802c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c8a1600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c320020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a971020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c8a5dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f879c8a2370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a981e00"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879a981e00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879c482020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879c89dbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879a97a440"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879a97a440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f879c4844d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c8a5dd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c811e70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f879c8a4210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f879c80e890"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f879c8a7b50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f879c80f790"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879c8aa320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879c8110d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c80c3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c8a1600"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f879c80d5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f879c8a2370"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879c8075b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879c89dbe0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f879c80ca50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879c7fdb60"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879c7fdb60"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f879c7f1360"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879c806020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879c51cd20"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879c51cd20"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f879c517d90"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879c803120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f879c7f5bd0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f879c7ec970"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879c7f66d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f879c7ec020"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f879c7b2860"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f879c6c9cc0"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f879c6c9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c61b100"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f879c7bc800"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f879c6c5cc0"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f879c6c5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c616d10"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f879c7b0800"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f879c6c3cc0"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f879c6c3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c611740"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f879c7ae800"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f879c6bdcc0"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f879c6bdcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c608d10"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f879c7ac800"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f879c6bfcc0"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f879c6bfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c60c100"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f879c7c3bc0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f879c3dc940"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f879c725810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c659740"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f879c711810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c629100"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f879c6c7ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c61b100"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f879c6a2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c590740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f879c70c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c620740"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f879c6f89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5ef460"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f879c6e49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5c0d10"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f879c6d39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c599100"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f879c6aecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5ad740"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f879c69acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c58b100"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f879c71f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c64b740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f879c71b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c642d10"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f879c706810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c611740"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f879c6f29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5e1100"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f879c6dd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5b2d10"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f879c6cd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c58b100"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f879c729810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c663100"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f879c715810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c633d80"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f879c700810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c603740"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f879c6a8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c59e740"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f879c69ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c58b100"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f879c6b5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5c4100"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f879c6fc810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5fae60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f879c6e89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5c9740"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f879c6d79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5a3d10"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f879c6a6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c599100"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f879c6bbcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5d3100"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f879c723810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c654100"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f879c70f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c625d10"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f879c6db9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5ad740"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f879c70a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c61b100"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f879c6f69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5ebe00"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f879c6e29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5bb740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f879c6d19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c595d10"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f879c6b7cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5c9740"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f879c72f800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c693d10"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f879c719810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c63d740"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f879c704810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c60c100"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f879c6f09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5ddd10"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f879c6b3cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c603740"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f879c6accb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5a7100"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f879c6a0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c58b100"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f879c6ec9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5d3100"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f879c6b1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5fe100"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f879c727810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c65ed10"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f879c713810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c62e740"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f879c6fe810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5fe100"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f879c6b9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5cfd10"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f879c6a4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c595d10"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f879c6fa9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5f59f0"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f879c6e69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5c4100"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f879c6d59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c59e740"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f879c721810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c650d10"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f879c6d99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5a7100"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f879c71d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c646100"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f879c708810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c616d10"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f879c6f49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5e6740"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f879c6e09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5b6100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f879c6cf9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c590740"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f879c72b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c668740"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f879c717810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c637100"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f879c702810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c608d10"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f879c6ee9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5d8740"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f879c6c1ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c611740"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f879c6aacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5a3d10"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f879c6ea9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5cfd10"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f879c69ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c590740"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f879c698cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c5b2d10"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f879c6cb9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f879c620740"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f879c517d90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879c50ee50"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879c4fe020"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879c4cd2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879c4f6470"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f879c4f3060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f879c4f7b10"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f879c4f7b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879c4ca020"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f879c4f2340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f879c4d0e70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f879c4d0e70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879c4b6b90"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f879c4ed660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f879c4ce0f0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f879c4ce0f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879c4b1710"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879c4b92f0"/></from>
      <to><interface-ref name="Port40" scoped="" ref="0x7f879c6fc810"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879c4b5de0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f879c6f89a0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879c4b0930"/></from>
      <to><interface-ref name="Port43" scoped="" ref="0x7f879c6f69a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f879a97abe0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f879c4833f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f879a9782b0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f879c3e6d70"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f879c3e6d70"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f879c3dc940"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879a97fa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879c7fdb60"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a97f2b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c480ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c480ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c3ee400"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c47f8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a971020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c4802c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c3ef020"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c3ef020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a5a23a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f879c4844d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f879c47dd60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879c482020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879c3f0210"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879c3f0210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a5a64d0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f879c4833f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f879c46b710"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c3ee400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a5a18b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c3eecd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c47f8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c46abf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c3ee400"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f879c46bd80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879c7f66d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f879c46a5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f879c7f5bd0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879c3ef7a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879a5a2b20"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a5a0210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c3eecd0"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f879a5a09d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f879a5a82b0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f879a59ec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f879c3d3700"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f879c7f1360"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f879c3ce250"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f879c6c9cc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f879c3cc1f0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f879c6c3cc0"/></to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f879c2b0500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f879c294680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f879c29abe0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f879c28d380"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f879cd81020"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f879c28daa0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879caf83b0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f879a55dbc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f879a55aaf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f879a55aaf0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f879a54e690"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f879a54e690"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f879c243ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f879a554d90"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f879a542840"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f879a542840"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f879c240950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f879a5582f0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f879a54a380"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f879a54a380"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f879bdb59f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879a554020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a5449c0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879a5449c0"/></from>
      <to><interface-ref name="ResourceReadNow" scoped="" ref="0x7f879c23e6c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a54c020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879bceca10"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a5460e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879bceca10"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a540130"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879bceca10"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f879c2395c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a54c020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f879c227b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879a539020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879a539020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f879c1cf1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f879c23db20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a53a3a0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879a53a3a0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f879c037d20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a537280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a54c020"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f879c20a5c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f879a538020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f879c1ce960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f879a538910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f879c1cd920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f879c0321d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879c1dccc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f879a528cc0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a537280"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f879c031740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f879a529a40"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f879c1ce960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f879c1c4af0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f879c1cb1d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f879c1c1910"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f879c1cd920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f879c1c3ab0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f879c1cf1d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f879c1c5370"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879c1dccc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879c050520"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879c050520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a510270"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f879c1c0280"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c04fb20"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c04fb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a50f7a0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f879c1b20d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f879c0df020"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f879c1adbe0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f879c6db9a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f879c1aac80"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f879c6d99a0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f879c1a8c80"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f879c6d79a0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f879c1a6c80"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f879c6d59a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f879c1a4c80"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f879c6d39a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f879c1a2c80"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f879c6d19a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f879c1a0c80"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f879c6cf9a0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f879c19ec80"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f879c6cd9a0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f879c1be020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f879ccef7b0"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f879c1b1880"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f879ccee020"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f879c1b0d30"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f879cced5a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f879c1ae120"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f879cce3140"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f879c1aee60"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f879cce2020"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c04f3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a50f020"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a50e0d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c04e570"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f879a50e890"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f879a512330"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f879a50c480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f879c037d20"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f879bfc16f0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f879bfc0ad0"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f879c0321d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f879bfbc920"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f879c031740"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f879bfbe860"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f879c02d240"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f879bfbd540"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f879c02de00"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f879c0292b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879bdf8370"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879bdf8370"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf7f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f879c01b840"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879bdf2d10"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879bdf2d10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf7f020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f879c011d00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879bdeb750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879bdeb750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf7f020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f879c02c9a0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f879c0df020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f879bfb92a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf7f020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf77c30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf77c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879be19150"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879bf7be50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879be95020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f879bf6c500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f879be0b790"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879be95020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a4d9720"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f879be13640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879be682f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879be63850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879be95870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879be95870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a4d21d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879be0aa60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879bef8b70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879bef8b70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879bef1cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879a4d9720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a4bee60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f879a4cdb90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a4d8020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879a4d8020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a4bd720"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879a4cf690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879bef8b70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a4b9910"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a4c4c50"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a4c4c50"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a4b7020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a4c12b0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a4c12b0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a4b6440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a4c05d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a4c05d0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f879ccd4410"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f879cccba20"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f879ccd38c0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB1" scoped="" ref="0x7f879ccca890"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f879ccd1020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f879ccc9700"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f879ccd05a0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f879ccc8570"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f879cccfa50"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f879ccc73e0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f879cccd020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f879ccc61f0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f879cccc5a0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f879ccc5020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f879bed30f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f879c517d90"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f879be5f9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f879be0ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a433280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a5460e0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f879bdb0020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a5460e0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879bdaece0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a437360"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879a437360"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f879c037d20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879bdaf720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879a436020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879a436020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f879c1cf1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f879bdb59f0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f879bd33cb0"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f879bda2580"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879bdb0020"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879bd038f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879bdaece0"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f879bd07bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f879bda89c0"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f879bda5d50"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879bdaf720"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879bda1900"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879bd3a4f0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879bd3a4f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a420020"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7f879bd76020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7f879bd85600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7f879bd7fd50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879bd3bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a427450"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879a427450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a40bca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f879a41a780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a427ca0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879a427ca0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a40a5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879a41c3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879bef8b70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a407710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a410880"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a410880"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a405da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a40e020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a40e020"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a4030c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a40d440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a40d440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f879a434020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f879c1ce960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f879a434910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f879c1cd920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f879c0321d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879c1dccc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f879a3c0120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a433280"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f879c031740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f879a3c3dc0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f879c2395c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a540130"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f879c227b10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879a3b5020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879a3b5020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f879c1cf1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f879c23a020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a3b7280"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879a3b7280"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f879c037d20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a3b3280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a540130"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f879a3b4020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f879c1ce960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f879a3b4910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f879c1cd920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f879c0321d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879c1dccc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f879a3a4cc0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a3b3280"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f879c031740"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f879a3a5a40"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f879bc95880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879bc71b70"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f879bcbe430"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f879bc94980"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f879bc94980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f879b2bd020"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f879bcbb210"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f879bc92900"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f879bc92900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f879b2bbdf0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f879bc90760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f879b2b9a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f879bcb4d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f879b490550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f879b490550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f879b481a80"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f879bca2b20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f879bc84bb0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f879bc84bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f879bc63080"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879bcbd600"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879bc93cb0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879bc93cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879b2bb210"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879bcb9cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879bc8e810"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879bc8e810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879bc65020"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f879bcba5f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f879bc91020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f879bc91020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f879b2ba470"/></to>
    </wire>
    <wire loc="87:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f879bcaee60"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f879b48c660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f879b48c660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f879b47eaf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f879bc71b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879b2eeb80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f879bc7bd40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f879b2b78b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f879bc6fd20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f879b2b8ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f879bc86970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f879bc66140"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f879bc66140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b495670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f879bc63080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f879b2ee080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879bc65020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f879b4926e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f879bc7a020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f879bc63b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f879bc63b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f879b2d9020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879bc83a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879bc659d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879bc659d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879b491a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f879b2ae0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879bc6bd00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f879b2b6860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f879bc68d10"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f879bc68d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f879b356020"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f879b2b5690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f879bc67a90"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f879bc67a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f879b356d50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f879b2b04d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f879b636b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b2b5ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b495670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b495670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b487d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b2b4b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b4910c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b4910c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b483640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f879b2b2610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f879bbd0670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f879bbd0670"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f879bbc81b0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f879b2af1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f879bc5d3b0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f879bc5d3b0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f879bc56ad0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879b2aed30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f879b2eeb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f879b2ebd90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879b491a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879b481020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f879b2d9020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f879b2d7410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f879b356020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f879b34cbb0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f879b2ee080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f879b2e72d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f879bc69820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879b357900"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879b357900"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f879b34c500"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f879b4926e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f879b484c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879bc6bd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b358020"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b358020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b34e910"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f879bc6aa00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879b358c60"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f879b358c60"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f879b34d660"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f879bc68020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f879b355440"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f879b355440"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f879b34a0d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f879b356d50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f879b34b9d0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f879b2ebd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879bc5f460"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f879bc5f460"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f879bc572d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f879b354890"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879b3ae4d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f879b3ae4d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879b3aad50"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f879b3ab3b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879b2dd350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f879b2dd350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f879b2d9d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f879b2d9d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879b2f2ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f879b2f2ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f879b2ec860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f879b2ec860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879bc5e020"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f879bc5e020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879bc57dc0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f879b354200"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879b2ef980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879b2ef980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f879b2eb690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f879b2eb690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879b38cd00"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879b38cd00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879b3841e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f879b389b80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879bc5ecc0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879bc5ecc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879b5187c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f879b5187c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f879b512020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420RxState" scoped="" ref="0x7f879bc59c60"/></from>
      <to><interface-ref name="CC2420RxState" scoped="" ref="0x7f879bc55980"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879bc54310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879bbdf220"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879bbdf220"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879bbc94b0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f879bc4c880"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f879bbdb5b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f879bbdb5b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f879bbc6130"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f879bc52ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f879b60c6c0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f879bc52ba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f879b51b5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f879b51b5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f879b514ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f879b60c6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f879b600020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f879bc43810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f879b609020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f879b609020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f879b6008c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f879bc4a700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f879b609cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f879b609cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f879b5ff650"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f879bc41b00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b495670"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879bc37130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b4910c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f879bc40b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f879b3c9a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f879b3c9a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f879b3c3a20"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f879bc33850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f879b3cbaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f879b3cbaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f879b87b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879bc42470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f879bc2e730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f879bc2f7d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f879bc30890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f879bbcf9b0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f879bbc5500"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f879bbc33a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f879bb1c220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f879bb1c220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f879bb16af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f879bbbe5c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f879bad7cd0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f879bad7cd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879bac9b60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f879bbbd830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f879bad36a0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f879bad36a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879babbd70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f879bbbcb50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f879bad1ce0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f879bad1ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879bab0710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f879bbb55b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f879ba9ac70"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f879ba9ac70"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f879b94ea30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f879bba48f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b6c1e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b6c1e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b8fa4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f879bba3990"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f879b6be7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f879b6be7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f879bba5100"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f879b6bdae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f879b6bdae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f879bba41d0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f879b6bfad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f879b6bfad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879bba5830"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b6bc160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b6bc160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f879bba81d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f879b6b3870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f879b6b3870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f879bba8a80"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f879b6b1880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f879b6b1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f879bbab3c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f879b6b00a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f879b6b00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879bbabc90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b6b8e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b6b8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879bbaa5f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b6b7670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b6b7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f879bbb49a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f879b6a3500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f879b6a3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f879bbb4020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f879b6a4ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f879b6a4ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f879bba7020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b6b4e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b6b4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f879bba78c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f879b6b7e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f879b6b7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f879bba61d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f879b6b6e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f879b6b6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f879bba0560"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b68fa80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b68fa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b8fa4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f879bba16f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b6629e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b6629e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b8fa4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f879bbb2dd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f879b636b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f879bbc1970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f879b635d70"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f879bb95020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f879bb96020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879bb1f7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879bb16260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879bb16260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a37b900"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f879bb16af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a37a180"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879a37b900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a373a10"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879a37a180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a36d5f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879a373a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879a357510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f879a367d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a3722a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f879a3722a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f879a357da0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879a3699b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879bb00080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879bb00080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879bafbcd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a352020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a35c1b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a35c1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a351760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a35b8f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a35b8f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a350a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a35ac10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a35ac10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f879baf70f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f879c517d90"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f879bad5020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879bac4710"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f879bad4390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879babf1d0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f879bb1da70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879bace020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f879bad29b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879bab6b60"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bacd2f0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f879c70f810"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bac8de0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f879c6e49a0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bac3930"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f879c723810"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879babe480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f879c72f800"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bab9020"/></from>
      <to><interface-ref name="Port57" scoped="" ref="0x7f879c6dd9a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bab4de0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f879c729810"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879baaf930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f879c6e09a0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f879ba9a060"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f879ba92760"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f879ba968c0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f879b93da70"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879ba7c2b0"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f879cced5a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f879ba7b5d0"/></from>
      <to><interface-ref name="CaptureA1" scoped="" ref="0x7f879ccddd10"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f879ba7a480"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f879c729810"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879ba70450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879bb00080"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f879ba78410"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f879ba71180"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879ba4d020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879ba67110"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879ba67110"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879ba56430"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="LocalTimeMicro" scoped="" ref="0x7f879ba77620"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f879ba69d30"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f879b94c610"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f879ba33020"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f879ba33020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f879ba20bc0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f879b93c610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f879ba41170"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f879ba41170"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f879ba32d30"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f879ba53910"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f879ba62260"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f879ba62260"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879ba5eae0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f879ba5cc30"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f879ccef7b0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f879ba3e020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f879ba2cbc0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f879ba34020"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f879ba21bc0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f879ba3b020"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f879ba29bc0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f879ba39020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f879ba27bc0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f879ba45060"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f879ba2ec40"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f879ba36020"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f879ba23bc0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f879ba3d020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f879ba2bbc0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f879ba38020"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f879ba25bc0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f879ba3f020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f879ba2dbc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f879ba35060"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f879ba22c40"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f879ba3c020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f879ba2abc0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f879ba3a020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f879ba28bc0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f879ba46100"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f879ba2fc80"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f879ba37020"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f879ba24bc0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f879b6be160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b6b2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f879b6aa0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f879b6b10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f879b69e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f879b6a1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f879b6bd490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f879b6a6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b6a2500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f879b6ac880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f879b6ae0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b6c0a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b8f9350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b8f9350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b8f1660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b6bce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f879b6ba490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b6a5c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f879b6babe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b6a2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f879b6a60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b6b6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b6a80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f879b6aa880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b6a8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f879b69fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f879b6a1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f879b6ae880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f879b6a90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f879b6a3ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f879b6b0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f879b69ece0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f879b6bf480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f879b6b8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b6b4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f879b6ab0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f879b6ab880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b6b20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f879b6b92f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f879b6b8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b6bc7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b6a4500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f879b69f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b6ac0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f879b6a9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f879b6bee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f879b6af0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f879b6b9940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f879b6af880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f879b6a50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f879b69d9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8ef890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8eeba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8eca30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b8fa4d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b8f0510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8eb8b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f879b8deb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f879b880770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f879b880770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f879b87b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f879b8ea060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b85c140"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b85c140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a2469c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f879b8e7c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f879b85cd90"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f879b85cd90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f879a243020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f879b8de2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f879b6e8410"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f879b6e8410"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f879a242120"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879b8e8a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f879b8dbbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f879b87b1d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f879b876b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f879a242120"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f879b848850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f879a243020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f879b849020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879a2469c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b84b430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a244760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a23a2c0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a23a2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f879b72f2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f879b849020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f879b7eca10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f879a243630"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f879b8496a0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f879b8496a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f879b7eb060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879b845a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879a2428c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a234440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b84a6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f879b846690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a23b640"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879a23b640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b730020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879b8442a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879a235c10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879a235c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f879b7311d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b84a6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b7ec250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f879b848850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f879b7ebc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b84b430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b7ed470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879b7e93e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879b845a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f879b7ea5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f879b846690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879b7e3480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879b8442a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f879b7e9a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879b7d9850"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879b7d9850"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f879b7d0020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879b7e3c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f879b7e12f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879b7d43b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f879b7ccdc0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879b7d9020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879b7d3710"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f879b7cb6d0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f879c6b9cc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f879b7c9670"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f879c6b7cc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f879b7c7670"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f879c6b5cc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f879b7c5670"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f879c6b1cc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f879b7c3670"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f879c6b3cc0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879a2392b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879b7d9850"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a23aa60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b72fad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b72fad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b725e80"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b72e8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a234440"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879b72f2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f879b7269e0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f879b7269e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a1da3a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f879b7311d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f879b72c060"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b730020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b727b60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b727b60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879a1db540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b725e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a1d98b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f879b72a060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879b7d43b0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b724770"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b72e8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b72ae50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b725e80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879b7075f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879b725270"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879b725270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879a1dab20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879b71e880"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879b7d9020"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a1d8210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b724770"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f879a1d89d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f879a1dd330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f879a1d5c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879a1a53a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879b71e880"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f879a1a5b00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f879b707020"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879a1a40f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879b7075f0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a1a4d00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b706270"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b682c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f879b68dda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b685b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b680670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f879b679e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f879b680e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f879b66c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f879b66e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f879b68a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f879b674670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b66f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f879b684c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f879b683c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f879b67a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f879b67ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f879b67e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b68e760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b8f9350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b689aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f879b688120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b673a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f879b688870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b66fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b68adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f879b675e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b683480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b684480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f879b68d750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b676e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f879b677670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b675670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f879b66dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f879b66ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f879b67b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f879b677e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f879b670ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f879b67d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f879b66cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f879b68d100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f879b685370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b682480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f879b67ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f879b67ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f879b679670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f879b681670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f879b68c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b681e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f879b687020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f879b687cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f879b6702f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f879b672ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b689450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b6722f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f879b66d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b67be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f879b676670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f879b68caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f879b68a770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f879b67de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f879b687670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f879b67c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f879b674e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f879b66b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b655c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f879b660da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b659b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b653670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f879b64ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f879b653e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f879b63f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f879b6422f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f879b65e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f879b647670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b6432f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f879b658c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f879b657c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f879b64d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f879b650e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f879b652670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b661760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b8f9350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b65daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f879b65b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b646a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f879b65b870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b643ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b65edc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f879b649e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b657480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b658480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f879b660750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b64ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f879b64b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b649670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f879b640ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f879b642ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f879b64e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f879b64be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f879b644ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f879b651670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f879b63fad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f879b660100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f879b659370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b655480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f879b64de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f879b652e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f879b64c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f879b654670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f879b65f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b654e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f879b65a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f879b65acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f879b6442f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f879b645ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b65d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b6452f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f879b6402f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b64ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f879b64a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f879b65faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f879b65e770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f879b651e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f879b65a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f879b650670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f879b647e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f879b63e7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f879b605990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f879b5fe5e0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f879b607150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f879b5fed70"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f879b5fd7f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f879bb1c220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f879b5f1500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f879bb1da70"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f879b5eb820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f879bad7cd0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f879b5e9b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f879bad29b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f879b5f2880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f879ba9a060"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f879b5e7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b54cc30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b54cc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b8fa4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b5e7d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b54b8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b54b8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b8f9350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f879b5e46d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f879b54a2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f879b54a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f879b5e4de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f879b549cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f879b549cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f879b5e3530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f879b547370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f879b547370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b5e3c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b546d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b546d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f879b5e5e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f879b540c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f879b540c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f879b5e6780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f879b5287a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f879b5287a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b5e5550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b52c2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b52c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b5e23e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b541480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b541480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b5e15e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b53ee50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b53ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b5e0020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b53d670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b53d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f879b5e2e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f879b5447b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f879b5447b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f879b5df9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f879b52aad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f879b52aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f879b5e0890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f879b52b2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f879b52b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f879b5df130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f879b52bad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f879b52bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f879b5d9d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f879b51bdf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f879b51bdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f879b513550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b5f9a00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b495670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b5f89a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b4910c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f879b5f77c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f879b490550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f879b5ecb30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f879b488480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f879b488480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f879b47a8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879b5dd6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b53fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f879b549020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b543c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f879b536e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f879b53de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f879b5292f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f879b531670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f879b541c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f879b537670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f879b539e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f879b53b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f879b545370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b530a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f879b545ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b52cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b546060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f879b532e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b540480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f879b54a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b533e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f879b534670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b532670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f879b538670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f879b534e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f879b52dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f879b53a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f879b529ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f879b543490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b53f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f879b537e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f879b53be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f879b536670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f879b53e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f879b549670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f879b544160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f879b544e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f879b52d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f879b52fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b5466b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b52f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f879b52a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b538e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f879b533670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f879b5479c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f879b53ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f879b539670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f879b531e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f879b517020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f879b5127c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879b4fd150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f879b511020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f879bad7cd0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f879b510380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f879bad5020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f879b50f6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f879bad4390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f879b50ea50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f879ba968c0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f879b50d6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b417520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f879b417520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f879b8fa4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f879b50c530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f879b3f4480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f879b3f4480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b50bad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b411060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b411060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f879b50b3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f879b411d00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f879b411d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b50a330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b495670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b5091e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b4910c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f879b507d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f879b490550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f879b509b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f879bbd0670"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b5023e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b409840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b409840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b502cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b408060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b408060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f879b503b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f879b410ae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f879b410ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f879b4ff6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f879b3f5c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f879b3f5c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f879b500590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f879b3f8c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f879b3f8c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f879b500e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f879b3f6480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f879b3f6480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b4fe020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b3f8480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b3f8480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f879b4fe8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f879b416c20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f879b416c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f879b4f19d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f879b424020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f879bb00080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f879b4773b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f879b427cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f879b4766e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f879bf6c500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879b4200b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf7f020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b40a620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f879b415940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b40e620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f879b401840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f879b408840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f879b414cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f879b3fc060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b3f9c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f879b40d620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f879b40b620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f879b402060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f879b404840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f879b407060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b4162b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b8f9350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b4116b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b3fb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f879b410490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b4139c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f879b3fd840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b40de00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b40ee00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f879b4152f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b3ff840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f879b400060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b3fd060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f879b3f5480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f879b403060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f879b400840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f879b3f9480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f879b406060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f879b40fe00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b40be00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f879b402840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f879b407840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f879b401060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f879b409060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f879b414020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f879b40f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f879b3fac60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f879b3fa480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b3fbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f879b3f6c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b403840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f879b3ff060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f879b414670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f879b413370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f879b406840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f879b40f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f879b404060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f879b3fc840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f879b3f3160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f879b3c7920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f879b3c4940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f879b3cd990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f879b3c4080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f879b3a6110"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f879b3ab3b0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f879b3a6d60"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f879b3a8b00"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f879b3a8b00"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f879b87b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f879b3a1be0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f879b3c9a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b3a04b0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b4910c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f879b389430"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f879b3848f0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f879b383770"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f879b389b80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b383df0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b4910c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f879b34ae20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f879b354890"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f879b349b50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f879b354200"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b3482f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b495670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b347170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b4910c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f879b347b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f879b2f9410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f879b31bdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f879b2ed800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f879b2e9580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f879b2e9580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f879b87b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879b2d41c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879bc65020"/></to>
    </wire>
    <wire loc="105:TestAMCryptoC.nc">
      <from><interface-ref name="stopSensing" scoped="" ref="0x7f879b17f6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:TestAMCryptoC.nc">
      <from><interface-ref name="startSensing" scoped="" ref="0x7f879b182020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f879adf95f0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f879c0df020"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Msp430DmaControl" scoped="" ref="0x7f879adf8ce0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879adab110"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f879adab110"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879ac85060"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Msp430DmaChannel" scoped="" ref="0x7f879adfa530"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7f879adaba00"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f879adf6430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f879ada9d60"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f879ac90d80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f879adaabd0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x7f879ac987a0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7f879ac9f020"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7f879ad80930"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel0" scoped="" ref="0x7f879ad80930"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7f879acebd00"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7f879ac977a0"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f879ad7d280"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x7f879ad7d280"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7f879ace19b0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel" scoped="" ref="0x7f879ac8fdb0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f879ad79be0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x7f879ad79be0"/></from>
      <to><interface-ref name="DMA" scoped="" ref="0x7f879acd83f0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplControl" scoped="" ref="0x7f879ac85970"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f879ad9d370"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f879ad9d370"/></from>
      <to><interface-ref name="DmaControl" scoped="" ref="0x7f879ad74e80"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel0" scoped="" ref="0x7f879ac84d90"/></from>
      <to><interface-ref name="Channel0" scoped="" ref="0x7f879ad80930"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel1" scoped="" ref="0x7f879ac7e740"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x7f879ad7d280"/></to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <from><interface-ref name="HplChannel2" scoped="" ref="0x7f879ac790d0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x7f879ad79be0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7f879ace6610"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f879ad6e0e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7f879acdc2f0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f879ad6e0e0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x7f879acd4c50"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f879ad6e0e0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <from><interface-ref name="buttonNotify" scoped="" ref="0x7f879ac3fbd0"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f879ac47600"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x7f879ac47600"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f879abfcaf0"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f879abff760"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x7f879ac1eb20"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x7f879ac1eb20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f879ac162e0"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f879ac00510"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879ac21960"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f879ac21960"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f879ac1cd50"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="NotifyLower" scoped="" ref="0x7f879abf7750"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x7f879ac02b10"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <from><interface-ref name="debounceTimer" scoped="" ref="0x7f879abf53d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f879abe48c0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f879abe48c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf7f020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879ac1a020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f879c727810"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f879ac16de0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f879ba3f020"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <from><interface-ref name="sendEvent" scoped="" ref="0x7f879abfe2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <from><interface-ref name="debounce" scoped="" ref="0x7f879abeac40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="38:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart0P.UartP" loc="41(Msp430Uart0P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.2 $ $Date: 2010/07/29 13:19:06 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="46:../../../tos/platforms/shimmer2r/LedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="45:../../../tos/platforms/shimmer2r/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/platforms/shimmer2r/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="41:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="39(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2013/04/09 14:28:58 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ShimmerSerialP" loc="35:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor" loc="49(TestAMCryptoAppC.Sensor):../../../tos/platforms/shimmer/DemoSensorC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor" loc="43(TestAMCryptoAppC.Sensor.DemoSensor):../../../tos/platforms/shimmer/VoltageC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC" loc="43(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC):../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalVoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC" loc="47(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient" loc="43(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.2 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC" loc="47(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient" loc="43(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalVoltageP" loc="34:../../../tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <module/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC" loc="47(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC):../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient" loc="43(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="56:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <documentation loc="48:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the SHIMMER platform.</short>
        <long>&#10; The Active Message layer on the SHIMMER platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-07-26 17:51:39 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2012-03-02 16:52:48 $&#10;&#10; mods to provide CC2420RxState interface, which allows application &#10; to disable radio reception and/or cca for manual control of high-density&#10; synchronization routines&#10; @author Steve Ayer&#10; @date   March, 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10; @date May 14, 2008&#10;&#10; @author Steve Ayer&#10; @date April, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="44(HplCC2420InterruptsC.CaptureSFDC):../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterToLocalTimeC" loc="46(HplCC2420InterruptsC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="41:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <documentation loc="33:../../../tos/platforms/shimmer/CounterMicro32C.nc">
        <short>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.</short>
        <long>&#10; CounterMicro32C provides at 32-bit counter at 1024000 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform" loc="54(CounterMicro32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.CounterMicroToLocalTime" loc="46(HplCC2420InterruptsC.CounterMicroToLocalTime):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="45(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma1P.SpiP" loc="73(Msp430SpiNoDma1P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="40(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestAMCryptoAppC.TimerMilliC" loc="44(TestAMCryptoAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAMCryptoC" loc="9:TestAMCryptoC.nc" safe="">
      <documentation loc="33:../../../tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CRYPTOC" loc="1:../../../tos/platforms/shimmer2r/CRYPTOC.nc">
      <configuration/>
    </component>
    <component qname="CRYPTOP" loc="3:../../../tos/platforms/shimmer2r/CRYPTOP.nc" safe="">
      <module/>
    </component>
    <component qname="AccelC" loc="36:../../../tos/platforms/shimmer2r/AccelC.nc">
      <configuration/>
    </component>
    <component qname="Mma7361P" loc="37:../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <module/>
    </component>
    <component qname="shimmerAnalogSetupC" loc="35:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <configuration/>
    </component>
    <component qname="shimmerAnalogSetupP" loc="39:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <module/>
    </component>
    <component qname="Msp430DmaC" loc="46:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
        <short>&#10; Implementation of the HAL level component for the MSP430 DMA module.</short>
        <long>&#10; Implementation of the HAL level component for the MSP430 DMA module.&#10; This configuration provides the available DMA channels through the&#10; MSP430DMA parameterized interface.  If more channels are requested&#10; than available through unique(&#34;DMA&#34;), there will be no mapping for&#10; that channel and compilation will fail.&#10;&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430DmaC" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430DmaP" loc="41:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma0" loc="42(HplMsp430DmaC.Dma0):../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:480">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:482">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:484">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:486">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:15">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma1" loc="42(HplMsp430DmaC.Dma1):../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:488">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:490">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:492">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:494">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:240">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430DmaC.Dma2" loc="42(HplMsp430DmaC.Dma2):../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430DmaXP"/>
        <arguments>
          <value cst="I:496">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:498">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:500">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:502">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3840">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel0P" loc="42(Msp430DmaC.Channel0P):../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel1P" loc="42(Msp430DmaC.Channel1P):../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaC.Channel2P" loc="42(Msp430DmaC.Channel2P):../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430DmaChannelP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430DmaControlP" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GyroBoardC" loc="38:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <configuration/>
    </component>
    <component qname="GyroBoardP" loc="41:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <module/>
    </component>
    <component qname="GyroButtonC" loc="50:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplGyroButtonC" loc="42:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
        <short>&#10; Implementation of the user button for the telos platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telos platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $&#10; (not much to) port to shimmer2 gyro&#10; @author Steve Ayer&#10; @date March, 2010&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplGyroButtonC.UserButtonC" loc="42(HplGyroButtonC.UserButtonC):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplGyroButtonC.InterruptUserButtonC" loc="43(HplGyroButtonC.InterruptUserButtonC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="GyroButtonC.SwitchToggleC" loc="44(GyroButtonC.SwitchToggleC):../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SwitchToggleC"/>
      </instance>
      <module/>
    </component>
    <component qname="GyroButtonP" loc="44:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GyroButtonC.debounceTimer" loc="44(GyroButtonC.debounceTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:../../../tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:../../../tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f879ccb9970" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f879ccb9d10" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f879ccb8110" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f879ccb8490" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f879ccb8810" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f879ccb8b80" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f879ccb7020" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f879ccb73b0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f879ccb7780" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f879cc7ce70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f879cc78270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f879cb9d3c0" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f879cb6f0d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f879cb4c0d0" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart0C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f879c692190" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f879c692540" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f879c6928f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f879c692ca0" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f879c691060" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f879c50fe60" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f879c50fe60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f879c4655b0" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f879c4575b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f879c43ed80" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f879c2ea490" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f879c2ea490"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f879c2ea810" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="49:../../../tos/platforms/shimmer/DemoSensorC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer/DemoSensorC.nc">
        <short> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value.</short>
        <long> &#10; DemoSensorC is a generic sensor device that provides a 16-bit&#10; value. The platform author chooses which sensor actually sits&#10; behind DemoSensorC, and though it's probably Voltage, Light, or&#10; Temperature, there are no guarantees.&#10;&#10; This particular DemoSensorC on the telosb platform provides a&#10; voltage reading, using VoltageC. &#10;&#10; To convert from ADC counts to actual voltage, divide this reading&#10; by 4096 and multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10; &#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VoltageC" loc="43:../../../tos/platforms/shimmer/VoltageC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer/VoltageC.nc">
        <short>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.</short>
        <long>&#10; VoltageC is a common name for the Msp430InternalVoltageC voltage&#10; sensor available on the telosb platform.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-05-21 22:07:24 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430InternalVoltageC" loc="43:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f879c0a8850" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f879c0a03b0" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f879bf293b0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f879bf293b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f879bef06b0" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f879bef06b0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f879bef0e80" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f879bef0e80"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f879beee290" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f879beee290"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f879beeea70" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f879beeea70"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f879beeee40" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f879beed670" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f879beed670"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f879bef66d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f879bef66d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f879becc020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f879becc020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f879becc410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f879becc410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f879beccbf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f879beccbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f879beca020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879be90cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879be90cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879be5a230" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879be5a230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f879be5a560" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879be0cdd0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879be0cdd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7f879bd323b0" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7f879bd32700" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879bd32700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-10 18:22:02 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="CC2420GpioCaptureC" loc="44:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Steve Ayer/Miklos Maroti&#10; @date   February, 2011&#10;&#10; re-named indicating that this HAL module is specifically required to handle anomalies in the &#10; cc2420 stack that require sfd capture to happen on a timerb pin;  designs that use a timera pin &#10; need this code to resolve the aliasing between timestamps from 32khz and 1mhz timers.&#10; thanks to miklos for providing this re-written captured event handler as a straight-forward work-around!&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="39:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; Ported to the SHIMMER platform.</short>
        <long>&#10; Ported to the SHIMMER platform. &#10;&#10; @author Konrad Lorincz&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi1C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430DmaXP" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre &#60;info@moteiv.com>&#10; @author Mark Hays&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="DMAxCTL_addr" ref="0x7f879ad72c40" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxSA_addr" ref="0x7f879ad57020" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxDA_addr" ref="0x7f879ad573d0" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxSZ_addr" ref="0x7f879ad57780" loc="45:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxTSEL_mask" ref="0x7f879ad57b50" loc="46:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
        <constant name="DMAxTSEL_shift" ref="0x7f879ad56020" loc="47:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
          <component-ref qname="HplMsp430DmaXP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430DmaChannelP" loc="42:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc" abstract="">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SwitchToggleC" loc="44:../../../tos/platforms/shimmer/SwitchToggleC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/shimmer/UserButton.h">
        <short>&#10; Implementation of the user button for the telosb platform&#10;&#10; </short>
        <long>&#10; Implementation of the user button for the telosb platform&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f879cd754d0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cd754d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd75850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f879cd81020" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f879cd81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f879cd813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879cd77480" loc="40:../../../tos/platforms/shimmer2r/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879cd77480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd77800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f879cd70120" loc="6:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f879cd70120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd704a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879cd732b0" loc="4:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879cd732b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd73630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f879cd739c0" loc="5:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f879cd739c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd73d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f879cd70800" loc="7:../../../tos/platforms/shimmer2r/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f879cd70800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd70b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879cd6a080" loc="39:../../../tos/platforms/shimmer2r/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879cd6a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd6a400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f879cd71500" loc="39:../../../tos/platforms/shimmer2r/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f879cd71500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd71880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f879cd3a9e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f879cd3a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f879cd40980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f879cd40020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f879cd401b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f879cd40340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f879cd3ad60"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f879cd404d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f879cd40660"/>
        <function-ref name="initClocks" scoped="" ref="0x7f879cd407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879cd43440" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879cd43440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd437c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f879cd2ba70" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f879cd2ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f879cd29980"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f879cd29020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f879cd291b0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f879cd29340"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f879cd2bdf0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f879cd294d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f879cd29660"/>
        <function-ref name="initClocks" scoped="" ref="0x7f879cd297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f879cd29cc0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f879cd29cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f879cd280a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879cd2b3c0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879cd2b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cd2b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f879cce6a50" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f879cce6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cce6dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cce5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cce51b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cce5340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cce54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cce5660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cce57f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cce5980"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cce5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f879ccd4410" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f879ccd4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879ccd4790"/>
        <function-ref name="getControl" scoped="" ref="0x7f879ccd4920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccd4ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879ccd4c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879ccd4dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879ccd3020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879ccd31b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879ccd3340"/>
        <function-ref name="setControl" scoped="" ref="0x7f879ccd34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f879ccddd10" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f879ccddd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccdc0e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccdc270"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccdc400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccdc590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccdc720"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccdc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f879ccc0020" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f879ccc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccc03a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccc0530"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccc06c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccc0850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccc09e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccc0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f879cce2020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f879cce2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cce23a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cce2530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cce26c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cce2850"/>
        <function-ref name="fired" scoped="" ref="0x7f879cce29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f879ccc8570" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f879ccc8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccc88f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879ccc8a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879ccc8c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879ccc8da0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ccc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f879ccbd020" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f879ccbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccbd3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccbd530"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccbd6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccbd850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccbd9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccbdb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f879cccfa50" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f879cccfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cccfdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879ccce020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccce1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879ccce340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879ccce4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879ccce660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879ccce7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879ccce980"/>
        <function-ref name="setControl" scoped="" ref="0x7f879ccceb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f879ccee020" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f879ccee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879ccee3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879ccee530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccee6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879ccee850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879ccee9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cceeb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cceed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cced020"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cced1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f879ccc3020" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f879ccc3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccc33a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccc3530"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccc36c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccc3850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccc39e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccc3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f879ccca890" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f879ccca890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cccac10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cccada0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879ccc9020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879ccc91b0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ccc9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f879ccd38c0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f879ccd38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879ccd3d40"/>
        <function-ref name="getControl" scoped="" ref="0x7f879ccd2020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccd21b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879ccd2340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879ccd24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879ccd2660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879ccd27f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879ccd2980"/>
        <function-ref name="setControl" scoped="" ref="0x7f879ccd2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f879ccdcc70" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f879ccdcc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccd6020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccd61b0"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccd6340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccd64d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccd6660"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccd67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f879ccbf020" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f879ccbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccbf3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccbf530"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccbf6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccbf850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccbf9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccbfb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f879ccd1020" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f879ccd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879ccd13a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879ccd1530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccd16c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879ccd1850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879ccd19e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879ccd1b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879ccd1d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879ccd0020"/>
        <function-ref name="setControl" scoped="" ref="0x7f879ccd01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f879cce2da0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f879cce2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccde180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879ccde310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879ccde4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879ccde630"/>
        <function-ref name="fired" scoped="" ref="0x7f879ccde7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f879ccef7b0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f879ccef7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ccefb30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879ccefcc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccefe50"/>
        <function-ref name="get" scoped="" ref="0x7f879ccf7020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879ccf71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccf7340"/>
        <function-ref name="getMode" scoped="" ref="0x7f879ccf74d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccf7660"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ccf77f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879ccf7980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879ccf7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f879ccc73e0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f879ccc73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccc7760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879ccc78f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879ccc7a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879ccc7c10"/>
        <function-ref name="fired" scoped="" ref="0x7f879ccc7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f879cced5a0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f879cced5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cced920"/>
        <function-ref name="getControl" scoped="" ref="0x7f879ccedab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccedc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cceddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cce6020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cce61b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cce6340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cce64d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cce6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f879cccd020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f879cccd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cccd3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cccd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cccd6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cccd850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cccd9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cccdb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cccdd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cccc020"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cccc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f879ccd8dc0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f879ccd8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccdd180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccdd310"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccdd4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccdd630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccdd7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccdd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f879ccc2020" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f879ccc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccc23a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccc2530"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccc26c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccc2850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccc29e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccc2b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f879cce3140" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f879cce3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cce34c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cce3650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cce37e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cce3970"/>
        <function-ref name="fired" scoped="" ref="0x7f879cce3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f879ccc9700" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f879ccc9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccc9a80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879ccc9c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879ccc9da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879ccc8020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ccc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f879ccbe020" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f879ccbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccbe3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccbe530"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccbe6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccbe850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccbe9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccbeb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f879ccd05a0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f879ccd05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879ccd0920"/>
        <function-ref name="getControl" scoped="" ref="0x7f879ccd0ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccd0c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879ccd0dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cccf020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cccf1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cccf340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cccf4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cccf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f879ccd6b70" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f879ccd6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ccd5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879ccd51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccd5340"/>
        <function-ref name="get" scoped="" ref="0x7f879ccd54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879ccd5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccd57f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879ccd5980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccd5b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ccd5ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879ccd5e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879ccd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f879ccc61f0" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f879ccc61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccc6570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879ccc6700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879ccc6890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879ccc6a20"/>
        <function-ref name="fired" scoped="" ref="0x7f879ccc6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f879ccc4020" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f879ccc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccc43a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ccc4530"/>
        <function-ref name="captured" scoped="" ref="0x7f879ccc46c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ccc4850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ccc49e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ccc4b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f879ccc5020" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f879ccc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ccc55a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879ccc5730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879ccc58c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879ccc5a50"/>
        <function-ref name="fired" scoped="" ref="0x7f879ccc5be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f879cccba20" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f879cccba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cccbda0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879ccca020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879ccca1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879ccca340"/>
        <function-ref name="fired" scoped="" ref="0x7f879ccca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f879cccc5a0" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f879cccc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cccc920"/>
        <function-ref name="getControl" scoped="" ref="0x7f879ccccab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ccccc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879ccccdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cccb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cccb1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cccb340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cccb4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cccb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f879cc85aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f879cc85aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc85e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f879cc85450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f879cc85450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc857d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f879cc84120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f879cc84120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc844a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f879cc86d80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cc86d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc85180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879cc87540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cc87540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cc878c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cc87a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc87be0"/>
        <function-ref name="get" scoped="" ref="0x7f879cc87d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc86020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc861b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cc86340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc864d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cc86660"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cc867f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cc86980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f879cc7e940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f879cc7e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc7ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f879cc7e2f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f879cc7e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc7e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f879cc7d020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f879cc7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f879cc7fbf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cc7fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879cc803e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cc803e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cc80760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cc808f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc80a80"/>
        <function-ref name="get" scoped="" ref="0x7f879cc80c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc80da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc7f020"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cc7f1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc7f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cc7f4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cc7f660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cc7f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cc32a90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cc32a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc32e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cc31020"/>
        <function-ref name="captured" scoped="" ref="0x7f879cc311b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc31340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc314d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cc31660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cc7a9d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cc7a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cc7ad50"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cc33020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc331b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cc33340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cc334d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc33660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cc337f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cc33980"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cc33b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cc2f020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cc2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc2f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cc33de0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cc33de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc32180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cc32310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cc324a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cc32630"/>
        <function-ref name="fired" scoped="" ref="0x7f879cc327c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cc31930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cc31930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cc31cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cc31e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc30020"/>
        <function-ref name="get" scoped="" ref="0x7f879cc301b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc30340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc304d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cc30660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc307f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cc30980"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cc30b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cc30ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cc29160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cc29160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc294e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cc29670"/>
        <function-ref name="captured" scoped="" ref="0x7f879cc29800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc29990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc29b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cc29cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cc2b020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cc2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cc2b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cc2b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc2b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cc2b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cc2b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc2bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cc2bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cc2a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cc2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cc277a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cc277a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc27b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cc2a480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cc2a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc2a800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cc2a990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cc2ab20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cc2acb0"/>
        <function-ref name="fired" scoped="" ref="0x7f879cc2ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cc28020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cc28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cc283a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cc28530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc286c0"/>
        <function-ref name="get" scoped="" ref="0x7f879cc28850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc289e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc28b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cc28d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc27020"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cc271b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cc27340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cc274d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cc227a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cc227a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc22b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cc22cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f879cc22e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc21020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc211b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cc21340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cc246d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cc246d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cc24a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cc24be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc24d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cc23020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cc231b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc23340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cc234d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cc23660"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cc237f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cc20c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cc20c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cc23ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cc23ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc23e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cc22020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cc221b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cc22340"/>
        <function-ref name="fired" scoped="" ref="0x7f879cc224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cc21610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cc21610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cc21990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cc21b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc21cb0"/>
        <function-ref name="get" scoped="" ref="0x7f879cc21e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc20020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc201b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cc20340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc204d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cc20660"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cc207f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cc20980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cc1acb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cc1acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc190a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cc19230"/>
        <function-ref name="captured" scoped="" ref="0x7f879cc193c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc19550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc196e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cc19870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cc1cb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cc1cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cc1b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cc1b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc1b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cc1b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cc1b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc1b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cc1b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cc1bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cc1bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cc172f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cc172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc17670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cc1a020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cc1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc1a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cc1a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cc1a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cc1a850"/>
        <function-ref name="fired" scoped="" ref="0x7f879cc1a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cc19b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cc19b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cc18020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cc181b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc18340"/>
        <function-ref name="get" scoped="" ref="0x7f879cc184d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc18660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc187f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cc18980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc18b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cc18ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cc18e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cc17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cc122f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cc122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc12670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cc12800"/>
        <function-ref name="captured" scoped="" ref="0x7f879cc12990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc12b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc12cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cc12e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cc14220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cc14220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cc145a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cc14730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc148c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cc14a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cc14be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc14d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cc13020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cc131b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cc13340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cc107a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cc107a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc10b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cc13610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cc13610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc13990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cc13b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cc13cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cc13e40"/>
        <function-ref name="fired" scoped="" ref="0x7f879cc12020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cc11160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cc11160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cc114e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cc11670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc11800"/>
        <function-ref name="get" scoped="" ref="0x7f879cc11990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc11b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc11cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cc11e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc10020"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cc101b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cc10340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cc104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cc0a7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cc0a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc0ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cc0acb0"/>
        <function-ref name="captured" scoped="" ref="0x7f879cc0ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc09020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc091b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cc09340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cc0d6d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cc0d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cc0da50"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cc0dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc0dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cc0b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cc0b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc0b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cc0b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cc0b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cc0b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cc08c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cc08c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cc0bac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cc0bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc0be40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cc0a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cc0a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cc0a340"/>
        <function-ref name="fired" scoped="" ref="0x7f879cc0a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cc09610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cc09610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cc09990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cc09b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc09cb0"/>
        <function-ref name="get" scoped="" ref="0x7f879cc09e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc08020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc081b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cc08340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc084d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cc08660"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cc087f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cc08980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cc03cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cc03cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc020a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cc02230"/>
        <function-ref name="captured" scoped="" ref="0x7f879cc023c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc02550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc026e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cc02870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cc05b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cc05b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cc04020"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cc041b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc04340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cc044d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cc04660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc047f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cc04980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cc04b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cc04ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cc002f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cc002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cc00670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cc03020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cc03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cc033a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cc03530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cc036c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cc03850"/>
        <function-ref name="fired" scoped="" ref="0x7f879cc039e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cc02b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cc02b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cc01020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cc011b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cc01340"/>
        <function-ref name="get" scoped="" ref="0x7f879cc014d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cc01660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cc017f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cc01980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cc01b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cc01ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cc01e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cc00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cbfa2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cbfa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cbfa670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cbfa800"/>
        <function-ref name="captured" scoped="" ref="0x7f879cbfa990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cbfab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cbfacb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cbfae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cbfd220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cbfd220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cbfd5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cbfd730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cbfd8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cbfda50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cbfdbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cbfdd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cbfb020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cbfb1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cbfb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cbf87a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cbf87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cbf8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cbfb610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cbfb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cbfb990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cbfbb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cbfbcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cbfbe40"/>
        <function-ref name="fired" scoped="" ref="0x7f879cbfa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cbf9160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cbf9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cbf94e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cbf9670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cbf9800"/>
        <function-ref name="get" scoped="" ref="0x7f879cbf9990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cbf9b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cbf9cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cbf9e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cbf8020"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cbf81b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cbf8340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cbf84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cbf37a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cbf37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cbf3b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cbf3cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f879cbf3e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cbf2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cbf21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cbf2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cbf56d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cbf56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cbf5a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cbf5be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cbf5d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cbf4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cbf41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cbf4340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cbf44d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cbf4660"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cbf47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cbf1c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cbf1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cbf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cbf4ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cbf4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cbf4e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cbf3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cbf31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cbf3340"/>
        <function-ref name="fired" scoped="" ref="0x7f879cbf34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cbf2610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cbf2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cbf2990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cbf2b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cbf2cb0"/>
        <function-ref name="get" scoped="" ref="0x7f879cbf2e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cbf1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cbf11b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cbf1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cbf14d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cbf1660"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cbf17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cbf1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879cbeccb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879cbeccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cbea0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879cbea230"/>
        <function-ref name="captured" scoped="" ref="0x7f879cbea3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cbea550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cbea6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879cbea870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879cbeeb30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879cbeeb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879cbed020"/>
        <function-ref name="getControl" scoped="" ref="0x7f879cbed1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cbed340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879cbed4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879cbed660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cbed7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879cbed980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879cbedb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f879cbedca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f879cbe82f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f879cbe82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cbe8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f879cbec020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f879cbec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879cbec3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879cbec530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879cbec6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879cbec850"/>
        <function-ref name="fired" scoped="" ref="0x7f879cbec9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879cbeab40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879cbeab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cbe9020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879cbe91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879cbe9340"/>
        <function-ref name="get" scoped="" ref="0x7f879cbe94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879cbe9660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879cbe97f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879cbe9980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879cbe9b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f879cbe9ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879cbe9e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879cbe8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f879cbe2240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f879cbe2240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cbe25c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f879cbe6a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f879cbe6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cbe6e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f879cbe3260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f879cbe3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cbe35e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f879cbe39f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f879cbe39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879cbe3d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f879d0c74c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f879d0c74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f879d0c7840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f879d4383b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f879d4383b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f879d438730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f879d4388c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f879d438a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f879d2a1bc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f879d2a1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f879d3dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f879cbacdc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f879cbacdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cbaa180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f879cbad590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f879cbad590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f879cbad910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f879cbac6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f879cbac6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cbaca40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f879cbadc00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f879cbadc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879cbac020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f879cbac1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f879cbac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f879d4b5410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f879d4b5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879d4b5790"/>
        <function-ref name="runTask" scoped="" ref="0x7f879d4b5920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f879d4463a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f879d4463a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879d446720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f879d4468b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f879d446a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f879ce1db70" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f879ce1db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879ce1c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f879ce1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f879ce162c0" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f879ce162c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f879ce16640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f879ce167d0"/>
        <function-ref name="sleep" scoped="" ref="0x7f879ce16960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f879ce1ec30" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f879ce1ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879ce1d020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f879ce1d1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f879ce1d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f879c2f0020" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879c2f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c2f03a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879c2f0530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879c2f06c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879c2f0850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879c2f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f879c2f0c30" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879c2f0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879c2ef020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879c2ef1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879c2ef340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879c2ef4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879c2ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f879c2ef8b0" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f879c2ef8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f879c2efc30"/>
        <function-ref name="source" scoped="" ref="0x7f879c2efdc0"/>
        <function-ref name="address" scoped="" ref="0x7f879c2ee020"/>
        <function-ref name="destination" scoped="" ref="0x7f879c2ee1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f879c2ee340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879c2ee4d0"/>
        <function-ref name="type" scoped="" ref="0x7f879c2ee660"/>
        <function-ref name="setType" scoped="" ref="0x7f879c2ee7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879c2ee980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879c2eeb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f879c2eeca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f879c2ed020" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f879c2ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879c2ed3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f879c2ed530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879c2ed6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f879aa3d020" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879aa3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879aa3d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879aa3d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879aa3d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879aa3d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879aa3d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f879aa3dc90" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879aa3dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879aa3c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879aa3c230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879aa3c3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879aa3c550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879aa3c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f879aa3c930" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f879aa3c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f879aa3ccb0"/>
        <function-ref name="source" scoped="" ref="0x7f879aa3ce40"/>
        <function-ref name="address" scoped="" ref="0x7f879aa3b020"/>
        <function-ref name="destination" scoped="" ref="0x7f879aa3b1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f879aa3b340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879aa3b4d0"/>
        <function-ref name="type" scoped="" ref="0x7f879aa3b660"/>
        <function-ref name="setType" scoped="" ref="0x7f879aa3b7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879aa3b980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879aa3bb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f879aa3bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879cb53ce0" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879cb53ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879cb500a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879cb50230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879cb503c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879cb50550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879cb506e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f879cb06400" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879cb06400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879cb067a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879cb06930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879cb06ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879cb06c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879cb06de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879cb07580" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879cb07580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879cb07920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879cb07ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879cb07c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f879cb07dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879cb06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f879cb04720" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879cb04720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879cb04aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879cb04c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879cb04dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879cb03020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879cb031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f879cb03480" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f879cb03480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879cb03800"/>
        <function-ref name="runTask" scoped="" ref="0x7f879cb03990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f879cb03c60" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f879cb03c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879cb02020"/>
        <function-ref name="runTask" scoped="" ref="0x7f879cb021b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f879cb05060" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f879cb05060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f879cb053e0"/>
        <function-ref name="source" scoped="" ref="0x7f879cb05570"/>
        <function-ref name="address" scoped="" ref="0x7f879cb05700"/>
        <function-ref name="destination" scoped="" ref="0x7f879cb05890"/>
        <function-ref name="setSource" scoped="" ref="0x7f879cb05a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879cb05bb0"/>
        <function-ref name="type" scoped="" ref="0x7f879cb05d40"/>
        <function-ref name="setType" scoped="" ref="0x7f879cb04020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879cb041b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879cb04340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f879cb044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879caf83b0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879caf83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879caf8730"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879caf88c0"/>
        <function-ref name="start" scoped="" ref="0x7f879caf8a50"/>
        <function-ref name="stop" scoped="" ref="0x7f879caf8be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f879cafd3f0" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879cafd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879cafd770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879cafd900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879cafda90"/>
        <function-ref name="cancel" scoped="" ref="0x7f879cafdc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879cafddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f879caf77e0" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879caf77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879caf7b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879caf7cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879caf7e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879caf6030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879caf61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879caf71d0" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879caf71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879caf7550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879cae4330" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879cae4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879cae46b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879cae4840"/>
        <function-ref name="led1On" scoped="" ref="0x7f879cae49d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879cae4b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879cae4cf0"/>
        <function-ref name="get" scoped="" ref="0x7f879cae4e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879caef030"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879caef670"/>
        <function-ref name="set" scoped="" ref="0x7f879caef1c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f879caef350"/>
        <function-ref name="led2On" scoped="" ref="0x7f879caef4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f879caf1b20" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879caf1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879caf0020"/>
        <function-ref name="noAck" scoped="" ref="0x7f879caf01b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879caf0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f879caf6470" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f879caf6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f879caf67f0"/>
        <function-ref name="source" scoped="" ref="0x7f879caf6980"/>
        <function-ref name="address" scoped="" ref="0x7f879caf6b10"/>
        <function-ref name="destination" scoped="" ref="0x7f879caf6ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f879caf6e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879caf1020"/>
        <function-ref name="type" scoped="" ref="0x7f879caf11b0"/>
        <function-ref name="setType" scoped="" ref="0x7f879caf1340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879caf14d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879caf1660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f879caf17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f879ca8b4a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f879ca8b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879ca8b820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879ca8b9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879ca8bb40"/>
        <function-ref name="cancel" scoped="" ref="0x7f879ca8bcd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879ca8be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f879ca89120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f879ca89120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879ca894a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f879cae3300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879cae3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879cae36a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879cae3830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879cae39c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879cae3b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879cae3ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f879ca8dd60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879ca8dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ca8c180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879ca8c310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879ca8c4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879ca8c630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879ca8c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879ca8e0d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879ca8e0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879ca8e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f879ca8ca10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879ca8ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879ca8cd90"/>
        <function-ref name="noAck" scoped="" ref="0x7f879ca8b020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879ca8b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f879ca8e6c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f879ca8e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f879ca8ea40"/>
        <function-ref name="source" scoped="" ref="0x7f879ca8ebd0"/>
        <function-ref name="address" scoped="" ref="0x7f879ca8ed60"/>
        <function-ref name="destination" scoped="" ref="0x7f879ca8d020"/>
        <function-ref name="setSource" scoped="" ref="0x7f879ca8d1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879ca8d340"/>
        <function-ref name="type" scoped="" ref="0x7f879ca8d4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f879ca8d660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879ca8d7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879ca8d980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f879ca8db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879ca87b90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879ca87b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879ca84020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879ca841b0"/>
        <function-ref name="start" scoped="" ref="0x7f879ca84340"/>
        <function-ref name="stop" scoped="" ref="0x7f879ca844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879ca83790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879ca83790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f879cd9e0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879ca83b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879ca83ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879ca83e30"/>
        <function-ref name="cancel" scoped="" ref="0x7f879ca82020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879ca821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879ca87540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879ca87540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879ca878c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879ca84c60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879ca84c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f879cd9e0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879ca83020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879ca812b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879ca812b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879ca81630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879ca817c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f879ca81950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879ca81ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879ca81c70"/>
        <function-ref name="get" scoped="" ref="0x7f879ca81e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879ca80020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879ca80660"/>
        <function-ref name="set" scoped="" ref="0x7f879ca801b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f879ca80340"/>
        <function-ref name="led2On" scoped="" ref="0x7f879ca804d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f879ca7c970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f879ca7c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f879cd9e0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f879ca7ccf0"/>
        <function-ref name="offset" scoped="" ref="0x7f879ca7ce80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f879ca81030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879ca74c40" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879ca74c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879ca73020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879ca731b0"/>
        <function-ref name="start" scoped="" ref="0x7f879ca73340"/>
        <function-ref name="stop" scoped="" ref="0x7f879ca734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f879ca0c6e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f879ca0c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879ca0ca60"/>
        <function-ref name="runTask" scoped="" ref="0x7f879ca0cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f879ca5e780" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f879ca5e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879ca5eb00"/>
        <function-ref name="stop" scoped="" ref="0x7f879ca5ec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f879ca434f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f879ca434f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879ca43870"/>
        <function-ref name="runTask" scoped="" ref="0x7f879ca43a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879ca745f0" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879ca745f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879ca74970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f879ca5c360" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f879ca5c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f879ca5c6e0"/>
        <function-ref name="flush" scoped="" ref="0x7f879ca5c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f879ca0fc70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f879ca0fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879ca0e020"/>
        <function-ref name="runTask" scoped="" ref="0x7f879ca0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f879ca637e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f879ca637e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f879ca63b60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f879ca63cf0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f879ca63e80"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f879ca6c030"/>
        <function-ref name="putData" scoped="" ref="0x7f879ca6c1c0"/>
        <function-ref name="putDone" scoped="" ref="0x7f879ca6c350"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f879ca6c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879ca6c760" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879ca6c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879ca6cae0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879ca6cc70"/>
        <function-ref name="led1On" scoped="" ref="0x7f879ca6ce00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879ca62020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879ca621b0"/>
        <function-ref name="get" scoped="" ref="0x7f879ca62340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879ca624d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879ca62b10"/>
        <function-ref name="set" scoped="" ref="0x7f879ca62660"/>
        <function-ref name="led0On" scoped="" ref="0x7f879ca627f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f879ca62980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f879ca08a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f879ca08a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879ca08d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f879ca07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f879ca6da40" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f879ca6da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f879ca6ddc0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f879ca72020"/>
        <function-ref name="startSend" scoped="" ref="0x7f879ca721b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f879ca72340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f879ca69530" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f879ca69530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f879ca698b0"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f879ca69a40"/>
        <function-ref name="endPacket" scoped="" ref="0x7f879ca69bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f879c93d020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f879c93d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879c93d3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f879c93d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879c942de0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879c942de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f879cd9e0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c9411c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879c941350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879c9414e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879c941670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879c941800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f879c93d800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f879c93d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879c93db80"/>
        <function-ref name="runTask" scoped="" ref="0x7f879c93dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879c9426c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879c9426c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f879cd9e0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879c942a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f879c941c20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f879c941c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f879cd9e0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f879c940020"/>
        <function-ref name="offset" scoped="" ref="0x7f879c9401b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f879c940340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879c93f920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879c93f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879c93fca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879c93fe30"/>
        <function-ref name="led1On" scoped="" ref="0x7f879c93e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879c93e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879c93e340"/>
        <function-ref name="get" scoped="" ref="0x7f879c93e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879c93e660"/>
        <function-ref name="led2On" scoped="" ref="0x7f879c93eca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c93e980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879c93e7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f879c93eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f879c940e80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f879c940e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f879c93f220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f879c93f3b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f879c93f540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f879c93f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f879c940590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f879c940590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f879c940910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f879c940aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f879c940c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f879c92dd20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f879c92dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c9360e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f879c936270"/>
        <function-ref name="receive" scoped="" ref="0x7f879c936400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f879c936590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f879c936720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f879c9368b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879c936a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f879c93be00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f879c93be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f879c9381c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f879c938350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f879c9384e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f879c938670"/>
        <function-ref name="putData" scoped="" ref="0x7f879c938800"/>
        <function-ref name="putDone" scoped="" ref="0x7f879c938990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f879c938b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879c936cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879c936cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879c9350a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879c935230"/>
        <function-ref name="led1On" scoped="" ref="0x7f879c9353c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879c935550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879c9356e0"/>
        <function-ref name="get" scoped="" ref="0x7f879c935870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879c935a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879c92a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f879c935b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f879c935d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f879c92a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f879c90e020" loc="40:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f879c90e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c90e3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f879c90e530"/>
        <function-ref name="receive" scoped="" ref="0x7f879c90e6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f879c90e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f879c9108d0" loc="39:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f879c9108d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c910c50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f879c910de0"/>
        <function-ref name="receive" scoped="" ref="0x7f879c90f020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f879c90f1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f879c90f340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f879c90f4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879c90f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f879c9100c0" loc="38:../../../tos/platforms/shimmer2r/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f879c9100c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879c910440"/>
        <function-ref name="stop" scoped="" ref="0x7f879c9105d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879c323c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c323c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879c322020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879c3221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f879c321440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f879c321440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c3217c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f879c321950"/>
        <function-ref name="receive" scoped="" ref="0x7f879c321ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f879c321c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f879c320020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c320020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f879c3203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f879c322440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f879c322440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c3227c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f879c322950"/>
        <function-ref name="receive" scoped="" ref="0x7f879c322ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f879c322c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f879c322e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f879c321020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879c3211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879c323020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879c323020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c3233a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c323530"/>
        <function-ref name="request" scoped="" ref="0x7f879c3236c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879c323850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c3239e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f879c8a5dd0" loc="42:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c8a5dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879c8a7180"/>
        <function-ref name="configure" scoped="" ref="0x7f879c8a7310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f879c8a4210" loc="44:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f879c8a4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c8a4590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f879c8a4720"/>
        <function-ref name="receive" scoped="" ref="0x7f879c8a48b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f879c8a4a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f879c8a1600" loc="47:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c8a1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f879c8a1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f879c8a7b50" loc="43:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f879c8a7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c8a6020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f879c8a61b0"/>
        <function-ref name="receive" scoped="" ref="0x7f879c8a6340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f879c8a64d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f879c8a6660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f879c8a67f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879c8a6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f879c8a2370" loc="46:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f879c8a2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c8a26f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c8a2880"/>
        <function-ref name="request" scoped="" ref="0x7f879c8a2a10"/>
        <function-ref name="granted" scoped="" ref="0x7f879c8a2ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c8a2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879c8aa320" loc="41:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879c8aa320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c8aa6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c8aa830"/>
        <function-ref name="request" scoped="" ref="0x7f879c8aa9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879c8aab50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c8aace0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f879c89dbe0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart0P.nc">
      <component-ref qname="Msp430Uart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879c89dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879c8a0020"/>
        <function-ref name="txDone" scoped="" ref="0x7f879c8a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f879c811e70" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c811e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879c80f240"/>
        <function-ref name="configure" scoped="" ref="0x7f879c80f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f879c80e890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f879c80e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c80ec30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f879c80edc0"/>
        <function-ref name="receive" scoped="" ref="0x7f879c80d020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f879c80d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f879c80c3e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c80c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f879c80c780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f879c80ca50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f879c80ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f879c80cdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f879c80b020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f879c80b1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f879c80b340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f879c80b4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f879c80b660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f879c80b7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f879c80b980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f879c80bb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f879c80bca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f879c80be30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f879c80a020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f879c80a1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f879c80a440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f879c80a5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f879c80a760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f879c80a8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f879c80aa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f879c80ac10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f879c80ada0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f879c809020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f879c8091b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f879c809340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f879c8094d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879c809660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f879c8099f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f879c809b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f879c809d10"/>
        <function-ref name="tx" scoped="" ref="0x7f879c808020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f879c8081b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f879c808340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f879c8084d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f879c808660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879c8087f0"/>
        <function-ref name="rx" scoped="" ref="0x7f879c808980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879c808b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879c808ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879c808e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879c807020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879c8071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f879c80f790" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f879c80f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c80fb30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f879c80fcc0"/>
        <function-ref name="receive" scoped="" ref="0x7f879c80fe50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f879c80e020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f879c80e1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f879c80e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879c80e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f879c806020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879c806020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879c806e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879c805800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879c805340"/>
        <function-ref name="overflow" scoped="" ref="0x7f879c805cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f879c80d5b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f879c80d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c80d950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c80dae0"/>
        <function-ref name="request" scoped="" ref="0x7f879c80dc70"/>
        <function-ref name="granted" scoped="" ref="0x7f879c80de00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c80c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879c8110d0" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879c8110d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c811470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c811600"/>
        <function-ref name="request" scoped="" ref="0x7f879c811790"/>
        <function-ref name="granted" scoped="" ref="0x7f879c811920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c811ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f879c8075b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879c8075b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879c807950"/>
        <function-ref name="txDone" scoped="" ref="0x7f879c807ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879c803120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart0P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879c803120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879c8034a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879c803630"/>
        <function-ref name="led1On" scoped="" ref="0x7f879c8037c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879c803950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879c803ae0"/>
        <function-ref name="get" scoped="" ref="0x7f879c803c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879c803e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f879c8024d0"/>
        <function-ref name="set" scoped="" ref="0x7f879c8021b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879c802020"/>
        <function-ref name="led0On" scoped="" ref="0x7f879c802340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f879c7f5bd0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f879c7f5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879c7f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f879c7f66d0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879c7f66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879c7f6a50"/>
        <function-ref name="txDone" scoped="" ref="0x7f879c7f6be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f879c7fdb60" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879c7fdb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f879c7fa020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f879c7fa1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f879c7fa340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f879c7fa4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f879c7fa660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f879c7fa7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f879c7fa980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f879c7fab10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f879c7faca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f879c7fae30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f879c7f9020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f879c7f91b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f879c7f9340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f879c7f95d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f879c7f9760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f879c7f98f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f879c7f9a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f879c7f9c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f879c7f9da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f879c7f8020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f879c7f81b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f879c7f8340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f879c7f84d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f879c7f8660"/>
        <function-ref name="getMode" scoped="" ref="0x7f879c7f87f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f879c7f8b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f879c7f8d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f879c7f7020"/>
        <function-ref name="tx" scoped="" ref="0x7f879c7f71b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f879c7f7340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f879c7f74d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f879c7f7660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f879c7f77f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879c7f7980"/>
        <function-ref name="rx" scoped="" ref="0x7f879c7f7b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879c7f7ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879c7f7e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879c7f6020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879c7f61b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879c7f6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f879c7b0800" loc="82:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f879c7b0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c7b0b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c7b0d10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c7af020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7af1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c7af340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7af4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c7af660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7af7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c7af980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c7afb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c7afca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c7afe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c7ae020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7ae2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c7ae440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f879c7ec020" loc="76:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f879c7ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879c7ec3a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f879c7ec530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f879c7ae800" loc="83:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f879c7ae800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c7aeb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c7aed10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c7ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c7ad340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c7ad660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7ad7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c7ad980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c7adb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c7adca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c7ade30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c7ac020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7ac2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c7ac440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f879c7ac800" loc="84:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f879c7ac800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c7acb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c7acd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c7aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7aa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c7aa340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c7aa660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7aa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c7aa980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c7aab10"/>
        <function-ref name="set" scoped="" ref="0x7f879c7aaca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c7aae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c7a9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7a92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c7a9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f879c7f1360" loc="75:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f879c7f1360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f879c7f16e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f879c7f1870"/>
        <function-ref name="setUctl" scoped="" ref="0x7f879c7f1a00"/>
        <function-ref name="enableUart" scoped="" ref="0x7f879c7f1b90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f879c7f1d20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f879c7f0020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f879c7f01b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f879c7f0340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f879c7f04d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f879c7f0660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f879c7f07f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f879c7f0980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f879c7f0b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f879c7f0da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f879c7ef020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f879c7ef1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f879c7ef340"/>
        <function-ref name="isUart" scoped="" ref="0x7f879c7ef4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f879c7ef660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f879c7ef7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f879c7ef980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f879c7efb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f879c7efca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f879c7efe30"/>
        <function-ref name="getMode" scoped="" ref="0x7f879c7ee020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f879c7ee3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f879c7ee540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f879c7ee6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f879c7ee860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f879c7ee9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f879c7eeb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f879c7eed10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f879c7ed020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879c7ed1b0"/>
        <function-ref name="rx" scoped="" ref="0x7f879c7ed340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879c7ed4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879c7ed660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879c7ed7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879c7ed980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879c7edb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879c7a9700" loc="86:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879c7a9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879c7a9a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879c7a9c10"/>
        <function-ref name="led1On" scoped="" ref="0x7f879c7a9da0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879c7a8020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879c7a81b0"/>
        <function-ref name="get" scoped="" ref="0x7f879c7a8340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879c7a84d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879c7a8b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c7a8660"/>
        <function-ref name="led0On" scoped="" ref="0x7f879c7a87f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f879c7a8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f879c7c3bc0" loc="79:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f879c7c3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f879c7ea020"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f879c7ea1b0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f879c7ea340"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f879c7ea4d0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f879c7ea660"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f879c7ea7f0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f879c7ea980"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f879c7eab10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879c7eaca0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f879c7eae30"/>
        <function-ref name="getData" scoped="" ref="0x7f879c7e9020"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f879c7e91b0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f879c7e9340"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f879c7e95d0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f879c7e9760"/>
        <function-ref name="getIV" scoped="" ref="0x7f879c7e98f0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f879c7e9a80"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f879c7e9c10"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f879c7e9da0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f879c7c2020"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f879c7c21b0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f879c7c2340"/>
        <function-ref name="isI2C" scoped="" ref="0x7f879c7c24d0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f879c7c2660"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f879c7c27f0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f879c7c2b80"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f879c7c2d10"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f879c7c1020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f879c7c11b0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f879c7c1340"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f879c7c14d0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f879c7c1660"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f879c7c17f0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f879c7c1980"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f879c7c1b10"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f879c7c1ca0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f879c7c1e30"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f879c7c0020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f879c7c01b0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f879c7c0340"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f879c7c04d0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f879c7c0660"/>
        <function-ref name="setData" scoped="" ref="0x7f879c7c07f0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f879c7c0980"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f879c7c0b10"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f879c7c0ca0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f879c7c0e30"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f879c7bf020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f879c7bf1b0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f879c7bf740"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f879c7bf8d0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f879c7bfa60"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f879c7bfbf0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f879c7bfd80"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f879c7be020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f879c7be1b0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f879c7be340"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f879c7be4d0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f879c7be660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f879c7bc800" loc="81:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f879c7bc800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c7bcb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c7bcd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c7b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7b11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c7b1340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c7b1660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7b17f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c7b1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c7b1b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c7b1ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c7b1e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c7b0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7b02b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c7b0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f879c7ec970" loc="77:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f879c7ec970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879c7eccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f879c7b2860" loc="80:../../../tos/platforms/shimmer/chips/msp430/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f879c7b2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c7b2be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c7b2d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c7bd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7bd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c7bd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7bd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c7bd660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7bd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c7bd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c7bdb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c7bdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c7bde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c7bc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7bc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c7bc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f879c725810" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f879c725810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c725b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c725d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c724020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c724340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c724660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7247f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c724980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c724b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c724ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c724e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c723020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7232b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c723440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f879c711810" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f879c711810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c711b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c711d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c710020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7101b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c710340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7104d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c710660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7107f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c710980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c710b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c710ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c710e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c70f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c70f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c70f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f879c6c7ca0" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f879c6c7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6c60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6c6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6c63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6c6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6c66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6c6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6c6a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6c6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6c6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6c5020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6c51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6c5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6c54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6c5760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6c58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f879c6a2cb0" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f879c6a2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6a10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6a1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6a13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6a1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6a16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6a1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6a1a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6a1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6a1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6a0020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6a01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6a0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6a04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6a0760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f879c6c5cc0" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f879c6c5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6c40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6c4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6c43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6c4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6c46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6c4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6c4a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6c4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6c4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6c3020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6c3760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f879c70c810" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f879c70c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c70cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c70cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c70b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c70b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c70b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c70b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c70b660"/>
        <function-ref name="get" scoped="" ref="0x7f879c70b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c70b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c70bb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c70bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c70be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c70a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c70a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c70a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f879c6f89a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f879c6f89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6f8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6f7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6f71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6f7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6f74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6f7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6f77f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6f7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6f7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6f7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6f7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6f6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6f61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6f6440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6f65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f879c6e49a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f879c6e49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6e4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6e3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6e31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6e3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6e34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6e3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6e37f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6e3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6e3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6e3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6e3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6e2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6e21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6e2440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6e25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f879c6d39a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f879c6d39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6d3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6d2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6d21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6d2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6d24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6d2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6d27f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6d2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6d2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6d2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6d2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6d1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6d11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6d1440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6d15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f879c6bfcc0" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f879c6bfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6be0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6be230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6be3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6be550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6be6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6be870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6bea00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6beb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6bed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6bd020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6bd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6bd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6bd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6bd760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f879c6aecb0" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f879c6aecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6ad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6ad230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6ad3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6ad550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6ad6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6ad870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6ada00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6adb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6add20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6ac020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6ac760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f879c69acc0" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f879c69acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6990a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c699230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6993c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c699550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6996e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c699870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c699a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c699b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c699d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c698020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6981b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c698340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6984d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c698760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6988f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f879c71f810" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f879c71f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c71fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c71fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c71e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c71e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c71e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c71e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c71e660"/>
        <function-ref name="get" scoped="" ref="0x7f879c71e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c71e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c71eb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c71eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c71ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c71d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c71d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c71d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f879c6bdcc0" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f879c6bdcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6bc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6bc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6bc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6bc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6bc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6bc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6bca00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6bcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6bcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6bb020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6bb760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f879c71b810" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f879c71b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c71bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c71bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c71a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c71a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c71a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c71a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c71a660"/>
        <function-ref name="get" scoped="" ref="0x7f879c71a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c71a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c71ab10"/>
        <function-ref name="set" scoped="" ref="0x7f879c71aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c71ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c719020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7192b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c719440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f879c706810" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f879c706810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c706b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c706d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c705020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c705340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c705660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7057f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c705980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c705b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c705ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c705e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c704020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7042b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c704440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f879c6f29a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f879c6f29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6f2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6f1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6f11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6f1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6f14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6f1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6f17f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6f1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6f1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6f1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6f1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6f0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6f01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6f0440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6f05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f879c6dd9a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f879c6dd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6ddd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6dc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6dc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6dc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6dc7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6dc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6dcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6dcca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6dce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6db020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6db1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6db440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6db5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f879c6cd9a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f879c6cd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6cdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6cc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6cc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6cc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6cc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6cc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6cc7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6cc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6ccb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6ccca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6cce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6cb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6cb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6cb440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6cb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f879c729810" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f879c729810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c729b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c729d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c728020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c728340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c728660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7287f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c728980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c728b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c728ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c728e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c727020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7272b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c727440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f879c715810" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f879c715810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c715c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c715e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c714020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7141b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c714340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7144d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c714660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7147f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c714980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c714b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c714ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c714e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c713020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7132b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c713440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f879c700810" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f879c700810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c700b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c700d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6ff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6ff340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6ff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6ff660"/>
        <function-ref name="get" scoped="" ref="0x7f879c6ff7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6ff980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6ffb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c6ffca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6ffe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6fe020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6fe2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6fe440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f879c6c9cc0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f879c6c9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6c80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6c8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6c83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6c8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6c86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6c8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6c8a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6c8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6c8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6c7020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6c71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6c7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6c74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6c7760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f879c6a8cb0" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f879c6a8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6a7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6a73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6a7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6a76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6a7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6a7a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6a7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6a7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6a6020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6a61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6a6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6a64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6a6760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6a68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f879c69ccb0" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f879c69ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c69b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c69b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c69b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c69b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c69b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c69b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c69ba00"/>
        <function-ref name="get" scoped="" ref="0x7f879c69bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c69bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c69a020"/>
        <function-ref name="set" scoped="" ref="0x7f879c69a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c69a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c69a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c69a760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c69a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f879c6b5cc0" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f879c6b5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6b4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6b43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6b4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6b46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6b4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6b4a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6b4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6b4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6b3020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6b3760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f879c6fc810" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f879c6fc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6fcd90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6fb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6fb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6fb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6fb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6fb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6fb7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6fb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6fbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6fbca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6fbe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6fa020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6fa1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6fa440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6fa5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f879c6e89a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f879c6e89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6e8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6e7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6e74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6e77f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6e7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6e7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6e7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6e7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6e6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6e61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6e6440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6e65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f879c6d79a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f879c6d79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6d7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6d6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6d61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6d6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6d64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6d6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6d67f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6d6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6d6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6d6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6d6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6d5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6d51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6d5440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6d55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f879c6a6cb0" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f879c6a6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6a5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6a53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6a5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6a56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6a5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6a5a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6a5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6a5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6a4020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6a41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6a4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6a44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6a4760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f879c6bbcb0" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f879c6bbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6ba230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6ba3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6ba550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6ba6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6ba870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6baa00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6bab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6bad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6b9020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6b9760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f879c723810" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f879c723810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c723b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c723d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c722020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c722340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c722660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7227f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c722980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c722b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c722ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c722e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c721020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7212b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c721440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f879c70f810" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f879c70f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c70fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c70fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c70d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c70d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c70d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c70d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c70d660"/>
        <function-ref name="get" scoped="" ref="0x7f879c70d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c70d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c70db10"/>
        <function-ref name="set" scoped="" ref="0x7f879c70dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c70de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c70c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c70c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c70c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f879c6db9a0" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f879c6db9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6dbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6da020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6da1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6da340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6da4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6da660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6da7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6da980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6dab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6daca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6dae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6d9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6d91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6d9440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6d95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f879c70a810" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f879c70a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c70ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c70ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c709020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c709340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c709660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7097f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c709980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c709b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c709ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c709e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c708020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7082b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c708440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f879c6f69a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f879c6f69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6f6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6f5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6f51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6f5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6f54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6f5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6f57f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6f5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6f5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6f5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6f5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6f4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6f41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6f4440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6f45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f879c6e29a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f879c6e29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6e2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6e1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6e11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6e1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6e14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6e1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6e17f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6e1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6e1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6e1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6e1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6e0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6e01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6e0440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6e05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f879c6d19a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f879c6d19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6d1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6d0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6d01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6d0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6d04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6d0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6d07f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6d0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6d0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6d0ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6d0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6cf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6cf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6cf440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6cf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f879c6b7cc0" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f879c6b7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6b60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6b6230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6b63c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6b6550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6b66e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6b6870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6b6a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6b6b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6b6d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6b5020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6b51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6b5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6b54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6b5760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6b58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f879c72f800" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f879c72f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c72fb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c72fd10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c72c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c72c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c72c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c72c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c72c660"/>
        <function-ref name="get" scoped="" ref="0x7f879c72c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c72c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c72cb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c72cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c72ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c72b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c72b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c72b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f879c719810" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f879c719810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c719b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c719d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c718020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c718340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c718660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c718980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c718b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c718ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c718e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c717020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7172b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c717440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f879c704810" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f879c704810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c704b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c704d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c703020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c703340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c703660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7037f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c703980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c703b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c703ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c703e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c702020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7022b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c702440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f879c6f09a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f879c6f09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6f0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6ef020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6ef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6ef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6ef4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6ef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6ef7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6ef980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6efb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6efca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6efe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6ee020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6ee1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6ee440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6ee5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f879c6b3cc0" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f879c6b3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6b2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6b23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6b2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6b26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6b2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6b2a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6b2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6b2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6b1020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6b11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6b1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6b14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6b1760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6b18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f879c6accb0" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f879c6accb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6ab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6ab230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6ab3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6ab550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6ab6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6ab870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6aba00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6abb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6abd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6aa020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6aa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6aa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6aa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6aa760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6aa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f879c6a0cb0" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f879c6a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c69f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c69f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c69f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c69f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c69f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c69f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c69fa00"/>
        <function-ref name="get" scoped="" ref="0x7f879c69fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c69fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c69e020"/>
        <function-ref name="set" scoped="" ref="0x7f879c69e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c69e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c69e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c69e760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c69e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f879c6ec9a0" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f879c6ec9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6ecd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6eb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6eb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6eb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6eb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6eb7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6eb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6ebb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6ebca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6ebe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6ea020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6ea1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6ea440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6ea5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f879c6b1cc0" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f879c6b1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6af0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6af230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6af3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6af550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6af6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6af870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6afa00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6afb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6afd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6ae020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6ae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6ae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6ae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6ae760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6ae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f879c727810" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f879c727810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c727b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c727d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c726020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c726340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c726660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7267f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c726980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c726b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c726ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c726e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c725020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7252b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c725440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f879c713810" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f879c713810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c713b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c713d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c712020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c712340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c712660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7127f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c712980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c712b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c712ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c712e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c711020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7112b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c711440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f879c6fe810" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f879c6fe810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6feb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6fed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6fd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6fd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6fd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6fd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6fd660"/>
        <function-ref name="get" scoped="" ref="0x7f879c6fd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6fd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6fdb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c6fdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6fde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6fc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6fc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6fc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f879c6b9cc0" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f879c6b9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6b80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6b8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6b83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6b8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6b86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6b8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6b8a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6b8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6b8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6b7020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6b7760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f879c6a4cb0" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f879c6a4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6a30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6a3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6a33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6a3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6a36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6a3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6a3a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6a3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6a3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6a2020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6a21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6a2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6a24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6a2760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6a28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f879c6fa9a0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f879c6fa9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6fad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6f9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6f91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6f9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6f94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6f9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6f97f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6f9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6f9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6f9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6f9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6f8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6f81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6f8440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6f85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f879c6e69a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f879c6e69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6e6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6e5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6e51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6e5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6e54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6e5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6e57f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6e5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6e5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6e5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6e5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6e4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6e41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6e4440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6e45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f879c6d59a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f879c6d59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6d5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6d4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6d41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6d4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6d44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6d4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6d47f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6d4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6d4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6d4ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6d4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6d3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6d31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6d3440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6d35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f879c721810" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f879c721810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c721b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c721d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c720020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c720340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c720660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7207f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c720980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c720b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c720ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c720e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c71f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c71f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c71f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f879c6d99a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f879c6d99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6d9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6d8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6d81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6d8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6d84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6d8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6d87f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6d8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6d8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6d8ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6d8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6d7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6d71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6d7440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6d75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f879c71d810" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f879c71d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c71db90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c71dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c71c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c71c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c71c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c71c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c71c660"/>
        <function-ref name="get" scoped="" ref="0x7f879c71c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c71c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c71cb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c71cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c71ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c71b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c71b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c71b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f879c708810" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f879c708810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c708b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c708d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c707020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c707340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c707660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7077f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c707980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c707b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c707ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c707e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c706020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7062b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c706440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f879c6f49a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f879c6f49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6f4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6f3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6f31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6f3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6f34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6f3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6f37f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6f3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6f3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6f3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6f3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6f2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6f21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6f2440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6f25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f879c6e09a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f879c6e09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6e0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6de020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6de1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6de340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6de4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6de660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6de7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6de980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6deb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6deca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6dee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6dd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6dd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6dd440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6dd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f879c6cf9a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f879c6cf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6cfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6ce020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6ce1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6ce340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6ce4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6ce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6ce7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6ce980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6ceb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6ceca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6cee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6cd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6cd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6cd440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6cd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f879c72b810" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f879c72b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c72bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c72bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c72a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c72a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c72a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c72a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c72a660"/>
        <function-ref name="get" scoped="" ref="0x7f879c72a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c72a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c72ab10"/>
        <function-ref name="set" scoped="" ref="0x7f879c72aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c72ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c729020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7292b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c729440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f879c717810" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f879c717810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c717b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c717d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c716020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c716340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c716660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7167f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c716980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c716b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c716ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c716e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c715020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7152b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c715440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f879c702810" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f879c702810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c702b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c702d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c701020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c7011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c701340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c7014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c701660"/>
        <function-ref name="get" scoped="" ref="0x7f879c7017f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c701980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c701b10"/>
        <function-ref name="set" scoped="" ref="0x7f879c701ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c701e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c700020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c7002b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c700440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f879c6ee9a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f879c6ee9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6eed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6ed020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6ed1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6ed340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6ed4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6ed660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6ed7f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6ed980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6edb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6edca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6ede30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6ec020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6ec1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6ec440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6ec5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f879c6c1ca0" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f879c6c1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6c00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6c0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6c03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6c0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6c06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6c0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6c0a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6c0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6c0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6bf020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6bf760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f879c6aacb0" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f879c6aacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6a90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6a9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6a93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6a9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6a96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6a9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6a9a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6a9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6a9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6a8020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6a81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6a8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6a84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6a8760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f879c6c3cc0" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f879c6c3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6c20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6c2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6c23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6c2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6c26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6c2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6c2a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c6c2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6c2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6c1020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6c1760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f879c6ea9a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f879c6ea9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6ead20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6e9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6e9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6e94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6e9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6e97f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c6e9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6e9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6e9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c6e9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6e8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6e81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6e8440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6e85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f879c69ecb0" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f879c69ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c69d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c69d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c69d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c69d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c69d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c69d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c69da00"/>
        <function-ref name="get" scoped="" ref="0x7f879c69db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c69dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c69c020"/>
        <function-ref name="set" scoped="" ref="0x7f879c69c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c69c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c69c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c69c760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c69c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f879c698cc0" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f879c698cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6970a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c697230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6973c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c697550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6976e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c697870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c697a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c697b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c697d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c696020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c696340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c696760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f879c6cb9f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f879c6cb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6ca1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c6ca350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6ca4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c6ca670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6ca800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6ca990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6cab20"/>
        <function-ref name="get" scoped="" ref="0x7f879c6cacb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6cae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c6c9020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6c91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c6c9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6c94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c6c9760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c693d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c693d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c66c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c66c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c66c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c66c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c66c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c66c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c66ca40"/>
        <function-ref name="get" scoped="" ref="0x7f879c66cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c66cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c66b020"/>
        <function-ref name="set" scoped="" ref="0x7f879c66b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c66b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c66b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c66b760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c66b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c668740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c668740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c668ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c668c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c668de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c667020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6671b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c667340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6674d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c667660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6677f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c667980"/>
        <function-ref name="set" scoped="" ref="0x7f879c667b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c667ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c667e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c666120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c663100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c663100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c663480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c663610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6637a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c663930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c663ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c663c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c663de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c661020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6611b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c661340"/>
        <function-ref name="set" scoped="" ref="0x7f879c6614d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c661660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6617f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c661a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c661c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c65ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c65ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c65d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c65d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c65d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c65d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c65d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c65d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c65da40"/>
        <function-ref name="get" scoped="" ref="0x7f879c65dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c65dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c65c020"/>
        <function-ref name="set" scoped="" ref="0x7f879c65c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c65c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c65c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c65c760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c65c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c659740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c659740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c659ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c659c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c659de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c658020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6581b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c658340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6584d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c658660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6587f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c658980"/>
        <function-ref name="set" scoped="" ref="0x7f879c658b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c658ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c658e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c657120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6572b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c654100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c654100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c654480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c654610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6547a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c654930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c654ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c654c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c654de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c653020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6531b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c653340"/>
        <function-ref name="set" scoped="" ref="0x7f879c6534d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c653660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6537f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c653a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c653c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c650d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c650d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c64f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c64f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c64f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c64f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c64f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c64f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c64fa40"/>
        <function-ref name="get" scoped="" ref="0x7f879c64fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c64fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c64e020"/>
        <function-ref name="set" scoped="" ref="0x7f879c64e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c64e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c64e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c64e760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c64e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c64b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c64b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c64bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c64bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c64bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c64a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c64a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c64a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c64a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c64a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c64a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c64a980"/>
        <function-ref name="set" scoped="" ref="0x7f879c64ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c64aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c64ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c649120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c646100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c646100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c646480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c646610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6467a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c646930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c646ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c646c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c646de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c645020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6451b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c645340"/>
        <function-ref name="set" scoped="" ref="0x7f879c6454d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c645660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6457f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c645a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c645c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c642d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c642d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6410e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c641270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c641400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c641590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c641720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6418b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c641a40"/>
        <function-ref name="get" scoped="" ref="0x7f879c641bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c641d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c640020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6401b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c640340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6404d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c640760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6408f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c63d740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c63d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c63dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c63dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c63dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c63b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c63b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c63b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c63b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c63b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c63b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c63b980"/>
        <function-ref name="set" scoped="" ref="0x7f879c63bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c63bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c63be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c63a120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c63a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c637100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c637100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c637480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c637610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6377a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c637930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c637ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c637c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c637de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c636020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c636340"/>
        <function-ref name="set" scoped="" ref="0x7f879c6364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c636660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c636a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c636c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c633d80" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c633d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c632180"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c632310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6324a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c632630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6327c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c632950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c632ae0"/>
        <function-ref name="get" scoped="" ref="0x7f879c632c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c632e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c631020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6311b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c631340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6314d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c631760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c62e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c62e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c62eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c62ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c62ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c62d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c62d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c62d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c62d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c62d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c62d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c62d980"/>
        <function-ref name="set" scoped="" ref="0x7f879c62db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c62dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c62de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c62c120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c62c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c629100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c629100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c629480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c629610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c6297a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c629930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c629ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c629c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c629de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c628020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c628340"/>
        <function-ref name="set" scoped="" ref="0x7f879c6284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c628660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c628a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c628c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c625d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c625d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6240e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c624270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c624400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c624590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c624720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6248b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c624a40"/>
        <function-ref name="get" scoped="" ref="0x7f879c624bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c624d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c623020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6231b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c623340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6234d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c623760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6238f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c620740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c620740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c620ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c620c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c620de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c61f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c61f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c61f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c61f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c61f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c61f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c61f980"/>
        <function-ref name="set" scoped="" ref="0x7f879c61fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c61fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c61fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c61e120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c61e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c61b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c61b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c61b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c61b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c61b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c61b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c61bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c61bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c61bde0"/>
        <function-ref name="get" scoped="" ref="0x7f879c61a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c61a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c61a340"/>
        <function-ref name="set" scoped="" ref="0x7f879c61a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c61a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c61a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c61aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c61ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c616d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c616d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6150e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c615270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c615400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c615590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c615720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6158b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c615a40"/>
        <function-ref name="get" scoped="" ref="0x7f879c615bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c615d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c614020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c614340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c614760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c611740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c611740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c611ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c611c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c611de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c610020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6101b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c610340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6104d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c610660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6107f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c610980"/>
        <function-ref name="set" scoped="" ref="0x7f879c610b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c610ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c610e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c60f120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c60f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c60c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c60c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c60c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c60c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c60c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c60c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c60cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c60cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c60cde0"/>
        <function-ref name="get" scoped="" ref="0x7f879c60b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c60b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c60b340"/>
        <function-ref name="set" scoped="" ref="0x7f879c60b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c60b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c60b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c60ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c60bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c608d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c608d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c6070e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c607270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c607400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c607590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c607720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c6078b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c607a40"/>
        <function-ref name="get" scoped="" ref="0x7f879c607bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c607d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c606020"/>
        <function-ref name="set" scoped="" ref="0x7f879c6061b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c606340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c6064d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c606760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6068f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c603740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c603740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c603ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c603c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c603de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c602020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c6021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c602340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c6024d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c602660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c6027f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c602980"/>
        <function-ref name="set" scoped="" ref="0x7f879c602b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c602ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c602e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c601120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c6012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5fe100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5fe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5fe480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5fe610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5fe7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5fe930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5feac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5fec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5fede0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5fd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5fd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5fd340"/>
        <function-ref name="set" scoped="" ref="0x7f879c5fd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5fd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5fd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5fda80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5fdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5fae60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5fae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5f9210"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5f93a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5f9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5f96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5f9850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5f99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5f9b70"/>
        <function-ref name="get" scoped="" ref="0x7f879c5f9d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5f8020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5f81b0"/>
        <function-ref name="set" scoped="" ref="0x7f879c5f8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5f84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5f8660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5f88f0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5f8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5f59f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5f59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5f5d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5f3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5f31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5f3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5f34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5f3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5f37f0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5f3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5f3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5f3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f879c5f3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5f2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5f21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5f2440"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5f25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5ef460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5ef460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5ef7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5ef970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5efb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5efc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5efe20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5ee1b0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5ee340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5ee4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5ee660"/>
        <function-ref name="set" scoped="" ref="0x7f879c5ee7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5ee980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5eeb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5eeda0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5ebe00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5ebe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5ea1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5ea350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5ea4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5ea670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5ea800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5ea990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5eab20"/>
        <function-ref name="get" scoped="" ref="0x7f879c5eacb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5eae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5e9020"/>
        <function-ref name="set" scoped="" ref="0x7f879c5e91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5e9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5e94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5e9760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5e98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5e6740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5e6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5e6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5e6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5e6de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5e5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5e51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5e5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5e54d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5e5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5e57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5e5980"/>
        <function-ref name="set" scoped="" ref="0x7f879c5e5b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5e5ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5e5e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5e4120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5e42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5e1100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5e1480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5e1610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5e17a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5e1930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5e1ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5e1c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5e1de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5e0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5e01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5e0340"/>
        <function-ref name="set" scoped="" ref="0x7f879c5e04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5e0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5e07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5e0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5e0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5ddd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5ddd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5dc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5dc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5dc400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5dc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5dc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5dc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5dca40"/>
        <function-ref name="get" scoped="" ref="0x7f879c5dcbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5dcd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5db020"/>
        <function-ref name="set" scoped="" ref="0x7f879c5db1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5db340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5db4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5db760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5db8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5d8740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5d8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5d8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5d8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5d8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5d7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5d71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5d7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5d74d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5d7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5d77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5d7980"/>
        <function-ref name="set" scoped="" ref="0x7f879c5d7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5d7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5d7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5d6120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5d3100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5d3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5d3480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5d3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5d37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5d3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5d3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5d3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5d3de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5d2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5d21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5d2340"/>
        <function-ref name="set" scoped="" ref="0x7f879c5d24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5d2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5d27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5d2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5d2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5cfd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5cfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5cd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5cd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5cd400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5cd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5cd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5cd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5cda40"/>
        <function-ref name="get" scoped="" ref="0x7f879c5cdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5cdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5cc020"/>
        <function-ref name="set" scoped="" ref="0x7f879c5cc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5cc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5cc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5cc760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5cc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5c9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5c9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5c9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5c9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5c9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5c8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5c81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5c8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5c84d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5c8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5c87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5c8980"/>
        <function-ref name="set" scoped="" ref="0x7f879c5c8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5c8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5c8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5c7120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5c4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5c4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5c4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5c4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5c47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5c4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5c4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5c4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5c4de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5c3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5c31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5c3340"/>
        <function-ref name="set" scoped="" ref="0x7f879c5c34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5c3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5c37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5c3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5c3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5c0d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5c0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5bf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5bf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5bf400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5bf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5bf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5bf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5bfa40"/>
        <function-ref name="get" scoped="" ref="0x7f879c5bfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5bfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5be020"/>
        <function-ref name="set" scoped="" ref="0x7f879c5be1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5be340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5be4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5be760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5bb740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5bb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5bbac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5bbc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5bbde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5ba1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5ba340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5ba4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5ba660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5ba7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5ba980"/>
        <function-ref name="set" scoped="" ref="0x7f879c5bab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5baca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5bae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5b9120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5b6100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5b6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5b6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5b6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5b67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5b6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5b6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5b6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5b6de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5b5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5b51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5b5340"/>
        <function-ref name="set" scoped="" ref="0x7f879c5b54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5b5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5b57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5b5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5b5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5b2d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5b2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5b10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5b1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5b1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5b1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5b1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5b18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5b1a40"/>
        <function-ref name="get" scoped="" ref="0x7f879c5b1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5b1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5b0020"/>
        <function-ref name="set" scoped="" ref="0x7f879c5b01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5b0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5b04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5b0760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5b08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5ad740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5ad740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5adac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5adc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5adde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5ac020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5ac1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5ac340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5ac4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5ac660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5ac7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5ac980"/>
        <function-ref name="set" scoped="" ref="0x7f879c5acb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5acca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5ace30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5ab120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5ab2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5a7100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5a7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5a7480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5a7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5a77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5a7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5a7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5a7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5a7de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c5a6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5a61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5a6340"/>
        <function-ref name="set" scoped="" ref="0x7f879c5a64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5a6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5a67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5a6a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5a6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c5a3d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c5a3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5a20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c5a2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5a2400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c5a2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c5a2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5a28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c5a2a40"/>
        <function-ref name="get" scoped="" ref="0x7f879c5a2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5a2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c5a1020"/>
        <function-ref name="set" scoped="" ref="0x7f879c5a11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c5a1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5a14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c5a1760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5a18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c59e740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c59e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c59eac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c59ec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c59ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c59d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c59d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c59d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c59d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c59d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c59d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c59d980"/>
        <function-ref name="set" scoped="" ref="0x7f879c59db10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c59dca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c59de30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c59c120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c59c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c599100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c599100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c599480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c599610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c5997a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c599930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c599ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c599c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c599de0"/>
        <function-ref name="get" scoped="" ref="0x7f879c598020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c5981b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c598340"/>
        <function-ref name="set" scoped="" ref="0x7f879c5984d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c598660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5987f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c598a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c598c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c595d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c595d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c5940e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c594270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c594400"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c594590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c594720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c5948b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c594a40"/>
        <function-ref name="get" scoped="" ref="0x7f879c594bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c594d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c593020"/>
        <function-ref name="set" scoped="" ref="0x7f879c5931b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c593340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c5934d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c593760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c5938f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c590740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c590740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c590ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c590c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c590de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c58f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c58f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c58f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c58f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c58f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c58f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c58f980"/>
        <function-ref name="set" scoped="" ref="0x7f879c58fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c58fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c58fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c58e120"/>
        <function-ref name="clr" scoped="" ref="0x7f879c58e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f879c58b100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f879c58b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c58b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c58b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c58b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c58b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c58bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c58bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c58bde0"/>
        <function-ref name="get" scoped="" ref="0x7f879c58a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c58a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c58a340"/>
        <function-ref name="set" scoped="" ref="0x7f879c58a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c58a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c58a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c58aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c58ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879c51cd20" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879c51cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879c519b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879c518550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879c518090"/>
        <function-ref name="overflow" scoped="" ref="0x7f879c518a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f879c517d90" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f879c517d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879c514bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879c513590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879c5130d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879c513a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f879c4fe020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879c4fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879c4fe3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879c4fe530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879c4fe6c0"/>
        <function-ref name="get" scoped="" ref="0x7f879c4fe850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879c4fe9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879c4feb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f879c4fed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879c4fd020"/>
        <function-ref name="overflow" scoped="" ref="0x7f879c4fd1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879c4fd340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879c4fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879c50ee50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879c50ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879c50dca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879c500670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879c5001b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879c500b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f879c4fa020" loc="47:../../../tos/platforms/shimmer2r/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879c4fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879c4fa3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879c4fa530"/>
        <function-ref name="led1On" scoped="" ref="0x7f879c4fa6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879c4fa850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879c4fa9e0"/>
        <function-ref name="get" scoped="" ref="0x7f879c4fab70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879c4fad00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879c4f94d0"/>
        <function-ref name="set" scoped="" ref="0x7f879c4f9020"/>
        <function-ref name="led0On" scoped="" ref="0x7f879c4f91b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f879c4f9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f879c4f3060" loc="51:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f879c4f3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4f33e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4f3570"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4f3700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4f3890"/>
        <function-ref name="get" scoped="" ref="0x7f879c4f3a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4f3bb0"/>
        <function-ref name="set" scoped="" ref="0x7f879c4f3d40"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879c4f6470" loc="47:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879c4f6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879c4f67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f879c4f2340" loc="52:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f879c4f2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4f26c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4f2850"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4f29e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4f2b70"/>
        <function-ref name="get" scoped="" ref="0x7f879c4f2d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4ed020"/>
        <function-ref name="set" scoped="" ref="0x7f879c4ed1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4ed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f879c4f6a70" loc="48:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879c4f6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879c4f6df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879c4f5020"/>
        <function-ref name="led1On" scoped="" ref="0x7f879c4f51b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879c4f5340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879c4f54d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c4f5660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879c4f57f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879c4f5e30"/>
        <function-ref name="set" scoped="" ref="0x7f879c4f5980"/>
        <function-ref name="led0On" scoped="" ref="0x7f879c4f5b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f879c4f5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f879c4ed660" loc="53:../../../tos/platforms/shimmer2r/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f879c4ed660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4ed9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4edb70"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4edd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4ec020"/>
        <function-ref name="get" scoped="" ref="0x7f879c4ec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4ec340"/>
        <function-ref name="set" scoped="" ref="0x7f879c4ec4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4ec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f879c4f7b10" loc="42:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f879c4f7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4d0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4d01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4d0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4d04d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c4d0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4d07f0"/>
        <function-ref name="set" scoped="" ref="0x7f879c4d0980"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4d0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f879c4d0e70" loc="43:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f879c4d0e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4cf220"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4cf3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4cf540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4cf6d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c4cf860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4cf9f0"/>
        <function-ref name="set" scoped="" ref="0x7f879c4cfb80"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4cfd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f879c4cd2e0" loc="45:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879c4cd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879c4cd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f879c4ce0f0" loc="44:../../../tos/platforms/shimmer2r/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f879c4ce0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4ce470"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4ce600"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4ce790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4ce920"/>
        <function-ref name="get" scoped="" ref="0x7f879c4ceab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4cec40"/>
        <function-ref name="set" scoped="" ref="0x7f879c4cedd0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879c4b92f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879c4b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4b9670"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4b9800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c4b9990"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4b9b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4b9cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c4b9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4b8020"/>
        <function-ref name="get" scoped="" ref="0x7f879c4b81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c4b8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c4b84d0"/>
        <function-ref name="set" scoped="" ref="0x7f879c4b8660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c4b87f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c4b8980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c4b8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4b8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879c4ca020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879c4ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4ca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4ca530"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4ca6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4ca850"/>
        <function-ref name="get" scoped="" ref="0x7f879c4ca9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4cab70"/>
        <function-ref name="set" scoped="" ref="0x7f879c4cad00"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879c4b5de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879c4b5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4b4180"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4b4310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c4b44a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4b4630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4b47c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c4b4950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4b4ae0"/>
        <function-ref name="get" scoped="" ref="0x7f879c4b4c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c4b4e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c4b3020"/>
        <function-ref name="set" scoped="" ref="0x7f879c4b31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c4b3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c4b34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c4b3760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4b38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879c4b6b90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879c4b6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4b5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4b51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4b5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4b54d0"/>
        <function-ref name="get" scoped="" ref="0x7f879c4b5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4b57f0"/>
        <function-ref name="set" scoped="" ref="0x7f879c4b5980"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4b5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879c4b0930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879c4b0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4b0cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4b0e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c4ae020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4ae340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c4ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4ae660"/>
        <function-ref name="get" scoped="" ref="0x7f879c4ae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c4ae980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c4aeb10"/>
        <function-ref name="set" scoped="" ref="0x7f879c4aeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c4aee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c4ad020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c4ad2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4ad440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879c4b1710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879c4b1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c4b1a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c4b1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c4b1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c4b0020"/>
        <function-ref name="get" scoped="" ref="0x7f879c4b01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c4b0340"/>
        <function-ref name="set" scoped="" ref="0x7f879c4b04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f879c4b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879a980a90" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a980a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879a980e10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879a97f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f879a97abe0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f879a97abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879a978020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879a971020" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a971020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879a9713a0"/>
        <function-ref name="configure" scoped="" ref="0x7f879a971530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f879a9782b0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f879a9782b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f879a978630"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f879a9787c0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f879a978950"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f879a978ae0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f879a978c70"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f879a978e00"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f879a977020"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f879a9771b0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879a977340"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f879a9774d0"/>
        <function-ref name="getData" scoped="" ref="0x7f879a977660"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f879a9777f0"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f879a977980"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f879a977c10"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f879a977da0"/>
        <function-ref name="getIV" scoped="" ref="0x7f879a976020"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f879a9761b0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f879a976340"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f879a9764d0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f879a976660"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f879a9767f0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f879a976980"/>
        <function-ref name="isI2C" scoped="" ref="0x7f879a976b10"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f879a976ca0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f879a976e30"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f879a975220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f879a9753b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f879a975540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f879a9756d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f879a975860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f879a9759f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f879a975b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f879a975d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f879a974020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f879a9741b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f879a974340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f879a9744d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f879a974660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f879a9747f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f879a974980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f879a974b10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f879a974ca0"/>
        <function-ref name="setData" scoped="" ref="0x7f879a974e30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f879a973020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f879a9731b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f879a973340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f879a9734d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f879a973660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f879a9737f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f879a973d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f879a972020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f879a9721b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f879a972340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f879a9724d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f879a972660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f879a9727f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f879a972980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f879a972b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f879a972ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f879a97a440" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879a97a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879a97a7c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f879a97a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a981e00" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a981e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a9801c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a980350"/>
        <function-ref name="request" scoped="" ref="0x7f879a9804e0"/>
        <function-ref name="granted" scoped="" ref="0x7f879a980670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a980800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f879a97fa50" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879a97fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f879a97fdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f879a97e020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f879a97e1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f879a97e340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f879a97e4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f879a97e660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f879a97e7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f879a97e980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f879a97eb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f879a97eca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f879a97ee30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f879a97d020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f879a97d1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f879a97d440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f879a97d5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f879a97d760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f879a97d8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f879a97da80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f879a97dc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f879a97dda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f879a97c020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f879a97c1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f879a97c340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f879a97c4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879a97c660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f879a97c9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f879a97cb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f879a97cd10"/>
        <function-ref name="tx" scoped="" ref="0x7f879a97b020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f879a97b1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f879a97b340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f879a97b4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f879a97b660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879a97b7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f879a97b980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879a97bb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879a97bca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879a97be30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879a97a020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879a97a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879a97f2b0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a97f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879a97f630"/>
        <function-ref name="userId" scoped="" ref="0x7f879a97f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879c4802c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c4802c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879c480640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879c4807d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879c47f8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c47f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879c47fc20"/>
        <function-ref name="configure" scoped="" ref="0x7f879c47fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f879c4844d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f879c4844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879c484850"/>
        <function-ref name="txDone" scoped="" ref="0x7f879c4849e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879c482020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879c482020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c4823a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c482530"/>
        <function-ref name="request" scoped="" ref="0x7f879c4826c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879c482850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c4829e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f879c4833f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f879c4833f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879c483770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879c480ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c480ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879c480e50"/>
        <function-ref name="userId" scoped="" ref="0x7f879c47f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f879c46abf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c46abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879c469020"/>
        <function-ref name="userId" scoped="" ref="0x7f879c4691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f879c47dd60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f879c47dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879c46b180"/>
        <function-ref name="txDone" scoped="" ref="0x7f879c46b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f879c46a5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f879c46a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879c46a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f879c46b710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f879c46b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879c46bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f879c46bd80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f879c46bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879c46a180"/>
        <function-ref name="txDone" scoped="" ref="0x7f879c46a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879c3ef020" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c3ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879c3ef3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879c3ef550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879c3eecd0" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c3eecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879c3ed0a0"/>
        <function-ref name="configure" scoped="" ref="0x7f879c3ed230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f879c3ef7a0" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879c3ef7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c3efb20"/>
        <function-ref name="requested" scoped="" ref="0x7f879c3efcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f879c3efe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c3ee020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879c3ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879c3f0210" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879c3f0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c3f05b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c3f0740"/>
        <function-ref name="request" scoped="" ref="0x7f879c3f08d0"/>
        <function-ref name="granted" scoped="" ref="0x7f879c3f0a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c3f0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879c3ee400" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c3ee400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879c3ee780"/>
        <function-ref name="userId" scoped="" ref="0x7f879c3ee910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a5a9c00" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a5a9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a5a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f879a5a82b0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f879a5a82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879a5a8630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879a5a87c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879a5a8950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879a5a8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879a5a23a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a5a23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879a5a2740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879a5a28d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879a5a0210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a5a0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879a5a05b0"/>
        <function-ref name="configure" scoped="" ref="0x7f879a5a0740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f879a5a09d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f879a5a09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879a5a0d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879a59f020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879a59f1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879a59f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f879a5a2b20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879a5a2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a5a1020"/>
        <function-ref name="requested" scoped="" ref="0x7f879a5a11b0"/>
        <function-ref name="granted" scoped="" ref="0x7f879a5a1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a5a14d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879a5a1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879a59f590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879a59f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879a59f910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879a59faa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f879a59fc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879a59fdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879a59e020"/>
        <function-ref name="get" scoped="" ref="0x7f879a59e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879a59e340"/>
        <function-ref name="led0On" scoped="" ref="0x7f879a59e980"/>
        <function-ref name="set" scoped="" ref="0x7f879a59e660"/>
        <function-ref name="led2On" scoped="" ref="0x7f879a59e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879a59e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a5a64d0" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a5a64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a5a6870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a5a6a00"/>
        <function-ref name="request" scoped="" ref="0x7f879a5a6b90"/>
        <function-ref name="granted" scoped="" ref="0x7f879a5a6d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a5a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879a5a18b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a5a18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879a5a1c30"/>
        <function-ref name="userId" scoped="" ref="0x7f879a5a1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f879a59ec50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f879a59ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879a59d020"/>
        <function-ref name="runTask" scoped="" ref="0x7f879a59d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f879c3e6d70" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f879c3e6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f879c3e3180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f879c3e3310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f879c3e34a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f879c3e3630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f879c3e37c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f879c3e3950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f879c3e3ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f879c3e3c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879c3e3e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f879c3e2020"/>
        <function-ref name="getData" scoped="" ref="0x7f879c3e21b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f879c3e2340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f879c3e24d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f879c3e2760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f879c3e28f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f879c3e2a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f879c3e2c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f879c3e2da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f879c3e1020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f879c3e11b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f879c3e1340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f879c3e14d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f879c3e1660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f879c3e17f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f879c3e1980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f879c3e1d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f879c3e0020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f879c3e01b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f879c3e0340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f879c3e04d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f879c3e0660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f879c3e07f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f879c3e0980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f879c3e0b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f879c3e0ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f879c3e0e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f879c3df020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f879c3df1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f879c3df340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f879c3df4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f879c3df660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f879c3df7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f879c3df980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f879c3dfb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f879c3dfca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f879c3dfe30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f879c3de020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f879c3de1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f879c3de340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f879c3de8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f879c3dea60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f879c3debf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f879c3ded80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f879c3dd020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f879c3dd1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f879c3dd340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f879c3dd4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f879c3dd660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f879c3dd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f879c3d3700" loc="41:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f879c3d3700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f879c3d3a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f879c3d3c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f879c3d3da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f879c3d2020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f879c3d21b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f879c3d2340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f879c3d24d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f879c3d2660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f879c3d27f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f879c3d2980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f879c3d2b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f879c3d2ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f879c3d2e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f879c3d1120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f879c3d12b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f879c3d1440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f879c3d15d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f879c3d1760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f879c3d18f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f879c3d1a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f879c3d1c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f879c3d1da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f879c3d0020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f879c3d01b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879c3d0340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f879c3d06d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f879c3d0860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f879c3d09f0"/>
        <function-ref name="tx" scoped="" ref="0x7f879c3d0b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f879c3d0d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f879c3cf020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f879c3cf1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f879c3cf340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879c3cf4d0"/>
        <function-ref name="rx" scoped="" ref="0x7f879c3cf660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879c3cf7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879c3cf980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879c3cfb10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879c3cfca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879c3cfe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f879c3cc1f0" loc="43:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f879c3cc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c3cc570"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c3cc700"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c3cc890"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c3cca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c3ccbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c3ccd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c3cb020"/>
        <function-ref name="get" scoped="" ref="0x7f879c3cb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c3cb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c3cb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f879c3cb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c3cb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c3cb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c3cbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f879c3cbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f879c3dc940" loc="39:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f879c3dc940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f879c3dccc0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f879c3dce50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f879c3d9020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f879c3d91b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f879c3d9340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f879c3d94d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f879c3d9660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f879c3d97f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879c3d9980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f879c3d9b10"/>
        <function-ref name="getData" scoped="" ref="0x7f879c3d9ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f879c3d9e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f879c3d8020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f879c3d82b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f879c3d8440"/>
        <function-ref name="getIV" scoped="" ref="0x7f879c3d85d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f879c3d8760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f879c3d88f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f879c3d8a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f879c3d8c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f879c3d8da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f879c3d7020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f879c3d71b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f879c3d7340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f879c3d74d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f879c3d7860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f879c3d79f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f879c3d7b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f879c3d7d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f879c3d6020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f879c3d61b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f879c3d6340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f879c3d64d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f879c3d6660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f879c3d67f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f879c3d6980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f879c3d6b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f879c3d6ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f879c3d6e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f879c3d5020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f879c3d51b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f879c3d5340"/>
        <function-ref name="setData" scoped="" ref="0x7f879c3d54d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f879c3d5660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f879c3d57f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f879c3d5980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f879c3d5b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f879c3d5ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f879c3d5e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f879c3d4420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f879c3d45b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f879c3d4740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f879c3d48d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f879c3d4a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f879c3d4bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f879c3d4d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f879c3d3020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f879c3d31b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f879c3d3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f879c3ce250" loc="42:../../../tos/platforms/shimmer/chips/msp430/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f879c3ce250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c3ce5d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c3ce760"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c3ce8f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c3cea80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c3cec10"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c3ceda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c3cd020"/>
        <function-ref name="get" scoped="" ref="0x7f879c3cd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c3cd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c3cd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f879c3cd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c3cd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c3cd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c3cdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f879c3cdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f879c31a920" loc="37:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f879c31a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f879c31aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f879c319020" loc="38:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879c319020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c3193a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c319530"/>
        <function-ref name="request" scoped="" ref="0x7f879c3196c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879c319850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c3199e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f879c31a0c0" loc="36:../../../tos/platforms/shimmer2r/ShimmerSerialP.nc">
      <component-ref qname="ShimmerSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f879c31a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879c31a440"/>
        <function-ref name="stop" scoped="" ref="0x7f879c31a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f879c307a30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f879c307a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f879c307db0"/>
        <function-ref name="offset" scoped="" ref="0x7f879c304020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f879c3041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f879c2e9bf0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f879c2e9bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f879c2c4ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f879c2c3880"/>
        <function-ref name="element" scoped="" ref="0x7f879c2c2020"/>
        <function-ref name="full" scoped="" ref="0x7f879c2c5ce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f879c2c4660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879c2c31d0"/>
        <function-ref name="empty" scoped="" ref="0x7f879c2c5860"/>
        <function-ref name="size" scoped="" ref="0x7f879c2c41e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f879c2baa20" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f879c2baa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f879c2bb920"/>
        <function-ref name="enqueue" scoped="" ref="0x7f879c2b86d0"/>
        <function-ref name="element" scoped="" ref="0x7f879c2b8d40"/>
        <function-ref name="full" scoped="" ref="0x7f879c2bcaf0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f879c2bb4a0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879c2b8020"/>
        <function-ref name="empty" scoped="" ref="0x7f879c2bc670"/>
        <function-ref name="size" scoped="" ref="0x7f879c2bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f879c2b7440" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879c2b7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879c2b77c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879c2b7950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879c2b7ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879c2b7c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879c2b7e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f879c2b60c0" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879c2b60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879c2b6440"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879c2b65d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879c2b6760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879c2b68f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879c2b6a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f879c2b0500" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f879c2b0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879c2b0880"/>
        <function-ref name="runTask" scoped="" ref="0x7f879c2b0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879c2c0a60" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879c2c0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879c2c0de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879c2b6d00" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879c2b6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879c2b50a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879c2b5230"/>
        <function-ref name="led1On" scoped="" ref="0x7f879c2b53c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879c2b5550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879c2b56e0"/>
        <function-ref name="get" scoped="" ref="0x7f879c2b5870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879c2b5a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879c2b41b0"/>
        <function-ref name="set" scoped="" ref="0x7f879c2b5b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f879c2b5d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f879c2b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f879c2ba1a0" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f879c2ba1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f879c2ba520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f879c29abe0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f879c29abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f879c297020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879c294020" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879c294020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879c2943a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f879c294680" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f879c294680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f879c294a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f879c28d380" loc="39:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f879c28d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f879c28d700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f879c28daa0" loc="40:../../../tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f879c28daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879c28de20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879c28a020"/>
        <function-ref name="start" scoped="" ref="0x7f879c28a1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f879c28a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f879c295e00" loc="51:../../../tos/platforms/shimmer/DemoSensorC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f879c295e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879c285a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f879bcc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f879a55dbc0" loc="44:../../../tos/platforms/shimmer/VoltageC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f879a55dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879a55c7e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f879a55cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f879a55aaf0" loc="44:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f879a55aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879a559750"/>
        <function-ref name="readDone" scoped="" ref="0x7f879a559bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f879a554d90" loc="48:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f879a554d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879a5539e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f879a552020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f879a5582f0" loc="45:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f879a5582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f879a557e60"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f879a557020"/>
        <function-ref name="read" scoped="" ref="0x7f879a557990"/>
        <function-ref name="readDone" scoped="" ref="0x7f879a555940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a554020" loc="47:../../../tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a554020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a5543a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a554530"/>
        <function-ref name="request" scoped="" ref="0x7f879a5546c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879a554850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a5549e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f879a54e690" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f879a54e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879a54d390"/>
        <function-ref name="readDone" scoped="" ref="0x7f879a54d810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f879a54c020" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a54c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a54cc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7f879c23a020" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f879c23a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c23a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c23a530"/>
        <function-ref name="request" scoped="" ref="0x7f879c23a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879c23a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c23a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f879c243ad0" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f879c243ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879c241750"/>
        <function-ref name="readDone" scoped="" ref="0x7f879c241bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f879c240950" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f879c240950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879c23f5a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f879c23fa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7f879c23e6c0" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7f879c23e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c23ea40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c23ebd0"/>
        <function-ref name="request" scoped="" ref="0x7f879c23ed60"/>
        <function-ref name="granted" scoped="" ref="0x7f879c23d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c23d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f879c2395c0" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f879c2395c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879c238240"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f879c227b10" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f879c227b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879c236020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f879c2361b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f879c236340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f879c2364d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f879c236660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f879c2367f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f879c236980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7f879c23db20" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7f879c23db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c23b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c23b1b0"/>
        <function-ref name="request" scoped="" ref="0x7f879c23b340"/>
        <function-ref name="granted" scoped="" ref="0x7f879c23b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c23b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f879c20a5c0" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7f879c20a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879c20a940"/>
        <function-ref name="runTask" scoped="" ref="0x7f879c20aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f879a538020" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f879a538020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879a5383a0"/>
        <function-ref name="configure" scoped="" ref="0x7f879a538530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f879a5386c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f879a539020" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879a539020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879a5393a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f879a539530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f879a5396c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f879a539850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f879a5399e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f879a539b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f879a539d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f879a538910" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f879a538910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f879a538c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f879a538e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f879a537280" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a537280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a536020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a53a3a0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a53a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a53a720"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a53a8b0"/>
        <function-ref name="request" scoped="" ref="0x7f879a53aa40"/>
        <function-ref name="granted" scoped="" ref="0x7f879a53abd0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a53ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f879c1ce960" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f879c1ce960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879c1cece0"/>
        <function-ref name="configure" scoped="" ref="0x7f879c1cee70"/>
        <function-ref name="dataReady" scoped="" ref="0x7f879c1cd030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f879c1cb1d0" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f879c1cb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879c1cb550"/>
        <function-ref name="stop" scoped="" ref="0x7f879c1cb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f879c1cd920" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f879c1cd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f879c1cdca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f879c1cde30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f879c1cf1d0" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f879c1cf1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879c1cf550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f879c1cf6e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f879c1cf870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f879c1cfa00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f879c1cfb90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f879c1cfd20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f879c1ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879c1dccc0" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879c1dccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c1d10a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c1d1230"/>
        <function-ref name="request" scoped="" ref="0x7f879c1d13c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879c1d1550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c1d16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f879c1c4af0" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f879c1c4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879c1c4e70"/>
        <function-ref name="configure" scoped="" ref="0x7f879c1c3030"/>
        <function-ref name="dataReady" scoped="" ref="0x7f879c1c31c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f879c1b20d0" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f879c1b20d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f879c1b2450"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f879c1b25e0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f879c1b2770"/>
        <function-ref name="isBusy" scoped="" ref="0x7f879c1b2900"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f879c1b2a90"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f879c1b2c20"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f879c1b2db0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f879c1bf020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f879c1bf1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f879c1bf340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f879c1bf4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f879c1bf660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f879c1bf7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f879c1bfa80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f879c1bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7f879c1a4c80" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f879c1a4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c1a30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c1a3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c1a33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c1a3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c1a36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c1a3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c1a3a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c1a3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c1a3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c1a2020"/>
        <function-ref name="set" scoped="" ref="0x7f879c1a21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c1a2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c1a24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c1a2760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c1a28f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f879c1aee60" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f879c1aee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879c1ad210"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879c1ad3a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879c1ad530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879c1ad6c0"/>
        <function-ref name="fired" scoped="" ref="0x7f879c1ad850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f879c1b1880" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f879c1b1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879c1b1c00"/>
        <function-ref name="getControl" scoped="" ref="0x7f879c1b1d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879c1b0020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879c1b01b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879c1b0340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879c1b04d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879c1b0660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879c1b07f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879c1b0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f879c1c1910" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f879c1c1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879c1c1c90"/>
        <function-ref name="stop" scoped="" ref="0x7f879c1c1e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7f879c1a8c80" loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f879c1a8c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c1a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c1a7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c1a73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c1a7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c1a76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c1a7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c1a7a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c1a7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c1a7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c1a6020"/>
        <function-ref name="set" scoped="" ref="0x7f879c1a61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c1a6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c1a64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c1a6760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c1a68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f879c1c3ab0" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f879c1c3ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f879c1c3e30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f879c1c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7f879c19ec80" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f879c19ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c19d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c19d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c19d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c19d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c19d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c19d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c19da00"/>
        <function-ref name="get" scoped="" ref="0x7f879c19db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c19dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c19c020"/>
        <function-ref name="set" scoped="" ref="0x7f879c19c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c19c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c19c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c19c760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c19c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7f879c1adbe0" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f879c1adbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c1ab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c1ab230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c1ab3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c1ab550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c1ab6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c1ab870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c1aba00"/>
        <function-ref name="get" scoped="" ref="0x7f879c1abb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c1abd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c1aa020"/>
        <function-ref name="set" scoped="" ref="0x7f879c1aa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c1aa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c1aa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c1aa760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c1aa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879c1c6660" loc="40:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879c1c6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879c1c69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7f879c1a2c80" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f879c1a2c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c1a10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c1a1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c1a13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c1a1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c1a16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c1a1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c1a1a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c1a1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c1a1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c1a0020"/>
        <function-ref name="set" scoped="" ref="0x7f879c1a01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c1a0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c1a04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c1a0760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c1a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f879c1be020" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f879c1be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879c1be3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879c1be530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879c1be6c0"/>
        <function-ref name="get" scoped="" ref="0x7f879c1be850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879c1be9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879c1beb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f879c1bed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879c1b1020"/>
        <function-ref name="overflow" scoped="" ref="0x7f879c1b11b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879c1b1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879c1b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f879c1c0280" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f879c1c0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879c1c0600"/>
        <function-ref name="userId" scoped="" ref="0x7f879c1c0790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f879c1b0d30" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f879c1b0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879c1af0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879c1af270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879c1af400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879c1af590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879c1af720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879c1af8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879c1afa40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879c1afbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879c1afd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f879c1c5370" loc="41:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f879c1c5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879c1c56f0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f879c1c5880"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f879c1c5a10"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f879c1c5ba0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f879c1c5d30"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f879c1c4020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f879c1c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7f879c1a6c80" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f879c1a6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c1a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c1a5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c1a53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c1a5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c1a56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c1a5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c1a5a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c1a5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c1a5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c1a4020"/>
        <function-ref name="set" scoped="" ref="0x7f879c1a41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c1a4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c1a44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c1a4760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c1a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f879c1ae120" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f879c1ae120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879c1ae4a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879c1ae630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879c1ae7c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879c1ae950"/>
        <function-ref name="fired" scoped="" ref="0x7f879c1aeae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7f879c1aac80" loc="55:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f879c1aac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c1a90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c1a9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c1a93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c1a9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c1a96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c1a9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c1a9a00"/>
        <function-ref name="get" scoped="" ref="0x7f879c1a9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c1a9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c1a8020"/>
        <function-ref name="set" scoped="" ref="0x7f879c1a81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c1a8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c1a84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c1a8760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c1a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7f879c1a0c80" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f879c1a0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879c19f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879c19f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879c19f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879c19f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879c19f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879c19f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879c19fa00"/>
        <function-ref name="get" scoped="" ref="0x7f879c19fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879c19fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879c19e020"/>
        <function-ref name="set" scoped="" ref="0x7f879c19e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879c19e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879c19e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879c19e760"/>
        <function-ref name="clr" scoped="" ref="0x7f879c19e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f879c0df020" loc="46:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f879c0df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f879c0df3a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f879c0df530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f879c0df6c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f879c0df850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f879c0df9e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f879c0dfb70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f879c0dfd00"/>
        <function-ref name="startConversion" scoped="" ref="0x7f879c0de020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f879c0de1b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f879c0de340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f879c0de4d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f879c0de660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f879c0de7f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f879c0dea80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f879c0dec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879c04f3a0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879c04f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879c04f740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879c04f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879c04e570" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879c04e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879c04e910"/>
        <function-ref name="configure" scoped="" ref="0x7f879c04eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879c050520" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879c050520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c0508c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c050a50"/>
        <function-ref name="request" scoped="" ref="0x7f879c050be0"/>
        <function-ref name="granted" scoped="" ref="0x7f879c050d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c04f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879c04fb20" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879c04fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879c04e020"/>
        <function-ref name="userId" scoped="" ref="0x7f879c04e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a513ca0" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a513ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a5120a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f879a512330" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f879a512330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879a5126b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879a512840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879a5129d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879a512b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879a50f020" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a50f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879a50f3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879a50f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879a50e0d0" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a50e0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879a50e470"/>
        <function-ref name="configure" scoped="" ref="0x7f879a50e600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f879a50e890" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f879a50e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879a50ec10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879a50eda0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879a50c020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879a50c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a510270" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a510270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a510610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a5107a0"/>
        <function-ref name="request" scoped="" ref="0x7f879a510930"/>
        <function-ref name="granted" scoped="" ref="0x7f879a510ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a510c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879a50f7a0" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a50f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879a50fb20"/>
        <function-ref name="userId" scoped="" ref="0x7f879a50fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f879a50c480" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f879a50c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879a50c800"/>
        <function-ref name="runTask" scoped="" ref="0x7f879a50c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f879c031740" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f879c031740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879c0303d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f879c0321d0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f879c0321d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c032550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c0326e0"/>
        <function-ref name="request" scoped="" ref="0x7f879c032870"/>
        <function-ref name="granted" scoped="" ref="0x7f879c032a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c032b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f879c037d20" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f879c037d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879c0340e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879c034270"/>
        <function-ref name="request" scoped="" ref="0x7f879c034400"/>
        <function-ref name="granted" scoped="" ref="0x7f879c034590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879c034720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f879c02c9a0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f879c02c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f879c02cd20"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f879c02b020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f879c02b1b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f879c02b340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f879c02b4d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f879c02b660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f879c02b7f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f879c02b980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f879c02bb10"/>
        <function-ref name="getMem" scoped="" ref="0x7f879c02bca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f879c02be30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f879c02a020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f879c02a1b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f879c02a440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f879c02a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f879c01b840" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f879c01b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879c017cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f879c018300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879c0170d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879c018c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f879c011660"/>
        <function-ref name="gett0" scoped="" ref="0x7f879c0111e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879c018780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879c01a480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879c0176e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879c01a950"/>
        <function-ref name="stop" scoped="" ref="0x7f879c01ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f879c02de00" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f879c02de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879c02c1c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879c02c350"/>
        <function-ref name="start" scoped="" ref="0x7f879c02c4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f879c02c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f879c011d00" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f879c011d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879c00c220"/>
        <function-ref name="fired" scoped="" ref="0x7f879c00e7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879c00d590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879c00d110"/>
        <function-ref name="getdt" scoped="" ref="0x7f879c00cb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f879c00c6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879c00ec40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879c010940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879c00dba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879c010e10"/>
        <function-ref name="stop" scoped="" ref="0x7f879c00e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f879c02d240" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f879c02d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879c02d5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879c02d750"/>
        <function-ref name="start" scoped="" ref="0x7f879c02d8e0"/>
        <function-ref name="stop" scoped="" ref="0x7f879c02da70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f879c0292b0" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f879c0292b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879c01c870"/>
        <function-ref name="fired" scoped="" ref="0x7f879c028e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879c01dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879c01d780"/>
        <function-ref name="getdt" scoped="" ref="0x7f879c01b1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f879c01ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879c01d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879c028020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879c01c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879c0284f0"/>
        <function-ref name="stop" scoped="" ref="0x7f879c0289c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f879bfbc920" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f879bfbc920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879bfbb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f879bfbd540" loc="42:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f879bfbd540"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879bfbd8c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879bfbda50"/>
        <function-ref name="start" scoped="" ref="0x7f879bfbdbe0"/>
        <function-ref name="stop" scoped="" ref="0x7f879bfbdd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f879bfc0ad0" loc="40:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f879bfc0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bfc0e50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bfbe020"/>
        <function-ref name="request" scoped="" ref="0x7f879bfbe1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f879bfbe340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bfbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f879bfc16f0" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f879bfc16f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bfc1a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bfc1c00"/>
        <function-ref name="request" scoped="" ref="0x7f879bfc1d90"/>
        <function-ref name="granted" scoped="" ref="0x7f879bfc0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bfc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f879bfb92a0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f879bfb92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879bfb9620"/>
        <function-ref name="runTask" scoped="" ref="0x7f879bfb97b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f879bfbe860" loc="41:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f879bfbe860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879bfbebe0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879bfbed70"/>
        <function-ref name="start" scoped="" ref="0x7f879bfbd020"/>
        <function-ref name="stop" scoped="" ref="0x7f879bfbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879bdf8370" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879bdf8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879bdf5870"/>
        <function-ref name="fired" scoped="" ref="0x7f879bdf7e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879bdf6c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879bdf6780"/>
        <function-ref name="getdt" scoped="" ref="0x7f879bdf31e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f879bdf5cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879bdf6300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879bdf7020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879bdf5260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879bdf74f0"/>
        <function-ref name="stop" scoped="" ref="0x7f879bdf79c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f879bf7f020" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879bf7c630"/>
        <function-ref name="fired" scoped="" ref="0x7f879bf7ea60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879bf7d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879bf7d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f879bf7b020"/>
        <function-ref name="gett0" scoped="" ref="0x7f879bf7cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879bf7d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879bf7fc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879bf7c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879bf7e110"/>
        <function-ref name="stop" scoped="" ref="0x7f879bf7e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f879bf77c30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f879bf77c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879bf72110"/>
        <function-ref name="fired" scoped="" ref="0x7f879bf756a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879bf734a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879bf73020"/>
        <function-ref name="getdt" scoped="" ref="0x7f879bf72a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f879bf72590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879bf75b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879bf76860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879bf73ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879bf76d30"/>
        <function-ref name="stop" scoped="" ref="0x7f879bf75220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f879bf6c500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f879bf6c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879bf6f170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879bf7be50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879bf7be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879bf77210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879be95870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879be95870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879be91090"/>
        <function-ref name="fired" scoped="" ref="0x7f879be92090"/>
        <function-ref name="startAt" scoped="" ref="0x7f879be92a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879be92550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879be91550"/>
        <function-ref name="start" scoped="" ref="0x7f879be936a0"/>
        <function-ref name="stop" scoped="" ref="0x7f879be93bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879be95020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879be95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879be953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a4d8020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a4d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a4d6870"/>
        <function-ref name="fired" scoped="" ref="0x7f879a4d7840"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a4d6220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a4d7d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a4d6d30"/>
        <function-ref name="start" scoped="" ref="0x7f879a4d8e30"/>
        <function-ref name="stop" scoped="" ref="0x7f879a4d7380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a4d9720" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a4d9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a4d9aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f879a4c05d0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a4c05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879a4c0950"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879a4c0ae0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879a4c0c70"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879a4c0e00"/>
        <function-ref name="fired" scoped="" ref="0x7f879a4bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f879a4c4c50" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a4c4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879a4c2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879a4c21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a4c2340"/>
        <function-ref name="get" scoped="" ref="0x7f879a4c24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a4c2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879a4c27f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879a4c2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879a4c2b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f879a4c2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879a4c2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879a4c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f879a4c12b0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a4c12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879a4c1630"/>
        <function-ref name="getControl" scoped="" ref="0x7f879a4c17c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a4c1950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879a4c1ae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879a4c1c70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a4c1e00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879a4c0020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879a4c01b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879a4c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f879bf493f0" loc="52:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f879bf493f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879bf49770"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879bf49900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879bf49a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879bf49c20"/>
        <function-ref name="fired" scoped="" ref="0x7f879bf49db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f879bf50cd0" loc="50:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879bf50cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879bf4d0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879bf4d230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879bf4d3c0"/>
        <function-ref name="get" scoped="" ref="0x7f879bf4d550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879bf4d6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879bf4d870"/>
        <function-ref name="getMode" scoped="" ref="0x7f879bf4da00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879bf4db90"/>
        <function-ref name="overflow" scoped="" ref="0x7f879bf4dd20"/>
        <function-ref name="setMode" scoped="" ref="0x7f879bf4c020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879bf4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f879bf4ca40" loc="51:../../../tos/platforms/shimmer2r/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879bf4ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879bf4cdc0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879bf4b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879bf4b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879bf4b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879bf4b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879bf4b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879bf4b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879bf4b980"/>
        <function-ref name="setControl" scoped="" ref="0x7f879bf4bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f879a4b6440" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a4b6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879a4b67c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879a4b6950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879a4b6ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879a4b6c70"/>
        <function-ref name="fired" scoped="" ref="0x7f879a4b6e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f879a4b9910" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a4b9910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879a4b9c90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879a4b9e20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a4b8020"/>
        <function-ref name="get" scoped="" ref="0x7f879a4b81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a4b8340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879a4b84d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879a4b8660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879a4b87f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879a4b8980"/>
        <function-ref name="setMode" scoped="" ref="0x7f879a4b8b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879a4b8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a4bd720" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a4bd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a4b9020"/>
        <function-ref name="fired" scoped="" ref="0x7f879a4ba020"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a4ba9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a4ba4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a4b94e0"/>
        <function-ref name="start" scoped="" ref="0x7f879a4bc5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f879a4bcac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a4bee60" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a4bee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a4bd210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f879a4b7020" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a4b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879a4b73a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879a4b7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a4b76c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879a4b7850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879a4b79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a4b7b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879a4b7d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879a4b6020"/>
        <function-ref name="setControl" scoped="" ref="0x7f879a4b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879bef8b70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879bef8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879bef59b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879bef4360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879bef5e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f879bef4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f879bed30f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f879bed30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879bed1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879bed19a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879bed14e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879bed1e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879bef1cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879bef1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879bed5b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879bed4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879bed4090"/>
        <function-ref name="overflow" scoped="" ref="0x7f879bed4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a4d21d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a4d21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a4d0b30"/>
        <function-ref name="fired" scoped="" ref="0x7f879a4d19f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a4d04e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a4d0020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a4cf020"/>
        <function-ref name="start" scoped="" ref="0x7f879a4d1020"/>
        <function-ref name="stop" scoped="" ref="0x7f879a4d1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f879a4cdb90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f879a4cdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a4c94e0"/>
        <function-ref name="fired" scoped="" ref="0x7f879a4ca4e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a4cae60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a4ca9a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a4c99a0"/>
        <function-ref name="start" scoped="" ref="0x7f879a4cb9d0"/>
        <function-ref name="stop" scoped="" ref="0x7f879a4ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f879a4cf690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879a4cf690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879a4ce5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879a4cd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879a4cea70"/>
        <function-ref name="overflow" scoped="" ref="0x7f879a4cd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f879be5f9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f879be5f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879be5fd40"/>
        <function-ref name="runTask" scoped="" ref="0x7f879be5e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f879be63850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879be63850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879be5f090"/>
        <function-ref name="fired" scoped="" ref="0x7f879be61090"/>
        <function-ref name="startAt" scoped="" ref="0x7f879be61a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879be61550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879be5f550"/>
        <function-ref name="start" scoped="" ref="0x7f879be626a0"/>
        <function-ref name="stop" scoped="" ref="0x7f879be62bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879be682f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879be682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879be64870"/>
        <function-ref name="fired" scoped="" ref="0x7f879be67e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879be66c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879be66780"/>
        <function-ref name="getdt" scoped="" ref="0x7f879be631e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f879be64cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879be66300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879be67020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879be64260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879be674f0"/>
        <function-ref name="stop" scoped="" ref="0x7f879be679c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f879be0ea00" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f879be0ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879be0ed80"/>
        <function-ref name="runTask" scoped="" ref="0x7f879be0d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f879be13640" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f879be13640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879be0fc40"/>
        <function-ref name="fired" scoped="" ref="0x7f879be111e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879be0f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879be11ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f879be0e590"/>
        <function-ref name="gett0" scoped="" ref="0x7f879be0e110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879be11660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879be12390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879be0f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879be12860"/>
        <function-ref name="stop" scoped="" ref="0x7f879be12d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879be19150" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879be19150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879be15700"/>
        <function-ref name="fired" scoped="" ref="0x7f879be18c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879be16a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879be165b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f879be13090"/>
        <function-ref name="gett0" scoped="" ref="0x7f879be15ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879be16110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879be19d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879be150d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879be182a0"/>
        <function-ref name="stop" scoped="" ref="0x7f879be18790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f879be0b790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f879be0b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879be0a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f879be0aa60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879be0aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879bdff890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879bdfe260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879bdffd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f879bdfe720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879bdf2d10" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879bdf2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879bdee220"/>
        <function-ref name="fired" scoped="" ref="0x7f879bdf07c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879bdef590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879bdef110"/>
        <function-ref name="getdt" scoped="" ref="0x7f879bdeeb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f879bdee6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879bdf0c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879bdf1940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879bdefba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879bdf1e10"/>
        <function-ref name="stop" scoped="" ref="0x7f879bdf0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879bdeb750" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879bdeb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879bde8c40"/>
        <function-ref name="fired" scoped="" ref="0x7f879bde91e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879bde8020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879bde9ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f879bde6590"/>
        <function-ref name="gett0" scoped="" ref="0x7f879bde6110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879bde9660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879bdea390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879bde8630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879bdea860"/>
        <function-ref name="stop" scoped="" ref="0x7f879bdead30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f879a529a40" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f879a529a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a5286b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f879a528cc0" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f879a528cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a526980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f879a5460e0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a5460e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a546d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f879a54a380" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f879a54a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f879a549e60"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f879a549020"/>
        <function-ref name="read" scoped="" ref="0x7f879a549990"/>
        <function-ref name="readDone" scoped="" ref="0x7f879a547940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7f879bdaf720" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879bdaf720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879bdafaa0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f879bdafc30"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f879bdafdc0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f879bdae020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f879bdae1b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f879bdae340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f879bdae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f879bdb0020" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f879bdb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879bdb0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f879bdb59f0" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f879bdb59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f879bdb34f0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f879bdb4670"/>
        <function-ref name="read" scoped="" ref="0x7f879bdb3020"/>
        <function-ref name="readDone" scoped="" ref="0x7f879bdb2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f879bdaece0" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879bdaece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bdad0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bdad230"/>
        <function-ref name="request" scoped="" ref="0x7f879bdad3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879bdad550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bdad6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7f879bd76020" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7f879bd76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879bd763a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f879bd76530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7f879bd85600" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7f879bd85600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879bd85980"/>
        <function-ref name="runTask" scoped="" ref="0x7f879bd85b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7f879bd7fd50" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7f879bd7fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879bd7e100"/>
        <function-ref name="runTask" scoped="" ref="0x7f879bd7e290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f879bda1900" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879bda1900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879bd9d1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f879bd9e1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879bd9eb30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879bd9e670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879bd9d670"/>
        <function-ref name="start" scoped="" ref="0x7f879bd9f780"/>
        <function-ref name="stop" scoped="" ref="0x7f879bd9fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879bda9bc0" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879bda9bc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f879d44a800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f879d44a800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879bda8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f879bda2580" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f879bda2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879bda11f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f879bda5d50" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f879bda5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879bda3100"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f879bda3290"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f879bda3420"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f879bda35b0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f879bda3740"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f879bda38d0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f879bda3a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f879bda89c0" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f879bda89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f879bda64f0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f879bda75f0"/>
        <function-ref name="read" scoped="" ref="0x7f879bda6020"/>
        <function-ref name="readDone" scoped="" ref="0x7f879bda5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879bd3a4f0" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879bd3a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879bd38db0"/>
        <function-ref name="fired" scoped="" ref="0x7f879bd39da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879bd38760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879bd382a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879bd372a0"/>
        <function-ref name="start" scoped="" ref="0x7f879bd393d0"/>
        <function-ref name="stop" scoped="" ref="0x7f879bd398e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879bd3bb10" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879bd3bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879bd3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a427ca0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a427ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a4234e0"/>
        <function-ref name="fired" scoped="" ref="0x7f879a4254e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a425e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a4259a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a4239a0"/>
        <function-ref name="start" scoped="" ref="0x7f879a426ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f879a425020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a427450" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a427450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a4277d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f879a40d440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a40d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879a40d7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879a40d950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879a40dae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879a40dc70"/>
        <function-ref name="fired" scoped="" ref="0x7f879a40de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f879a410880" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a410880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879a410c00"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879a410d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a40f020"/>
        <function-ref name="get" scoped="" ref="0x7f879a40f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a40f340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879a40f4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879a40f660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879a40f7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879a40f980"/>
        <function-ref name="setMode" scoped="" ref="0x7f879a40fb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879a40fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f879a40e020" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a40e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879a40e3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879a40e530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a40e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879a40e850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879a40e9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a40eb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879a40ed00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879a40d020"/>
        <function-ref name="setControl" scoped="" ref="0x7f879a40d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f879a4030c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a4030c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879a403440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879a4035d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879a403760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879a4038f0"/>
        <function-ref name="fired" scoped="" ref="0x7f879a403a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f879a407710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a407710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879a407a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879a407c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a407db0"/>
        <function-ref name="get" scoped="" ref="0x7f879a405020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a4051b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879a405340"/>
        <function-ref name="getMode" scoped="" ref="0x7f879a4054d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879a405660"/>
        <function-ref name="overflow" scoped="" ref="0x7f879a4057f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879a405980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879a405b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a40a5b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a40a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a408df0"/>
        <function-ref name="fired" scoped="" ref="0x7f879a409df0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a4087a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a4082e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a4072e0"/>
        <function-ref name="start" scoped="" ref="0x7f879a409420"/>
        <function-ref name="stop" scoped="" ref="0x7f879a409930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a40bca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a40bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a40a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f879a405da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a405da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879a404180"/>
        <function-ref name="getControl" scoped="" ref="0x7f879a404310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a4044a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879a404630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879a4047c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a404950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879a404ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879a404c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f879a404e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a420020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a420020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a41e870"/>
        <function-ref name="fired" scoped="" ref="0x7f879a41f840"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a41e220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a41fd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a41ed30"/>
        <function-ref name="start" scoped="" ref="0x7f879a420e30"/>
        <function-ref name="stop" scoped="" ref="0x7f879a41f380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f879a41a780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f879a41a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a416020"/>
        <function-ref name="fired" scoped="" ref="0x7f879a418020"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a4189a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a4184e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a4164e0"/>
        <function-ref name="start" scoped="" ref="0x7f879a4195d0"/>
        <function-ref name="stop" scoped="" ref="0x7f879a419ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f879a41c3d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879a41c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879a41b240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879a41bbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879a41b700"/>
        <function-ref name="overflow" scoped="" ref="0x7f879a41a0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f879bd07bf0" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7f879bd07bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f879bd04710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f879bd06860"/>
        <function-ref name="read" scoped="" ref="0x7f879bd04220"/>
        <function-ref name="readDone" scoped="" ref="0x7f879bd03220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f879bd33cb0" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f879bd33cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f879bd09850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f879bd0a940"/>
        <function-ref name="read" scoped="" ref="0x7f879bd09360"/>
        <function-ref name="readDone" scoped="" ref="0x7f879bd07360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f879bd038f0" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879bd038f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bd03c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bd03e20"/>
        <function-ref name="request" scoped="" ref="0x7f879bd02020"/>
        <function-ref name="granted" scoped="" ref="0x7f879bd021b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bd02340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f879a434020" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f879a434020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879a4343a0"/>
        <function-ref name="configure" scoped="" ref="0x7f879a434530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f879a4346c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f879a436020" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879a436020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879a4363a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f879a436530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f879a4366c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f879a436850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f879a4369e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f879a436b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f879a436d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f879a434910" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f879a434910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f879a434c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f879a434e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f879a433280" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a433280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a432020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a437360" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a437360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a4376e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a437870"/>
        <function-ref name="request" scoped="" ref="0x7f879a437a00"/>
        <function-ref name="granted" scoped="" ref="0x7f879a437b90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a437d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f879a3c3dc0" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f879a3c3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a3c2ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f879a3c0120" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f879a3c0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a3c0d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f879bceca10" loc="35:../../../tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <component-ref qname="Msp430InternalVoltageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f879bceca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879bce96b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f879a542840" loc="50:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f879a542840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879a5414c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f879a541980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f879a540130" loc="52:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a540130"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a540d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a5449c0" loc="49:../../../tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a5449c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a544d40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a542020"/>
        <function-ref name="request" scoped="" ref="0x7f879a5421b0"/>
        <function-ref name="granted" scoped="" ref="0x7f879a542340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a5424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f879a3b4020" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f879a3b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879a3b43a0"/>
        <function-ref name="configure" scoped="" ref="0x7f879a3b4530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f879a3b46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f879a3b5020" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f879a3b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f879a3b53a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f879a3b5530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f879a3b56c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f879a3b5850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f879a3b59e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f879a3b5b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f879a3b5d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f879a3b4910" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f879a3b4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f879a3b4c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f879a3b4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f879a3b3280" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f879a3b3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a3b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a3b7280" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a3b7280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a3b7600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a3b7790"/>
        <function-ref name="request" scoped="" ref="0x7f879a3b7920"/>
        <function-ref name="granted" scoped="" ref="0x7f879a3b7ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a3b7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f879a3a5a40" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f879a3a5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a3a46b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f879a3a4cc0" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestAMCryptoAppC.Sensor.DemoSensor.Msp430InternalVoltageC.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f879a3a4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f879a3a3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879bcbf400" loc="58:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879bcbf400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879bcbf780"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879bcbf910"/>
        <function-ref name="start" scoped="" ref="0x7f879bcbfaa0"/>
        <function-ref name="stop" scoped="" ref="0x7f879bcbfc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f879bcbe430" loc="60:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879bcbe430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879bcbe7b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879bcbe940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879bcbead0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879bcbec60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879bcbedf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f879bcbb210" loc="62:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f879bcbb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879bcbb590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f879bcbb820" loc="64:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879bcbb820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879bcbbba0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879bcbbd30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879bcba020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879bcba1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879bcba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f879bcb4d70" loc="67:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f879bcb4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f879bcaf330"/>
        <function-ref name="clear" scoped="" ref="0x7f879bcafa60"/>
        <function-ref name="isValid" scoped="" ref="0x7f879bcb6ba0"/>
        <function-ref name="set" scoped="" ref="0x7f879bcae210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f879bca2b20" loc="69:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f879bca2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f879bca9020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f879bca91b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f879bca9340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f879bca94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879bcbd600" loc="61:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879bcbd600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879bcbd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f879bcb9cb0" loc="66:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879bcb9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879bcb80a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f879bcb8230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879bcb83c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f879bcba5f0" loc="65:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f879bcba5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f879bcba970"/>
        <function-ref name="source" scoped="" ref="0x7f879bcbab00"/>
        <function-ref name="address" scoped="" ref="0x7f879bcbac90"/>
        <function-ref name="destination" scoped="" ref="0x7f879bcbae20"/>
        <function-ref name="setSource" scoped="" ref="0x7f879bcb9020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879bcb91b0"/>
        <function-ref name="type" scoped="" ref="0x7f879bcb9340"/>
        <function-ref name="setType" scoped="" ref="0x7f879bcb94d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879bcb9660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879bcb97f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f879bcb9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f879bcaee60" loc="68:../../../tos/platforms/shimmer2r/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f879bcaee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f879bcab3f0"/>
        <function-ref name="clear" scoped="" ref="0x7f879bcabb20"/>
        <function-ref name="isValid" scoped="" ref="0x7f879bcacca0"/>
        <function-ref name="set" scoped="" ref="0x7f879bcaa2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879bc95880" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879bc95880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879bc95c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879bc95d90"/>
        <function-ref name="start" scoped="" ref="0x7f879bc94020"/>
        <function-ref name="stop" scoped="" ref="0x7f879bc941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f879bc7bd40" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f879bc7bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f879bc840e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f879bc84270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f879bc84400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f879bc84590"/>
        <function-ref name="setCca" scoped="" ref="0x7f879bc84720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f879bc848b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f879bc6fd20" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f879bc6fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f879bc791c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f879bc90760" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879bc90760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879bc90ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879bc90c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879bc90e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879bc8f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879bc8f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f879bc94980" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879bc94980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879bc94d00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879bc93020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879bc931b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879bc93340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879bc934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f879bc92900" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f879bc92900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879bc92c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f879bc86970" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879bc86970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879bc86cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879bc86e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879bc8e030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879bc8e1c0"/>
        <function-ref name="getPower" scoped="" ref="0x7f879bc8e350"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879bc8e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f879bc84bb0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f879bc84bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f879bc82020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f879bc821b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f879bc82340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f879bc824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879bc93cb0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879bc93cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879bc920a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f879bc8e810" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879bc8e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879bc8eb90"/>
        <function-ref name="noAck" scoped="" ref="0x7f879bc8ed20"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879bc8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f879bc7a020" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f879bc7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f879bc7a3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f879bc7a530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f879bc7a6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f879bc7a850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f879bc7a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f879bc91020" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f879bc91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f879bc913a0"/>
        <function-ref name="source" scoped="" ref="0x7f879bc91530"/>
        <function-ref name="address" scoped="" ref="0x7f879bc916c0"/>
        <function-ref name="destination" scoped="" ref="0x7f879bc91850"/>
        <function-ref name="setSource" scoped="" ref="0x7f879bc919e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879bc91b70"/>
        <function-ref name="type" scoped="" ref="0x7f879bc91d00"/>
        <function-ref name="setType" scoped="" ref="0x7f879bc90020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879bc901b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879bc90340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f879bc904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f879bc83a80" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879bc83a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f879bc83e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879bc71b70" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879bc71b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879bc6b020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879bc6b1b0"/>
        <function-ref name="start" scoped="" ref="0x7f879bc6b340"/>
        <function-ref name="stop" scoped="" ref="0x7f879bc6b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f879bc659d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879bc659d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f879bc65d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f879bc63b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f879bc63b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f879bc62020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f879bc621b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f879bc62340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f879bc624d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f879bc62660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f879bc66140" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879bc66140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879bc664c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879bc66650"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879bc667e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879bc66970"/>
        <function-ref name="getPower" scoped="" ref="0x7f879bc66b00"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879bc66c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f879bc68d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f879bc68d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879bc670e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879bc67270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879bc67400"/>
        <function-ref name="cancel" scoped="" ref="0x7f879bc67590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879bc67720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f879bc63080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f879bc63080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f879bc63400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f879bc63590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f879bc63720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f879bc638b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f879bc69820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f879bc69820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879bc69ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f879bc65020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879bc65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879bc653a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f879bc65530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879bc656c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879bc6bd00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879bc6bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bc6a0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bc6a230"/>
        <function-ref name="request" scoped="" ref="0x7f879bc6a3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879bc6a550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bc6a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f879bc6aa00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f879bc6aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879bc6ad80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879bc69020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879bc691b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879bc69340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879bc694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f879bc68020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f879bc68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879bc683a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879bc68530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879bc686c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879bc68850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879bc689e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f879bc67a90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f879bc67a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879bc67e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879bc5f460" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879bc5f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879bc5f7e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879bc5f970"/>
        <function-ref name="start" scoped="" ref="0x7f879bc5fb00"/>
        <function-ref name="stop" scoped="" ref="0x7f879bc5fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f879bc5d3b0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f879bc5d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f879bc5d730"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f879bc5d8c0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f879bc5da50"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f879bc5dbe0"/>
        <function-ref name="setCca" scoped="" ref="0x7f879bc5dd70"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f879bc5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879bc5e020" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879bc5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879bc5e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879bc5e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879bc5e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879bc5e850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879bc5e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879bc5ecc0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879bc5ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879bc5d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7f879bc59c60" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7f879bc59c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7f879bc5b020"/>
        <function-ref name="enableCca" scoped="" ref="0x7f879bc5b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879bc572d0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879bc572d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879bc57650"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879bc577e0"/>
        <function-ref name="start" scoped="" ref="0x7f879bc57970"/>
        <function-ref name="stop" scoped="" ref="0x7f879bc57b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f879bc56ad0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f879bc56ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f879bc56e50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f879bc55020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f879bc551b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f879bc55340"/>
        <function-ref name="setCca" scoped="" ref="0x7f879bc554d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f879bc55660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f879bc4a700" loc="55:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f879bc4a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f879bc4aa80"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f879bc4ac10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f879bc4ada0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f879bc49020"/>
        <function-ref name="setCca" scoped="" ref="0x7f879bc491b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f879bc49340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f879bc41b00" loc="58:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879bc41b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879bc41e80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879bc3f030"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879bc3f1c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879bc3f350"/>
        <function-ref name="getPower" scoped="" ref="0x7f879bc3f4e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879bc3f670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f879bc43810" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f879bc43810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879bc43b90"/>
        <function-ref name="cancel" scoped="" ref="0x7f879bc43d20"/>
        <function-ref name="modify" scoped="" ref="0x7f879bc4a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879bc4a1b0"/>
        <function-ref name="resend" scoped="" ref="0x7f879bc4a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879bc57dc0" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879bc57dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879bc56180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879bc56310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879bc564a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879bc56630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879bc567c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f879bc40b60" loc="56:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f879bc40b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f879bc42020"/>
        <function-ref name="rand32" scoped="" ref="0x7f879bc421b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f879bc52ba0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f879bc52ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879bc4b020"/>
        <function-ref name="stop" scoped="" ref="0x7f879bc4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f879bc37130" loc="59:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879bc37130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879bc375b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879bc37740"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879bc378d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f879bc4c880" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f879bc4c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f879bc4cc00"/>
        <function-ref name="rfOff" scoped="" ref="0x7f879bc4cd90"/>
        <function-ref name="rxOn" scoped="" ref="0x7f879bc52020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f879bc521b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f879bc52340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f879bc524d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f879bc52660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f879bc527f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879bc42470" loc="57:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879bc42470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879bc427f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879bc42980"/>
        <function-ref name="led1On" scoped="" ref="0x7f879bc42b10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879bc42ca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879bc42e30"/>
        <function-ref name="get" scoped="" ref="0x7f879bc41020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879bc411b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879bc417f0"/>
        <function-ref name="set" scoped="" ref="0x7f879bc41340"/>
        <function-ref name="led0On" scoped="" ref="0x7f879bc414d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f879bc41660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f879bc54310" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879bc54310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bc54690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bc54820"/>
        <function-ref name="request" scoped="" ref="0x7f879bc549b0"/>
        <function-ref name="granted" scoped="" ref="0x7f879bc54b40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bc54cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f879bc33850" loc="60:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f879bc33850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879bc33bd0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879bc33d60"/>
        <function-ref name="isState" scoped="" ref="0x7f879bc3e020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879bc3e1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f879bc3e340"/>
        <function-ref name="forceState" scoped="" ref="0x7f879bc3e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f879bc2e730" loc="86:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f879bc2e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879bc2eab0"/>
        <function-ref name="runTask" scoped="" ref="0x7f879bc2ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420RxState" ref="0x7f879bc55980" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420RxState" scoped="" ref="0x7f879bc55980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420RxState"/>
      </instance>
      <interface-functions>
        <function-ref name="enableRx" scoped="" ref="0x7f879bc55d00"/>
        <function-ref name="enableCca" scoped="" ref="0x7f879bc54020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f879bc2f7d0" loc="85:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f879bc2f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879bc2fb50"/>
        <function-ref name="runTask" scoped="" ref="0x7f879bc2fce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f879bc30890" loc="84:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f879bc30890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879bc30c10"/>
        <function-ref name="runTask" scoped="" ref="0x7f879bc30da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f879bbd0670" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f879bbd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f879bbd09f0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f879bbd0b80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f879bbd0d10"/>
        <function-ref name="syncDone" scoped="" ref="0x7f879bbdd020"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f879bbdd1b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f879bbdd340"/>
        <function-ref name="setChannel" scoped="" ref="0x7f879bbdd4d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f879bbdd660"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f879bbdd7f0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f879bbdd980"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f879bbddb10"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f879bbddca0"/>
        <function-ref name="sync" scoped="" ref="0x7f879bbdde30"/>
        <function-ref name="getChannel" scoped="" ref="0x7f879bbdb120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f879bbdb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f879bbcf9b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f879bbcf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bbce5c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f879bbcea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f879bbdb5b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f879bbdb5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f879bbdb930"/>
        <function-ref name="rfOff" scoped="" ref="0x7f879bbdbac0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f879bbdbc50"/>
        <function-ref name="startVReg" scoped="" ref="0x7f879bbdbde0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f879bbcf020"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f879bbcf1b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f879bbcf340"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f879bbcf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879bbdf220" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879bbdf220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bbdf5a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bbdf730"/>
        <function-ref name="request" scoped="" ref="0x7f879bbdf8c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879bbdfa50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bbdfbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f879bbc81b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f879bbc81b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f879bbc8530"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f879bbc86c0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f879bbc8850"/>
        <function-ref name="syncDone" scoped="" ref="0x7f879bbc89e0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f879bbc8b70"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f879bbc8d00"/>
        <function-ref name="setChannel" scoped="" ref="0x7f879bbc7020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f879bbc71b0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f879bbc7340"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f879bbc74d0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f879bbc7660"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f879bbc77f0"/>
        <function-ref name="sync" scoped="" ref="0x7f879bbc7980"/>
        <function-ref name="getChannel" scoped="" ref="0x7f879bbc7c10"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f879bbc7da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f879bba7020" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f879bba7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bba73a0"/>
        <function-ref name="write" scoped="" ref="0x7f879bba7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f879bbc1970" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f879bbc1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f879bbc1cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f879bbc33a0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f879bbc33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879bbbfbe0"/>
        <function-ref name="fired" scoped="" ref="0x7f879bbc0bc0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879bbbf590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879bbbf0d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879bbbe0d0"/>
        <function-ref name="start" scoped="" ref="0x7f879bbc01f0"/>
        <function-ref name="stop" scoped="" ref="0x7f879bbc0700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f879bbabc90" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879bbabc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bbaa0a0"/>
        <function-ref name="write" scoped="" ref="0x7f879bbaa230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f879bbbd830" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f879bbbd830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bbbdbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bbbdd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bbbc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bbbc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f879bbbc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bbbc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f879bbbc660"/>
        <function-ref name="clr" scoped="" ref="0x7f879bbbc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f879bbc5500" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f879bbc5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bbc4130"/>
        <function-ref name="readDone" scoped="" ref="0x7f879bbc45b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f879bb95020" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f879bb95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879bb953a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f879bb95530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f879bba78c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f879bba78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bba7c40"/>
        <function-ref name="write" scoped="" ref="0x7f879bba7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f879bba61d0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f879bba61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bba6550"/>
        <function-ref name="write" scoped="" ref="0x7f879bba66e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f879bba8a80" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f879bba8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bba8e00"/>
        <function-ref name="write" scoped="" ref="0x7f879bbab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f879bbb2dd0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f879bbb2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f879bbb7180"/>
        <function-ref name="changed" scoped="" ref="0x7f879bbb7310"/>
        <function-ref name="amGroup" scoped="" ref="0x7f879bbb74a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f879bbb7630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f879bbbe5c0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f879bbbe5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bbbe940"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bbbead0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bbbec60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bbbedf0"/>
        <function-ref name="get" scoped="" ref="0x7f879bbbd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bbbd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f879bbbd340"/>
        <function-ref name="clr" scoped="" ref="0x7f879bbbd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f879bba5830" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879bba5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879bba5db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f879bbbcb50" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f879bbbcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bbba020"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bbba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bbba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bbba4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879bbba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bbba7f0"/>
        <function-ref name="set" scoped="" ref="0x7f879bbba980"/>
        <function-ref name="clr" scoped="" ref="0x7f879bbbab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879bbccdf0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879bbccdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879bbc91c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f879bbaa5f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879bbaa5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bbaa970"/>
        <function-ref name="write" scoped="" ref="0x7f879bbaab00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f879bba41d0" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f879bba41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879bba4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f879bba48f0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f879bba48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bba4c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bba4e00"/>
        <function-ref name="request" scoped="" ref="0x7f879bba1020"/>
        <function-ref name="granted" scoped="" ref="0x7f879bba11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bba1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f879bba0560" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f879bba0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bba08e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bba0a70"/>
        <function-ref name="request" scoped="" ref="0x7f879bba0c00"/>
        <function-ref name="granted" scoped="" ref="0x7f879bba0d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bb9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f879bbc6130" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f879bbc6130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f879bbc64b0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f879bbc6640"/>
        <function-ref name="rxOn" scoped="" ref="0x7f879bbc67d0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f879bbc6960"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f879bbc6af0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f879bbc6c80"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f879bbc6e10"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f879bbc5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f879bbab3c0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f879bbab3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bbab740"/>
        <function-ref name="write" scoped="" ref="0x7f879bbab8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f879bba81d0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f879bba81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bba8550"/>
        <function-ref name="write" scoped="" ref="0x7f879bba86e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f879bba3990" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f879bba3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879bba3d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879bb9f2e0" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879bb9f2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879bb9f660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879bb9f7f0"/>
        <function-ref name="led1On" scoped="" ref="0x7f879bb9f980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879bb9fb10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879bb9fca0"/>
        <function-ref name="get" scoped="" ref="0x7f879bb9fe30"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879bb9e020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879bb9e660"/>
        <function-ref name="set" scoped="" ref="0x7f879bb9e1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f879bb9e340"/>
        <function-ref name="led2On" scoped="" ref="0x7f879bb9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f879bb96020" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f879bb96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879bb963a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f879bb96530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879bbc94b0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879bbc94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bbc9830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bbc99c0"/>
        <function-ref name="request" scoped="" ref="0x7f879bbc9b50"/>
        <function-ref name="granted" scoped="" ref="0x7f879bbc9ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bbc9e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f879bbb49a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f879bbb49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bbb4d20"/>
        <function-ref name="write" scoped="" ref="0x7f879bbb0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f879bbb4020" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f879bbb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879bbb44a0"/>
        <function-ref name="write" scoped="" ref="0x7f879bbb4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f879bbb55b0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f879bbb55b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879bbb5930"/>
        <function-ref name="disable" scoped="" ref="0x7f879bbb5ac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879bbb5c50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879bbb5de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f879bba16f0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f879bba16f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879bba1a70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879bba1c00"/>
        <function-ref name="request" scoped="" ref="0x7f879bba1d90"/>
        <function-ref name="granted" scoped="" ref="0x7f879bba0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879bba01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f879bba5100" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f879bba5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879bba5480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879bb1f7e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879bb1f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879bb1fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f879bb1c220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f879bb1c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879bb19b30"/>
        <function-ref name="fired" scoped="" ref="0x7f879bb1ba60"/>
        <function-ref name="startAt" scoped="" ref="0x7f879bb194e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879bb19020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879bb18020"/>
        <function-ref name="start" scoped="" ref="0x7f879bb1b090"/>
        <function-ref name="stop" scoped="" ref="0x7f879bb1b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879bb16260" loc="42:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879bb16260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879bb165e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f879bb16af0" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f879bb16af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879badb390"/>
        <function-ref name="fired" scoped="" ref="0x7f879badd360"/>
        <function-ref name="startAt" scoped="" ref="0x7f879baddce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879badd820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879badb850"/>
        <function-ref name="start" scoped="" ref="0x7f879bade970"/>
        <function-ref name="stop" scoped="" ref="0x7f879badee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a37a180" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a37a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a377b30"/>
        <function-ref name="fired" scoped="" ref="0x7f879a3799f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a3774e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a377020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a376020"/>
        <function-ref name="start" scoped="" ref="0x7f879a379020"/>
        <function-ref name="stop" scoped="" ref="0x7f879a379530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a37b900" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a37b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a37bc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a3722a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a3722a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a370b30"/>
        <function-ref name="fired" scoped="" ref="0x7f879a371aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a3704e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a370020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a36f020"/>
        <function-ref name="start" scoped="" ref="0x7f879a3710d0"/>
        <function-ref name="stop" scoped="" ref="0x7f879a3715e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a373a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a373a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a373d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f879a35ac10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a35ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879a359020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879a3591b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879a359340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879a3594d0"/>
        <function-ref name="fired" scoped="" ref="0x7f879a359660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f879a35c1b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a35c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879a35c530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879a35c6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a35c850"/>
        <function-ref name="get" scoped="" ref="0x7f879a35c9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a35cb70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879a35cd00"/>
        <function-ref name="getMode" scoped="" ref="0x7f879a35b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879a35b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879a35b340"/>
        <function-ref name="setMode" scoped="" ref="0x7f879a35b4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879a35b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f879a35b8f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a35b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879a35bc70"/>
        <function-ref name="getControl" scoped="" ref="0x7f879a35be00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a35a020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879a35a1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879a35a340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a35a4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879a35a660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879a35a7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879a35a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f879a350a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f879a350a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879a350e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f879a34f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f879a34f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f879a34f340"/>
        <function-ref name="fired" scoped="" ref="0x7f879a34f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f879a352020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879a352020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879a3523a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879a352530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a3526c0"/>
        <function-ref name="get" scoped="" ref="0x7f879a352850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a3529e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879a352b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f879a352d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879a351020"/>
        <function-ref name="overflow" scoped="" ref="0x7f879a3511b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879a351340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879a3514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a357da0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a357da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a353670"/>
        <function-ref name="fired" scoped="" ref="0x7f879a355610"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a353020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a355ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a353b30"/>
        <function-ref name="start" scoped="" ref="0x7f879a356bf0"/>
        <function-ref name="stop" scoped="" ref="0x7f879a355150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a357510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a357510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a357890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f879a351760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879a351760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879a351ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f879a351c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879a351e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879a350020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879a3501b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879a350340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879a3504d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879a350660"/>
        <function-ref name="setControl" scoped="" ref="0x7f879a3507f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879bb00080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879bb00080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879baff020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879baff9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879baff4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879baffe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f879baf70f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f879baf70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879baf6020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879baf69a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879baf64e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879baf6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879bafbcd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879bafbcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879baf9b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879baf8550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879baf8090"/>
        <function-ref name="overflow" scoped="" ref="0x7f879baf8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f879a36d5f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f879a36d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a36ae50"/>
        <function-ref name="fired" scoped="" ref="0x7f879a36ce00"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a36a800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a36a340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a369340"/>
        <function-ref name="start" scoped="" ref="0x7f879a36c430"/>
        <function-ref name="stop" scoped="" ref="0x7f879a36c940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f879a367d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f879a367d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879a363670"/>
        <function-ref name="fired" scoped="" ref="0x7f879a364550"/>
        <function-ref name="startAt" scoped="" ref="0x7f879a363020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879a364a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879a363b30"/>
        <function-ref name="start" scoped="" ref="0x7f879a365b60"/>
        <function-ref name="stop" scoped="" ref="0x7f879a364090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f879a3699b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879a3699b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879a3687e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879a3671b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879a368ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879a367670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f879bad5020" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f879bad5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bad53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bad5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bad56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bad5850"/>
        <function-ref name="get" scoped="" ref="0x7f879bad59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bad5b70"/>
        <function-ref name="set" scoped="" ref="0x7f879bad5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f879bad4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f879bad4390" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f879bad4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bad4710"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bad48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bad4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bad4bc0"/>
        <function-ref name="get" scoped="" ref="0x7f879bad4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bad3020"/>
        <function-ref name="set" scoped="" ref="0x7f879bad31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879bad3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f879bad36a0" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f879bad36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bad3a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bad3bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bad3d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bad2020"/>
        <function-ref name="get" scoped="" ref="0x7f879bad21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bad2340"/>
        <function-ref name="set" scoped="" ref="0x7f879bad24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f879bad2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f879bad7cd0" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f879bad7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bad60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bad6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bad63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bad6550"/>
        <function-ref name="get" scoped="" ref="0x7f879bad66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bad6870"/>
        <function-ref name="set" scoped="" ref="0x7f879bad6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f879bad6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f879bad1ce0" loc="54:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f879bad1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bad00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bad0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bad03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bad0550"/>
        <function-ref name="get" scoped="" ref="0x7f879bad06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bad0870"/>
        <function-ref name="set" scoped="" ref="0x7f879bad0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f879bad0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f879bb1da70" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f879bb1da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bb1ddf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bad7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bad71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bad7340"/>
        <function-ref name="get" scoped="" ref="0x7f879bad74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bad7660"/>
        <function-ref name="set" scoped="" ref="0x7f879bad77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f879bad7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f879bad29b0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f879bad29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bad2d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bad1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bad11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bad1340"/>
        <function-ref name="get" scoped="" ref="0x7f879bad14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bad1660"/>
        <function-ref name="set" scoped="" ref="0x7f879bad17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f879bad1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879bacd2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bacd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bacd670"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bacd800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879bacd990"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bacdb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bacdcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879bacde40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bacb020"/>
        <function-ref name="get" scoped="" ref="0x7f879bacb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879bacb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879bacb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f879bacb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879bacb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879bacb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879bacbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f879bacbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879bace020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879bace020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bace3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bace530"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bace6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bace850"/>
        <function-ref name="get" scoped="" ref="0x7f879bace9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879baceb70"/>
        <function-ref name="set" scoped="" ref="0x7f879baced00"/>
        <function-ref name="clr" scoped="" ref="0x7f879bacd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879bac8de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bac8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bac7180"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bac7310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879bac74a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bac7630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bac77c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879bac7950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bac7ae0"/>
        <function-ref name="get" scoped="" ref="0x7f879bac7c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879bac7e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879bac6020"/>
        <function-ref name="set" scoped="" ref="0x7f879bac61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879bac6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879bac64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879bac6760"/>
        <function-ref name="clr" scoped="" ref="0x7f879bac68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879bac9b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879bac9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bac8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bac81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bac8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bac84d0"/>
        <function-ref name="get" scoped="" ref="0x7f879bac8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bac87f0"/>
        <function-ref name="set" scoped="" ref="0x7f879bac8980"/>
        <function-ref name="clr" scoped="" ref="0x7f879bac8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879bac3930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bac3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bac3cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bac3e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879bac2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bac21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bac2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879bac24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bac2660"/>
        <function-ref name="get" scoped="" ref="0x7f879bac27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879bac2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879bac2b10"/>
        <function-ref name="set" scoped="" ref="0x7f879bac2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879bac2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879bac1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879bac12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879bac1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879bac4710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879bac4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bac4a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bac4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bac4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bac3020"/>
        <function-ref name="get" scoped="" ref="0x7f879bac31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bac3340"/>
        <function-ref name="set" scoped="" ref="0x7f879bac34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f879bac3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879babe480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879babe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879babe800"/>
        <function-ref name="isInput" scoped="" ref="0x7f879babe990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879babeb20"/>
        <function-ref name="toggle" scoped="" ref="0x7f879babecb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879babee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879babd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879babd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f879babd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879babd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879babd660"/>
        <function-ref name="set" scoped="" ref="0x7f879babd7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879babd980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879babdb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879babdda0"/>
        <function-ref name="clr" scoped="" ref="0x7f879babc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879babf1d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879babf1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879babf550"/>
        <function-ref name="isInput" scoped="" ref="0x7f879babf6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879babf870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879babfa00"/>
        <function-ref name="get" scoped="" ref="0x7f879babfb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879babfd20"/>
        <function-ref name="set" scoped="" ref="0x7f879babe020"/>
        <function-ref name="clr" scoped="" ref="0x7f879babe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879bab9020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bab9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bab93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bab9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879bab96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bab9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bab99e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879bab9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bab9d00"/>
        <function-ref name="get" scoped="" ref="0x7f879bab8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879bab81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879bab8340"/>
        <function-ref name="set" scoped="" ref="0x7f879bab84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879bab8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879bab87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879bab8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879bab8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879babbd70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879babbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879baba180"/>
        <function-ref name="isInput" scoped="" ref="0x7f879baba310"/>
        <function-ref name="toggle" scoped="" ref="0x7f879baba4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879baba630"/>
        <function-ref name="get" scoped="" ref="0x7f879baba7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879baba950"/>
        <function-ref name="set" scoped="" ref="0x7f879babaae0"/>
        <function-ref name="clr" scoped="" ref="0x7f879babac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879bab4de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879bab4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bab3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bab3310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879bab34a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bab3630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bab37c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879bab3950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bab3ae0"/>
        <function-ref name="get" scoped="" ref="0x7f879bab3c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879bab3e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879bab2020"/>
        <function-ref name="set" scoped="" ref="0x7f879bab21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879bab2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879bab24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879bab2760"/>
        <function-ref name="clr" scoped="" ref="0x7f879bab28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879bab6b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879bab6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bab4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bab41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bab4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879bab44d0"/>
        <function-ref name="get" scoped="" ref="0x7f879bab4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879bab47f0"/>
        <function-ref name="set" scoped="" ref="0x7f879bab4980"/>
        <function-ref name="clr" scoped="" ref="0x7f879bab4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879baaf930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879baaf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879baafcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879baafe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879baae020"/>
        <function-ref name="toggle" scoped="" ref="0x7f879baae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879baae340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879baae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879baae660"/>
        <function-ref name="get" scoped="" ref="0x7f879baae7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879baae980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879baaeb10"/>
        <function-ref name="set" scoped="" ref="0x7f879baaeca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879baaee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879baad020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879baad2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879baad440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879bab0710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879bab0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879bab0a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f879bab0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f879bab0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879baaf020"/>
        <function-ref name="get" scoped="" ref="0x7f879baaf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879baaf340"/>
        <function-ref name="set" scoped="" ref="0x7f879baaf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f879baaf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f879ba9a060" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f879ba9a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f879ba9a3e0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba9a570"/>
        <function-ref name="captured" scoped="" ref="0x7f879ba9a700"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f879ba9a890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f879ba9ac70" loc="52:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f879ba9ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879ba96020"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba961b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879ba96340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879ba964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f879ba968c0" loc="53:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f879ba968c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879ba96c40"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba96dd0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879ba95020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879ba951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f879ba7b5d0" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f879ba7b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f879ba7b950"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f879ba7bae0"/>
        <function-ref name="captured" scoped="" ref="0x7f879ba7bc70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ba7be00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ba7a020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f879ba7a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f879ba92760" loc="46:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f879ba92760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f879ba92ae0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba92c70"/>
        <function-ref name="captured" scoped="" ref="0x7f879ba92e00"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f879ba7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMicro" ref="0x7f879ba77620" loc="51:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMicro" scoped="" ref="0x7f879ba77620"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba763d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f879ba78410" loc="50:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f879ba78410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba77090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f879ba7c2b0" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f879ba7c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f879ba7c630"/>
        <function-ref name="getControl" scoped="" ref="0x7f879ba7c7c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ba7c950"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f879ba7cae0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f879ba7cc70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879ba7ce00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f879ba7b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f879ba7b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f879ba7b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f879ba7a480" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879ba7a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879ba7a800"/>
        <function-ref name="isInput" scoped="" ref="0x7f879ba7a990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879ba7ab20"/>
        <function-ref name="toggle" scoped="" ref="0x7f879ba7acb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879ba7ae40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879ba79020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879ba791b0"/>
        <function-ref name="get" scoped="" ref="0x7f879ba79340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879ba794d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879ba79660"/>
        <function-ref name="set" scoped="" ref="0x7f879ba797f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879ba79980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879ba79b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879ba79da0"/>
        <function-ref name="clr" scoped="" ref="0x7f879ba78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f879ba71180" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f879ba71180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba71db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f879ba70450" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879ba70450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba6f3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ba6fd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ba6f890"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ba6e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879ba67110" loc="43:../../../tos/platforms/shimmer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879ba67110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba66020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ba669a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ba664e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ba66e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f879ba62260" loc="46:../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f879ba62260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba61090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ba61a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ba61550"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ba5f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f879ba5cc30" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f879ba5cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba5b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f879ba5b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f879ba5b340"/>
        <function-ref name="get" scoped="" ref="0x7f879ba5b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f879ba5b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ba5b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879ba5b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ba5bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ba5bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f879ba5be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f879ba5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879ba5eae0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879ba5eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba5d970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ba5c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ba5de30"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ba5c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f879ba53910" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f879ba53910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba52780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ba51150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ba52c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ba51610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f879ba56430" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879ba56430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba553d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ba55d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ba55890"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ba53260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f879ba69d30" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f879ba69d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba4e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f879ba4d020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HplCC2420InterruptsC.CounterMicroToLocalTime"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879ba4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c8996b0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f879c899a20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879ba4de30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879ba4c800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879ba4c340"/>
        <function-ref name="overflow" scoped="" ref="0x7f879ba4ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f879ba3e020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f879ba3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba3e3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba3e530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba3e6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba3e850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba3e9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba3eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f879ba34020" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f879ba34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba343a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba34530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba346c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba34850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba349e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba34b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f879ba3b020" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f879ba3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba3b3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba3b530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba3b6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba3b850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba3b9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba3bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f879ba39020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f879ba39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba393a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba39530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba396c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba39850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba399e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba39b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f879ba45060" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f879ba45060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba453e0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba45570"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba45700"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba45890"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba45a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba45bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f879ba36020" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f879ba36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba364a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba36630"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba367c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba36950"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba36ae0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba36c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f879ba3d020" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f879ba3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba3d3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba3d530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba3d6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba3d850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba3d9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba3db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f879ba33020" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f879ba33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba333a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba33530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba336c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba33850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba339e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba33b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f879ba41170" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f879ba41170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba414f0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba41680"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba41810"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba419a0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba41b30"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba41cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f879ba38020" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f879ba38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba383a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba38530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba386c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba38850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba389e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba38b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f879ba3f020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f879ba3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba3f3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba3f530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba3f6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba3f850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba3f9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba3fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f879ba35060" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f879ba35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba353e0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba35570"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba35700"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba35890"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba35a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba35bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f879ba3c020" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f879ba3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba3c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba3c530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba3c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba3c850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba3c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba3cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f879ba3a020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f879ba3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba3a3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba3a530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba3a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba3a850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba3a9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba3ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f879ba46100" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f879ba46100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba46480"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba46610"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba467a0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba46930"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba46ac0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba46c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f879ba37020" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f879ba37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba373a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba37530"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba376c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba37850"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba379e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba37b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f879ba2cbc0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f879ba2cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba2b020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba2b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba2b340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba2b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba2b660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba2b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f879ba21bc0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f879ba21bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba20020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba201b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba20340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba204d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba20660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f879ba29bc0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f879ba29bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba28020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba281b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba28340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba284d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba28660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f879ba27bc0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f879ba27bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba25020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba251b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba25340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba254d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba25660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f879ba2ec40" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f879ba2ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba2d020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba2d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba2d340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba2d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba2d660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba2d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f879ba23bc0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f879ba23bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba220a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba22230"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba223c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba22550"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba226e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba22870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f879ba2bbc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f879ba2bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba2a020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba2a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba2a340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba2a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba2a660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba2a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f879ba20bc0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f879ba20bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba1f020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba1f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba1f340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba1f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba1f660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba1f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f879ba32d30" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f879ba32d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba2f0e0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba2f270"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba2f400"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba2f590"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba2f720"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba2f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f879ba25bc0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f879ba25bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba24020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba241b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba24340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba244d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba24660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba247f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f879ba2dbc0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f879ba2dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba2c020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba2c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba2c340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba2c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba2c660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba2c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f879ba22c40" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f879ba22c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba21020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba211b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba21340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba214d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba21660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f879ba2abc0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f879ba2abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba29020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba291b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba29340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba294d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba29660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f879ba28bc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f879ba28bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba27020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba271b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba27340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba274d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba27660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba277f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f879ba2fc80" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f879ba2fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba2e0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba2e230"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba2e3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba2e550"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba2e6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba2e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f879ba24bc0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f879ba24bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ba23020"/>
        <function-ref name="fired" scoped="" ref="0x7f879ba231b0"/>
        <function-ref name="disable" scoped="" ref="0x7f879ba23340"/>
        <function-ref name="edge" scoped="" ref="0x7f879ba234d0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ba23660"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ba237f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f879b94c610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f879b94c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879b94c990"/>
        <function-ref name="fired" scoped="" ref="0x7f879b94cb20"/>
        <function-ref name="disable" scoped="" ref="0x7f879b94ccb0"/>
        <function-ref name="edge" scoped="" ref="0x7f879b94ce40"/>
        <function-ref name="enable" scoped="" ref="0x7f879b93f020"/>
        <function-ref name="getValue" scoped="" ref="0x7f879b93f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f879b94ea30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f879b94ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879b94edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f879b94c020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879b94c1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879b94c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f879b93c610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f879b93c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879b93c990"/>
        <function-ref name="fired" scoped="" ref="0x7f879b93cb20"/>
        <function-ref name="disable" scoped="" ref="0x7f879b93ccb0"/>
        <function-ref name="edge" scoped="" ref="0x7f879b93ce40"/>
        <function-ref name="enable" scoped="" ref="0x7f879b93b020"/>
        <function-ref name="getValue" scoped="" ref="0x7f879b93b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f879b93da70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f879b93da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879b93ddf0"/>
        <function-ref name="disable" scoped="" ref="0x7f879b93c020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879b93c1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879b93c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f879b6b4e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b6b4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b3410"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f879b6be160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f879b6be160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6be4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f879b6b8e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b6b8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b7210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f879b6b2880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b6b2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b2c00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f879b6aa0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f879b6aa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6aa420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6aa5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f879b6b10a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f879b6b10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b1420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f879b69e500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f879b69e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b69e880"/>
        <function-ref name="write" scoped="" ref="0x7f879b69ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f879b6a1500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f879b6a1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a1880"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f879b6bd490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f879b6bd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6bd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f879b6a6880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f879b6a6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a6c00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f879b6a2500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b6a2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a2880"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f879b6b7e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f879b6b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b6210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f879b6b6e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f879b6b6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b4210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f879b6ac880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f879b6ac880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6acc00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6acd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f879b6ae0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f879b6ae0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6ae420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6ae5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f879b6b1880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f879b6b1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b1c00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f879b6c0a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b6c0a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f879b6c0e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f879b6bf020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f879b6bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f879b6bce00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b6bce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6ba1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f879b6ba490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f879b6ba490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6ba910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f879b6a5c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b6a5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a40a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f879b6babe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f879b6babe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f879b6a2ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b6a2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a10a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f879b6bc160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b6bc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6bc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f879b6a60a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f879b6a60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a6420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f879b6b6670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b6b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b69f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f879b6b7670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b6b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b79f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f879b6bfad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f879b6bfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6bfe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f879b6a80a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b6a80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a8420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f879b6aa880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f879b6aa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6aac00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6aad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f879b6a8880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b6a8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a8c00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f879b69fce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f879b69fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b69e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b69e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f879b6a1ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f879b6a1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b69f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b69f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f879b6ae880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f879b6ae880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6aec00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6aed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f879b6a90a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f879b6a90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a9420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f879b6a3ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f879b6a3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a20a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f879b6b0880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f879b6b0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b0c00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f879b69ece0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f879b69ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b69d0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b69d230"/>
        <function-ref name="write" scoped="" ref="0x7f879b69d3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b69d550"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b69d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f879b6bf480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f879b6bf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6bf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f879b6b8670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f879b6b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b89f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f879b6b4670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b6b4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b49f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f879b6ab0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f879b6ab0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6ab420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6ab5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f879b6b00a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f879b6b00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b0420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f879b6ab880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f879b6ab880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6abc00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6abd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f879b6b3870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f879b6b3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b3bf0"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b3d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f879b6be7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f879b6be7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6beb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f879b6b20a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b6b20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6b2420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6b25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b6c1e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b6c1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b6c01c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b6c0350"/>
        <function-ref name="request" scoped="" ref="0x7f879b6c04e0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b6c0670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b6c0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f879b6b92f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f879b6b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6b9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f879b6b8020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f879b6b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f879b6a3500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f879b6a3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a3880"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f879b6a4ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f879b6a4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a30a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f879b6bc7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b6bc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6bcb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f879b6a4500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b6a4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a4880"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f879b69f500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f879b69f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b69f880"/>
        <function-ref name="write" scoped="" ref="0x7f879b69fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f879b6ac0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b6ac0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6ac420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6ac5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f879b6a9880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f879b6a9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a9c00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f879b6bee00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f879b6bee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6bd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f879b6bdae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f879b6bdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6bde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f879b6af0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f879b6af0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6af420"/>
        <function-ref name="write" scoped="" ref="0x7f879b6af5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f879b6b9940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f879b6b9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6b9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f879b6af880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f879b6af880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6afc00"/>
        <function-ref name="write" scoped="" ref="0x7f879b6afd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f879b6a50a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f879b6a50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6a5820"/>
        <function-ref name="write" scoped="" ref="0x7f879b6a59b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f879b69d9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f879b69d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b69dd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b69c020"/>
        <function-ref name="write" scoped="" ref="0x7f879b69c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b69c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b69c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f879b8f82c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f879b8f82c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b8f8640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b8f87d0"/>
        <function-ref name="write" scoped="" ref="0x7f879b8f8960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b8f8af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b8f8c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f879b8f9350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b8f9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f879b8f96d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f879b8f9860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f879b8f99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f879b8f6540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f879b8f6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b8f68c0"/>
        <function-ref name="write" scoped="" ref="0x7f879b8f6a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f879b8f5370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f879b8f5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b8f56f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b8f5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b8fa4d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b8fa4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b8fa850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b8fa9e0"/>
        <function-ref name="request" scoped="" ref="0x7f879b8fab70"/>
        <function-ref name="granted" scoped="" ref="0x7f879b8fad00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b8f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f879b8f41d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f879b8f41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b8f4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f879b8de2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f879b8de2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b8de660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b8de7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f879b8ef890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f879b8ef890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b8efc10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b8efda0"/>
        <function-ref name="write" scoped="" ref="0x7f879b8ee020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b8ee1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b8ee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f879b8f1660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b8f1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f879b8f19e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f879b8f1b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f879b8f1d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f879b8e7c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f879b8e7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f879b8e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f879b8deb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f879b8deb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879b8e8020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879b8e81b0"/>
        <function-ref name="isState" scoped="" ref="0x7f879b8e8340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879b8e84d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f879b8e8660"/>
        <function-ref name="forceState" scoped="" ref="0x7f879b8e87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f879b8ea060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f879b8ea060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b8ea3e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b8ea570"/>
        <function-ref name="request" scoped="" ref="0x7f879b8ea700"/>
        <function-ref name="granted" scoped="" ref="0x7f879b8ea890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b8eaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f879b8eeba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f879b8eeba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b8ec020"/>
        <function-ref name="write" scoped="" ref="0x7f879b8ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f879b8eca30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f879b8eca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b8ecdb0"/>
        <function-ref name="write" scoped="" ref="0x7f879b8eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879b8e8a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879b8e8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879b8e8df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879b8e6020"/>
        <function-ref name="led1On" scoped="" ref="0x7f879b8e61b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879b8e6340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879b8e64d0"/>
        <function-ref name="get" scoped="" ref="0x7f879b8e6660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879b8e67f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879b8e6e30"/>
        <function-ref name="set" scoped="" ref="0x7f879b8e6980"/>
        <function-ref name="led0On" scoped="" ref="0x7f879b8e6b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f879b8e6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b8f0510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b8f0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b8f0890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b8f0a20"/>
        <function-ref name="request" scoped="" ref="0x7f879b8f0bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b8f0d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b8ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f879b8dbbd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f879b8dbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879b8d9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f879b8d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f879b8eb8b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f879b8eb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b8ebc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f879b880770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f879b880770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879b880af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879b880c80"/>
        <function-ref name="isState" scoped="" ref="0x7f879b880e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879b877020"/>
        <function-ref name="requestState" scoped="" ref="0x7f879b8771b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f879b877340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f879b87b1d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f879b87b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879b87b550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879b87b6e0"/>
        <function-ref name="isState" scoped="" ref="0x7f879b87b870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879b87ba00"/>
        <function-ref name="requestState" scoped="" ref="0x7f879b87bb90"/>
        <function-ref name="forceState" scoped="" ref="0x7f879b87bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879b876020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879b876020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b8763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f879b876b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f879b876b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879b875020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879b8751b0"/>
        <function-ref name="isState" scoped="" ref="0x7f879b875340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879b8754d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f879b875660"/>
        <function-ref name="forceState" scoped="" ref="0x7f879b8757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f879b6e8410" loc="49:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f879b6e8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b6e8790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b6e8920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f879b85cd90" loc="48:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f879b85cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f879b6e8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b85c140" loc="47:../../../tos/platforms/shimmer2r/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b85c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b85c4c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b85c650"/>
        <function-ref name="request" scoped="" ref="0x7f879b85c7e0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b85c970"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b85cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879a244760" loc="82:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a244760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879a244ae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879a244c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f879a242120" loc="87:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f879a242120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879a2424a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879a242630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f879a2428c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879a2428c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f879a242c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f879a243020" loc="83:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f879a243020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f879a2433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a2469c0" loc="81:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a2469c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a246d40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a244020"/>
        <function-ref name="request" scoped="" ref="0x7f879a2441b0"/>
        <function-ref name="granted" scoped="" ref="0x7f879a244340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a2444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f879a243630" loc="85:../../../tos/chips/msp430/usart/Msp430Spi1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f879a243630"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f879a2439b0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f879a243b40"/>
        <function-ref name="splitRead" scoped="" ref="0x7f879a243cd0"/>
        <function-ref name="write" scoped="" ref="0x7f879a243e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f879b84a6b0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b84a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879b84aa30"/>
        <function-ref name="configure" scoped="" ref="0x7f879b84abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f879b848850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f879b848850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b848bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b848d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f879b845a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879b845a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f879b845dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f879b849020" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f879b849020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f879b8493a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f879b846690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f879b846690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b846a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b846ba0"/>
        <function-ref name="request" scoped="" ref="0x7f879b846d30"/>
        <function-ref name="granted" scoped="" ref="0x7f879b845020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b8451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b84b430" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b84b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b84b7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b84b940"/>
        <function-ref name="request" scoped="" ref="0x7f879b84bad0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b84bc60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b84bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f879b8496a0" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f879b8496a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f879b849a20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f879b849bb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f879b849d40"/>
        <function-ref name="write" scoped="" ref="0x7f879b848020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f879b8442a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma1P.nc">
      <component-ref qname="Msp430SpiNoDma1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879b8442a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879b844620"/>
        <function-ref name="txDone" scoped="" ref="0x7f879b8447b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f879b7ec250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b7ec250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879b7ec5f0"/>
        <function-ref name="configure" scoped="" ref="0x7f879b7ec780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f879b7ebc50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f879b7ebc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b7ea020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b7ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f879b7e93e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f879b7e93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f879b7e9780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f879b7eca10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f879b7eca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f879b7ecd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f879b7e9a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f879b7e9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f879b7e9dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f879b7e7020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f879b7e71b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f879b7e7340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f879b7e74d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f879b7e7660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f879b7e77f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f879b7e7980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f879b7e7b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f879b7e7ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f879b7e7e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f879b7e6020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f879b7e61b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f879b7e6440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f879b7e65d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f879b7e6760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f879b7e68f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f879b7e6a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f879b7e6c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f879b7e6da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f879b7e5020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f879b7e51b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f879b7e5340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f879b7e54d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879b7e5660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f879b7e59f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f879b7e5b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f879b7e5d10"/>
        <function-ref name="tx" scoped="" ref="0x7f879b7e4020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f879b7e41b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f879b7e4340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f879b7e44d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f879b7e4660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879b7e47f0"/>
        <function-ref name="rx" scoped="" ref="0x7f879b7e4980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879b7e4b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879b7e4ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879b7e4e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879b7e3020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879b7e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879b7e3c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879b7e3c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879b7e2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879b7e21b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f879b7e2340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879b7e24d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879b7e2660"/>
        <function-ref name="get" scoped="" ref="0x7f879b7e27f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879b7e2980"/>
        <function-ref name="led2On" scoped="" ref="0x7f879b7e1020"/>
        <function-ref name="set" scoped="" ref="0x7f879b7e2ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879b7e2b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f879b7e2e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f879b7ea5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f879b7ea5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b7ea950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b7eaae0"/>
        <function-ref name="request" scoped="" ref="0x7f879b7eac70"/>
        <function-ref name="granted" scoped="" ref="0x7f879b7eae00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b7e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b7ed470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b7ed470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b7ed810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b7ed9a0"/>
        <function-ref name="request" scoped="" ref="0x7f879b7edb30"/>
        <function-ref name="granted" scoped="" ref="0x7f879b7edcc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b7ede50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f879b7eb060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f879b7eb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f879b7eb3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f879b7eb570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f879b7eb700"/>
        <function-ref name="write" scoped="" ref="0x7f879b7eb890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f879b7e3480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f879b7e3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879b7e3800"/>
        <function-ref name="txDone" scoped="" ref="0x7f879b7e3990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f879b7e12f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma1P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f879b7e12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879b7e1670"/>
        <function-ref name="runTask" scoped="" ref="0x7f879b7e1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f879b7d43b0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879b7d43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879b7d4730"/>
        <function-ref name="txDone" scoped="" ref="0x7f879b7d48c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f879b7d9020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879b7d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879b7d93a0"/>
        <function-ref name="stop" scoped="" ref="0x7f879b7d9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f879b7d9850" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879b7d9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f879b7d9bd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f879b7d9d60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f879b7d8020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f879b7d81b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f879b7d8340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f879b7d84d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f879b7d8660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f879b7d87f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f879b7d8980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f879b7d8b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f879b7d8ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f879b7d8e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f879b7d7020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f879b7d72b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f879b7d7440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f879b7d75d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f879b7d7760"/>
        <function-ref name="isUart" scoped="" ref="0x7f879b7d78f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f879b7d7a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f879b7d7c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f879b7d7da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f879b7d6020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f879b7d61b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f879b7d6340"/>
        <function-ref name="getMode" scoped="" ref="0x7f879b7d64d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f879b7d6860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f879b7d69f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f879b7d6b80"/>
        <function-ref name="tx" scoped="" ref="0x7f879b7d6d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f879b7d5020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f879b7d51b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f879b7d5340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f879b7d54d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879b7d5660"/>
        <function-ref name="rx" scoped="" ref="0x7f879b7d57f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879b7d5980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879b7d5b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879b7d5ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879b7d5e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879b7d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f879b7c7670" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f879b7c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b7c79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b7c7b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879b7c7d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b7c6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b7c61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879b7c6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b7c64d0"/>
        <function-ref name="get" scoped="" ref="0x7f879b7c6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879b7c67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879b7c6980"/>
        <function-ref name="set" scoped="" ref="0x7f879b7c6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879b7c6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879b7c6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879b7c5120"/>
        <function-ref name="clr" scoped="" ref="0x7f879b7c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f879b7ccdc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f879b7ccdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879b7cb180"/>
        <function-ref name="txDone" scoped="" ref="0x7f879b7cb310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f879b7c5670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f879b7c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b7c59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b7c5b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879b7c5d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b7c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b7c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879b7c4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b7c44d0"/>
        <function-ref name="get" scoped="" ref="0x7f879b7c4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879b7c47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879b7c4980"/>
        <function-ref name="set" scoped="" ref="0x7f879b7c4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879b7c4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879b7c4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879b7c3120"/>
        <function-ref name="clr" scoped="" ref="0x7f879b7c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f879b7c3670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f879b7c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b7c39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b7c3b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879b7c3d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b7c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b7c21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879b7c2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b7c24d0"/>
        <function-ref name="get" scoped="" ref="0x7f879b7c2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879b7c27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879b7c2980"/>
        <function-ref name="set" scoped="" ref="0x7f879b7c2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879b7c2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879b7c2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879b7c1120"/>
        <function-ref name="clr" scoped="" ref="0x7f879b7c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f879b7d0020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f879b7d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f879b7d03a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f879b7d0530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f879b7d06c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f879b7d0850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f879b7d09e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f879b7d0b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f879b7d0d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f879b7cf020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f879b7cf1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f879b7cf340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f879b7cf4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f879b7cf660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f879b7cf7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f879b7cfa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f879b7cfc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f879b7cfda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f879b7ce020"/>
        <function-ref name="isUart" scoped="" ref="0x7f879b7ce1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f879b7ce340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f879b7ce4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f879b7ce660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f879b7ce7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f879b7ce980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f879b7ceb10"/>
        <function-ref name="getMode" scoped="" ref="0x7f879b7ceca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f879b7cd220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f879b7cd3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f879b7cd540"/>
        <function-ref name="tx" scoped="" ref="0x7f879b7cd6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f879b7cd860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f879b7cd9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f879b7cdb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f879b7cdd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879b7cc020"/>
        <function-ref name="rx" scoped="" ref="0x7f879b7cc1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879b7cc340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879b7cc4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879b7cc660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879b7cc7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879b7cc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f879b7d3710" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879b7d3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879b7d3a90"/>
        <function-ref name="stop" scoped="" ref="0x7f879b7d3c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f879b7c9670" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f879b7c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b7c99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b7c9b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879b7c9d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b7c8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b7c81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879b7c8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b7c84d0"/>
        <function-ref name="get" scoped="" ref="0x7f879b7c8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879b7c87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879b7c8980"/>
        <function-ref name="set" scoped="" ref="0x7f879b7c8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879b7c8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879b7c8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879b7c7120"/>
        <function-ref name="clr" scoped="" ref="0x7f879b7c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f879b7cb6d0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f879b7cb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b7cba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b7cbbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879b7cbd70"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b7ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b7ca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879b7ca340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b7ca4d0"/>
        <function-ref name="get" scoped="" ref="0x7f879b7ca660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879b7ca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879b7ca980"/>
        <function-ref name="set" scoped="" ref="0x7f879b7cab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879b7caca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879b7cae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879b7c9120"/>
        <function-ref name="clr" scoped="" ref="0x7f879b7c92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879a23a2c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a23a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879a23a640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879a23a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879a234440" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a234440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879a2347c0"/>
        <function-ref name="configure" scoped="" ref="0x7f879a234950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f879a235c10" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f879a235c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879a234020"/>
        <function-ref name="txDone" scoped="" ref="0x7f879a2341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a23b640" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a23b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a23b9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a23bb50"/>
        <function-ref name="request" scoped="" ref="0x7f879a23bce0"/>
        <function-ref name="granted" scoped="" ref="0x7f879a23be70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a23a030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f879a2392b0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f879a2392b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f879a239630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f879a2397c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f879a239950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f879a239ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f879a239c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f879a239e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f879a238020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f879a2381b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f879a238340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f879a2384d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f879a238660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f879a2387f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f879a238980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f879a238c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f879a238da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f879a237020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f879a2371b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f879a237340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f879a2374d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f879a237660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f879a2377f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f879a237980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f879a237b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f879a237ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f879a237e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f879a236220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f879a2363b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f879a236540"/>
        <function-ref name="tx" scoped="" ref="0x7f879a2366d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f879a236860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f879a2369f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f879a236b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f879a236d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f879a235020"/>
        <function-ref name="rx" scoped="" ref="0x7f879a2351b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f879a235340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f879a2354d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f879a235660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f879a2357f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f879a235980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879a23aa60" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a23aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879a23ade0"/>
        <function-ref name="userId" scoped="" ref="0x7f879a239020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879b72f2c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879b72f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879b72f640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879b72f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879b72e8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b72e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879b72ec20"/>
        <function-ref name="configure" scoped="" ref="0x7f879b72edb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f879b7311d0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f879b7311d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879b731550"/>
        <function-ref name="txDone" scoped="" ref="0x7f879b7316e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b730020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b730020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b7303a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b730530"/>
        <function-ref name="request" scoped="" ref="0x7f879b7306c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b730850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b7309e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879b72fad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b72fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879b72fe50"/>
        <function-ref name="userId" scoped="" ref="0x7f879b72e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f879b72ae50" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b72ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879b729210"/>
        <function-ref name="userId" scoped="" ref="0x7f879b7293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f879b72c060" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f879b72c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879b72c400"/>
        <function-ref name="txDone" scoped="" ref="0x7f879b72c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f879b72a840" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f879b72a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879b72abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f879b72c990" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f879b72c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879b72cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f879b72a060" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f879b72a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f879b72a3e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f879b72a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879b7269e0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879b7269e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879b726d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879b725020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879b724770" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879b724770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879b724b10"/>
        <function-ref name="configure" scoped="" ref="0x7f879b724ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f879b725270" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879b725270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b7255f0"/>
        <function-ref name="requested" scoped="" ref="0x7f879b725780"/>
        <function-ref name="granted" scoped="" ref="0x7f879b725910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b725aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879b725c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b727b60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b727b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b726020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b7261b0"/>
        <function-ref name="request" scoped="" ref="0x7f879b726340"/>
        <function-ref name="granted" scoped="" ref="0x7f879b7264d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b726660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879b725e80" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b725e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879b724220"/>
        <function-ref name="userId" scoped="" ref="0x7f879b7243b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879a1deca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879a1deca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879a1dd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f879a1dd330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f879a1dd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879a1dd6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879a1dd840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879a1dd9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879a1ddb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f879a1da3a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f879a1da3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f879a1da740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879a1da8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f879a1d8210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f879a1d8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f879a1d85b0"/>
        <function-ref name="configure" scoped="" ref="0x7f879a1d8740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f879a1d89d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f879a1d89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879a1d8d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879a1d6020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879a1d61b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879a1d6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f879a1dab20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879a1dab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a1d9020"/>
        <function-ref name="requested" scoped="" ref="0x7f879a1d91b0"/>
        <function-ref name="granted" scoped="" ref="0x7f879a1d9340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a1d94d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879a1d9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879a1d6590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879a1d6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879a1d6910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879a1d6aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f879a1d6c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879a1d6dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879a1d5020"/>
        <function-ref name="get" scoped="" ref="0x7f879a1d51b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879a1d5340"/>
        <function-ref name="led0On" scoped="" ref="0x7f879a1d5980"/>
        <function-ref name="set" scoped="" ref="0x7f879a1d5660"/>
        <function-ref name="led2On" scoped="" ref="0x7f879a1d54d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879a1d57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879a1db540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879a1db540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a1db8e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879a1dba70"/>
        <function-ref name="request" scoped="" ref="0x7f879a1dbc00"/>
        <function-ref name="granted" scoped="" ref="0x7f879a1dbd90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a1da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f879a1d98b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a1d98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879a1d9c30"/>
        <function-ref name="userId" scoped="" ref="0x7f879a1d9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f879a1d5c50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f879a1d5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879a1d4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f879a1d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f879b707020" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f879b707020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f879b7073a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f879b7075f0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879b7075f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b707970"/>
        <function-ref name="requested" scoped="" ref="0x7f879b707b00"/>
        <function-ref name="granted" scoped="" ref="0x7f879b707c90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b707e20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879b706020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f879b71e880" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879b71e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879b71ec00"/>
        <function-ref name="stop" scoped="" ref="0x7f879b71ed90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f879b706270" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879b706270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879b7065f0"/>
        <function-ref name="userId" scoped="" ref="0x7f879b706780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f879a1a5b00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f879a1a5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f879a1a5e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f879a1a40f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f879a1a40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879a1a4470"/>
        <function-ref name="requested" scoped="" ref="0x7f879a1a4600"/>
        <function-ref name="granted" scoped="" ref="0x7f879a1a4790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879a1a4920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f879a1a4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f879a1a53a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f879a1a53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879a1a5720"/>
        <function-ref name="stop" scoped="" ref="0x7f879a1a58b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f879a1a4d00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f879a1a4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f879a1a30a0"/>
        <function-ref name="userId" scoped="" ref="0x7f879a1a3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f879b682c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b682c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b681210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f879b68dda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f879b68dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b68c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f879b685b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b685b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b684020"/>
        <function-ref name="write" scoped="" ref="0x7f879b6841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f879b680670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b680670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6809f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b680b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f879b679e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f879b679e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b677210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f879b680e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f879b680e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67e210"/>
        <function-ref name="write" scoped="" ref="0x7f879b67e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f879b66c2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f879b66c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b66c670"/>
        <function-ref name="write" scoped="" ref="0x7f879b66c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f879b66e2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f879b66e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b66e670"/>
        <function-ref name="write" scoped="" ref="0x7f879b66e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f879b68a120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f879b68a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b68a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f879b674670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f879b674670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6749f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b674b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f879b66f2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b66f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b66f670"/>
        <function-ref name="write" scoped="" ref="0x7f879b66f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f879b684c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f879b684c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b683020"/>
        <function-ref name="write" scoped="" ref="0x7f879b6831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f879b683c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f879b683c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b682020"/>
        <function-ref name="write" scoped="" ref="0x7f879b6821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f879b67a670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f879b67a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b67ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f879b67ce50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f879b67ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67b210"/>
        <function-ref name="write" scoped="" ref="0x7f879b67b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f879b67e670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f879b67e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b67eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f879b68e760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b68e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f879b68eae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f879b68ec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f879b68ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f879b689aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b689aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b689e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f879b688120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f879b688120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6885a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f879b673a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b673a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b673df0"/>
        <function-ref name="write" scoped="" ref="0x7f879b672020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f879b688870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f879b688870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b688bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f879b66fad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b66fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b66fe50"/>
        <function-ref name="write" scoped="" ref="0x7f879b66e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f879b68adc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b68adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b689180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f879b675e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f879b675e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b674210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f879b683480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b683480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b683800"/>
        <function-ref name="write" scoped="" ref="0x7f879b683990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f879b684480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b684480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b684800"/>
        <function-ref name="write" scoped="" ref="0x7f879b684990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f879b68d750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f879b68d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b68dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f879b676e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b676e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b675210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f879b677670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f879b677670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6779f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b677b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f879b675670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b675670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6759f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b675b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f879b66dad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f879b66dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b66de50"/>
        <function-ref name="write" scoped="" ref="0x7f879b66c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f879b66ead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f879b66ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b66ee50"/>
        <function-ref name="write" scoped="" ref="0x7f879b66d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f879b67b670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f879b67b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b67bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f879b677e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f879b677e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b676210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6763a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f879b670ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f879b670ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b670e50"/>
        <function-ref name="write" scoped="" ref="0x7f879b66f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f879b67d670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f879b67d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b67db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f879b66cad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f879b66cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b66ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b66b020"/>
        <function-ref name="write" scoped="" ref="0x7f879b66b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b66b340"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b66b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f879b68d100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f879b68d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b68d480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f879b685370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f879b685370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6856f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b685880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f879b682480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b682480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b682800"/>
        <function-ref name="write" scoped="" ref="0x7f879b682990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f879b67ae50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f879b67ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b679210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f879b67ee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f879b67ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67d210"/>
        <function-ref name="write" scoped="" ref="0x7f879b67d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f879b679670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f879b679670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6799f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b679b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f879b681670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f879b681670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6819f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b681b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f879b68c450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f879b68c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b68c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f879b681e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b681e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b680210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b68fa80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b68fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b68fe00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b68e020"/>
        <function-ref name="request" scoped="" ref="0x7f879b68e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b68e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b68e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f879b687020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f879b687020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f879b687cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f879b687cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6850a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f879b6702f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f879b6702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b670670"/>
        <function-ref name="write" scoped="" ref="0x7f879b670800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f879b672ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f879b672ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b672e50"/>
        <function-ref name="write" scoped="" ref="0x7f879b670020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f879b689450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b689450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6897d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f879b6722f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b6722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b672670"/>
        <function-ref name="write" scoped="" ref="0x7f879b672800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f879b66d2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f879b66d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b66d670"/>
        <function-ref name="write" scoped="" ref="0x7f879b66d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f879b67be50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b67be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67a210"/>
        <function-ref name="write" scoped="" ref="0x7f879b67a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f879b676670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f879b676670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6769f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b676b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f879b68caa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f879b68caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b68ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f879b68a770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f879b68a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b68aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f879b67de50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f879b67de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67c210"/>
        <function-ref name="write" scoped="" ref="0x7f879b67c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f879b687670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f879b687670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6879f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f879b67c670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f879b67c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b67c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b67cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f879b674e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f879b674e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b673610"/>
        <function-ref name="write" scoped="" ref="0x7f879b6737a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f879b66b7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f879b66b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b66bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b66bcb0"/>
        <function-ref name="write" scoped="" ref="0x7f879b66be40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b669020"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b6691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f879b655c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b655c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b654210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f879b660da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f879b660da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f879b659b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b659b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b658020"/>
        <function-ref name="write" scoped="" ref="0x7f879b6581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f879b653670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b653670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6539f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b653b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f879b64ce50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f879b64ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64b210"/>
        <function-ref name="write" scoped="" ref="0x7f879b64b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f879b653e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f879b653e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b652210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f879b63f2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f879b63f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b63f670"/>
        <function-ref name="write" scoped="" ref="0x7f879b63f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f879b6422f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f879b6422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b642670"/>
        <function-ref name="write" scoped="" ref="0x7f879b642800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f879b65e120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f879b65e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f879b647670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f879b647670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6479f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b647b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f879b6432f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b6432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b643670"/>
        <function-ref name="write" scoped="" ref="0x7f879b643800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f879b658c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f879b658c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b657020"/>
        <function-ref name="write" scoped="" ref="0x7f879b6571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f879b657c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f879b657c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b655020"/>
        <function-ref name="write" scoped="" ref="0x7f879b6551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f879b64d670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f879b64d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b64db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f879b650e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f879b650e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64e210"/>
        <function-ref name="write" scoped="" ref="0x7f879b64e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f879b652670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f879b652670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6529f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b652b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f879b661760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b661760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f879b661ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f879b661c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f879b661e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f879b65daa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b65daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f879b65b120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f879b65b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65b5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f879b646a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b646a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b646df0"/>
        <function-ref name="write" scoped="" ref="0x7f879b645020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f879b65b870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f879b65b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f879b643ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b643ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b643e50"/>
        <function-ref name="write" scoped="" ref="0x7f879b642020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f879b65edc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b65edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f879b649e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f879b649e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b647210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f879b657480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b657480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b657800"/>
        <function-ref name="write" scoped="" ref="0x7f879b657990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f879b658480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b658480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b658800"/>
        <function-ref name="write" scoped="" ref="0x7f879b658990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f879b660750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f879b660750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b660ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f879b64ae50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b64ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b649210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f879b64b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f879b64b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b64bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f879b649670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b649670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6499f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b649b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f879b640ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f879b640ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b640e50"/>
        <function-ref name="write" scoped="" ref="0x7f879b63f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f879b642ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f879b642ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b642e50"/>
        <function-ref name="write" scoped="" ref="0x7f879b640020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f879b64e670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f879b64e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b64eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f879b64be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f879b64be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64a210"/>
        <function-ref name="write" scoped="" ref="0x7f879b64a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f879b644ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f879b644ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b644e50"/>
        <function-ref name="write" scoped="" ref="0x7f879b643020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f879b651670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f879b651670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6519f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b651b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f879b63fad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f879b63fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b63fe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b63e020"/>
        <function-ref name="write" scoped="" ref="0x7f879b63e1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b63e340"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b63e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f879b660100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f879b660100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b660480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f879b659370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f879b659370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6596f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b659880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f879b655480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b655480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b655800"/>
        <function-ref name="write" scoped="" ref="0x7f879b655990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f879b64de50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f879b64de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64c210"/>
        <function-ref name="write" scoped="" ref="0x7f879b64c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f879b652e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f879b652e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b651210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f879b64c670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f879b64c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b64cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f879b654670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f879b654670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6549f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b654b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f879b65f450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f879b65f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f879b654e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b654e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b653210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b6629e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b6629e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b662d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b661020"/>
        <function-ref name="request" scoped="" ref="0x7f879b6611b0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b661340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b6614d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f879b65a020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f879b65a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f879b65acc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f879b65acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b6590a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f879b6442f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f879b6442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b644670"/>
        <function-ref name="write" scoped="" ref="0x7f879b644800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f879b645ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f879b645ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b645e50"/>
        <function-ref name="write" scoped="" ref="0x7f879b644020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f879b65d450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b65d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f879b6452f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b6452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b645670"/>
        <function-ref name="write" scoped="" ref="0x7f879b645800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f879b6402f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f879b6402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b640670"/>
        <function-ref name="write" scoped="" ref="0x7f879b640800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f879b64ee50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b64ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64d210"/>
        <function-ref name="write" scoped="" ref="0x7f879b64d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f879b64a670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f879b64a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b64a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b64ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f879b65faa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f879b65faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f879b65e770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f879b65e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f879b651e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f879b651e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b650210"/>
        <function-ref name="write" scoped="" ref="0x7f879b6503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f879b65a670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f879b65a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b65a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f879b650670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f879b650670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b6509f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b650b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f879b647e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f879b647e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b646610"/>
        <function-ref name="write" scoped="" ref="0x7f879b6467a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f879b63e7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f879b63e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b63eb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b63ecb0"/>
        <function-ref name="write" scoped="" ref="0x7f879b63ee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b63d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b63d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f879b636b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f879b636b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f879b633020"/>
        <function-ref name="changed" scoped="" ref="0x7f879b6331b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f879b633340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f879b6334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f879b635d70" loc="40:../../../tos/platforms/shimmer/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f879b635d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f879b61e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f879b609cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f879b609cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f879b6080a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f879b608230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f879b6083c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f879b608550"/>
        <function-ref name="setCca" scoped="" ref="0x7f879b6086e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f879b608870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f879b605990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f879b605990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f879b605d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f879b609020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f879b609020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b6093a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b609530"/>
        <function-ref name="modify" scoped="" ref="0x7f879b6096c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b609850"/>
        <function-ref name="resend" scoped="" ref="0x7f879b6099e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f879b60c6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f879b60c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879b60ca40"/>
        <function-ref name="stop" scoped="" ref="0x7f879b60cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f879b607150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f879b607150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f879b6074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f879b5ff650" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f879b5ff650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f879b5ff9d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f879b5ffb60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f879b5ffcf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f879b5ffe80"/>
        <function-ref name="setCca" scoped="" ref="0x7f879b5fe030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f879b5fe1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f879b5f77c0" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f879b5f77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f879b5f6d50"/>
        <function-ref name="clear" scoped="" ref="0x7f879b5f44c0"/>
        <function-ref name="isValid" scoped="" ref="0x7f879b5f6620"/>
        <function-ref name="set" scoped="" ref="0x7f879b5f4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f879b5e0020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b5e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5e03a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b5e0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f879b5e0890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f879b5e0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5e0c10"/>
        <function-ref name="write" scoped="" ref="0x7f879b5e0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f879b5fe5e0" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f879b5fe5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f879b5fe960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f879b5e3530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f879b5e3530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5e38b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f879b5f2880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f879b5f2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f879b5f2c00"/>
        <function-ref name="disable" scoped="" ref="0x7f879b5f2d90"/>
        <function-ref name="captured" scoped="" ref="0x7f879b5f1020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f879b5f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f879b5fd7f0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f879b5fd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879b5f9090"/>
        <function-ref name="fired" scoped="" ref="0x7f879b5fb090"/>
        <function-ref name="startAt" scoped="" ref="0x7f879b5fba10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879b5fb550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f879b5f9550"/>
        <function-ref name="start" scoped="" ref="0x7f879b5fc6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f879b5fcbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f879b5f9a00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b5f9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879b5f9d80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879b5f8020"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879b5f81b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879b5f8340"/>
        <function-ref name="getPower" scoped="" ref="0x7f879b5f84d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879b5f8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f879b5e5550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b5e5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5e58d0"/>
        <function-ref name="write" scoped="" ref="0x7f879b5e5a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f879b5e5e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f879b5e5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5e41c0"/>
        <function-ref name="write" scoped="" ref="0x7f879b5e4350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f879b5d9d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f879b5d9d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b5dd0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f879b5dd270"/>
        <function-ref name="sfd" scoped="" ref="0x7f879b5dd400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879b6008c0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879b6008c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b600c40"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b600dd0"/>
        <function-ref name="modify" scoped="" ref="0x7f879b5ff020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b5ff1b0"/>
        <function-ref name="resend" scoped="" ref="0x7f879b5ff340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f879b5e7d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b5e7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f879b5e60e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f879b5e6270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f879b5e6400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f879b5e3c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b5e3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f879b5eb820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f879b5eb820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b5ebba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b5ebd30"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b5e9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b5e91b0"/>
        <function-ref name="get" scoped="" ref="0x7f879b5e9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b5e94d0"/>
        <function-ref name="set" scoped="" ref="0x7f879b5e9660"/>
        <function-ref name="clr" scoped="" ref="0x7f879b5e97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879b602820" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879b602820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b602ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f879b5f89a0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b5f89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879b5f8d20"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879b5f7020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879b5f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f879b5ecb30" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f879b5ecb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879b5f2020"/>
        <function-ref name="isSet" scoped="" ref="0x7f879b5f21b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b5f2340"/>
        <function-ref name="set" scoped="" ref="0x7f879b5f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f879b5e23e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b5e23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5e2960"/>
        <function-ref name="write" scoped="" ref="0x7f879b5e2af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f879b5e7020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f879b5e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b5e73a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b5e7530"/>
        <function-ref name="request" scoped="" ref="0x7f879b5e76c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b5e7850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b5e79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f879b5f1500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f879b5f1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b5f1980"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b5f1b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b5f1ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b5f1e30"/>
        <function-ref name="get" scoped="" ref="0x7f879b5eb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b5eb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f879b5eb340"/>
        <function-ref name="clr" scoped="" ref="0x7f879b5eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f879b5df130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f879b5df130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5df4b0"/>
        <function-ref name="write" scoped="" ref="0x7f879b5df640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f879b5df9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f879b5df9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5dfd40"/>
        <function-ref name="write" scoped="" ref="0x7f879b5de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f879b5e46d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f879b5e46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5e4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f879b5e9b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f879b5e9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b5e8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b5e81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b5e8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b5e84d0"/>
        <function-ref name="get" scoped="" ref="0x7f879b5e8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b5e87f0"/>
        <function-ref name="set" scoped="" ref="0x7f879b5e8980"/>
        <function-ref name="clr" scoped="" ref="0x7f879b5e8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879b5dd6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879b5dd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879b5dda40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879b5ddbd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f879b5ddd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879b5dc020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879b5dc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f879b5dc340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879b5dc4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879b5dcb10"/>
        <function-ref name="set" scoped="" ref="0x7f879b5dc660"/>
        <function-ref name="led0On" scoped="" ref="0x7f879b5dc7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f879b5dc980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f879b5e15e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b5e15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5e1960"/>
        <function-ref name="write" scoped="" ref="0x7f879b5e1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f879b600020" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f879b600020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879b6003a0"/>
        <function-ref name="stop" scoped="" ref="0x7f879b600530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f879b5e6780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f879b5e6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b5e6b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b5e6c90"/>
        <function-ref name="write" scoped="" ref="0x7f879b5e6e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b5e5020"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b5e51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f879b5e4de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f879b5e4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5e3180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f879b5e2e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f879b5e2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5e1220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f879b5fed70" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f879b5fed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f879b5fd180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f879b53fc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b53fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53e210"/>
        <function-ref name="write" scoped="" ref="0x7f879b53e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f879b549020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f879b549020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f879b543c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b543c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b541020"/>
        <function-ref name="write" scoped="" ref="0x7f879b5411b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f879b53d670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b53d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b53db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f879b536e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f879b536e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b534210"/>
        <function-ref name="write" scoped="" ref="0x7f879b5343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f879b53de50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f879b53de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53b210"/>
        <function-ref name="write" scoped="" ref="0x7f879b53b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f879b5292f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f879b5292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b529670"/>
        <function-ref name="write" scoped="" ref="0x7f879b529800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f879b52b2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f879b52b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52b670"/>
        <function-ref name="write" scoped="" ref="0x7f879b52b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f879b547370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f879b547370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5476f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f879b531670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f879b531670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5319f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b531b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f879b52c2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b52c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52c670"/>
        <function-ref name="write" scoped="" ref="0x7f879b52c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f879b541c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f879b541c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b540020"/>
        <function-ref name="write" scoped="" ref="0x7f879b5401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f879b540c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f879b540c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53f020"/>
        <function-ref name="write" scoped="" ref="0x7f879b53f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f879b537670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f879b537670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5379f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b537b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f879b539e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f879b539e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b538210"/>
        <function-ref name="write" scoped="" ref="0x7f879b5383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f879b53b670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f879b53b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b53bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f879b54b8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b54b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f879b54bc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f879b54be00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f879b54a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f879b546d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b546d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5450a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f879b545370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f879b545370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f879b530a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b530a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b530df0"/>
        <function-ref name="write" scoped="" ref="0x7f879b52f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f879b545ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f879b545ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b545e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f879b52cad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b52cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52ce50"/>
        <function-ref name="write" scoped="" ref="0x7f879b52b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f879b546060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b546060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5463e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f879b532e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f879b532e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b531210"/>
        <function-ref name="write" scoped="" ref="0x7f879b5313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f879b540480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b540480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b540800"/>
        <function-ref name="write" scoped="" ref="0x7f879b540990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f879b541480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b541480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b541800"/>
        <function-ref name="write" scoped="" ref="0x7f879b541990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f879b54a940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f879b54a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b54acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f879b533e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b533e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b532210"/>
        <function-ref name="write" scoped="" ref="0x7f879b5323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f879b534670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f879b534670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5349f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b534b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f879b532670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b532670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5329f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b532b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f879b52aad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f879b52aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52ae50"/>
        <function-ref name="write" scoped="" ref="0x7f879b529020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f879b52bad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f879b52bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52be50"/>
        <function-ref name="write" scoped="" ref="0x7f879b52a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f879b538670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f879b538670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5389f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b538b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f879b534e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f879b534e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b533210"/>
        <function-ref name="write" scoped="" ref="0x7f879b5333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f879b52dad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f879b52dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52de50"/>
        <function-ref name="write" scoped="" ref="0x7f879b52c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f879b53a670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f879b53a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b53ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f879b529ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f879b529ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b529e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b528020"/>
        <function-ref name="write" scoped="" ref="0x7f879b5281b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b528340"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b5284d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f879b54a2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f879b54a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b54a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f879b543490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f879b543490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b543810"/>
        <function-ref name="write" scoped="" ref="0x7f879b5439a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f879b53f480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b53f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53f800"/>
        <function-ref name="write" scoped="" ref="0x7f879b53f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f879b537e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f879b537e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b536210"/>
        <function-ref name="write" scoped="" ref="0x7f879b5363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f879b53be50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f879b53be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53a210"/>
        <function-ref name="write" scoped="" ref="0x7f879b53a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f879b536670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f879b536670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5369f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b536b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f879b53e670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f879b53e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b53eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f879b549670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f879b549670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5499f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f879b53ee50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b53ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b53d210"/>
        <function-ref name="write" scoped="" ref="0x7f879b53d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b54cc30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b54cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b54b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b54b1b0"/>
        <function-ref name="request" scoped="" ref="0x7f879b54b340"/>
        <function-ref name="granted" scoped="" ref="0x7f879b54b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b54b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f879b544160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f879b544160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5444e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f879b544e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f879b544e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5431c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f879b52d2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f879b52d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52d670"/>
        <function-ref name="write" scoped="" ref="0x7f879b52d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f879b52fad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f879b52fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52fe50"/>
        <function-ref name="write" scoped="" ref="0x7f879b52d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f879b5466b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b5466b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b546a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f879b52f2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b52f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52f670"/>
        <function-ref name="write" scoped="" ref="0x7f879b52f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f879b52a2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f879b52a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b52a670"/>
        <function-ref name="write" scoped="" ref="0x7f879b52a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f879b538e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b538e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b537210"/>
        <function-ref name="write" scoped="" ref="0x7f879b5373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f879b533670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f879b533670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5339f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b533b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f879b549cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f879b549cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b5470a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f879b5479c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f879b5479c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b547d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f879b53ae50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f879b53ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b539210"/>
        <function-ref name="write" scoped="" ref="0x7f879b5393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f879b5447b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f879b5447b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b544b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f879b539670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f879b539670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5399f0"/>
        <function-ref name="write" scoped="" ref="0x7f879b539b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f879b531e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f879b531e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b530610"/>
        <function-ref name="write" scoped="" ref="0x7f879b5307a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f879b5287a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f879b5287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b528b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b528cb0"/>
        <function-ref name="write" scoped="" ref="0x7f879b528e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b527020"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b5271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f879b51bdf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f879b51bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b5181c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f879b518350"/>
        <function-ref name="sfd" scoped="" ref="0x7f879b5184e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879b5187c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879b5187c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b518b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f879b517020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f879b517020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f879b5173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f879b51b5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f879b51b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879b51b940"/>
        <function-ref name="stop" scoped="" ref="0x7f879b51bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f879b510380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f879b510380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b510700"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b510890"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b510a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b510bb0"/>
        <function-ref name="get" scoped="" ref="0x7f879b510d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b50f020"/>
        <function-ref name="set" scoped="" ref="0x7f879b50f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f879b50f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f879b509b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f879b509b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f879b508020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f879b5081b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f879b508340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f879b5084d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f879b508660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f879b5087f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f879b508980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f879b508b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f879b508ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f879b508e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f879b507020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f879b5071b0"/>
        <function-ref name="sync" scoped="" ref="0x7f879b507340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f879b5075d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f879b507760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f879b4f19d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f879b4f19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879b4f1d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f879b4f0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f879b507d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f879b507d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f879b504330"/>
        <function-ref name="clear" scoped="" ref="0x7f879b504a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f879b505ba0"/>
        <function-ref name="set" scoped="" ref="0x7f879b503210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f879b50f6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f879b50f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b50fa30"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b50fbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b50fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b50e020"/>
        <function-ref name="get" scoped="" ref="0x7f879b50e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b50e340"/>
        <function-ref name="set" scoped="" ref="0x7f879b50e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f879b50e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f879b502cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b502cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b5000a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b500230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f879b500590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f879b500590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b500910"/>
        <function-ref name="write" scoped="" ref="0x7f879b500aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f879b4ff6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f879b4ff6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4ffa50"/>
        <function-ref name="write" scoped="" ref="0x7f879b4ffbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f879b50a330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b50a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879b50a6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879b50a840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879b50a9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879b50ab60"/>
        <function-ref name="getPower" scoped="" ref="0x7f879b50acf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879b50ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f879b513550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f879b513550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b5138d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f879b513a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f879b513bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f879b50b3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f879b50b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b50b720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f879b511020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f879b511020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879b5113a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879b511530"/>
        <function-ref name="toggle" scoped="" ref="0x7f879b5116c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879b511850"/>
        <function-ref name="get" scoped="" ref="0x7f879b5119e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879b511b70"/>
        <function-ref name="set" scoped="" ref="0x7f879b511d00"/>
        <function-ref name="clr" scoped="" ref="0x7f879b510020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f879b4fe020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b4fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4fe3a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b4fe530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879b514620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879b514620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b5149a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f879b5091e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b5091e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879b509560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879b5096f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879b509880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879b512020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879b512020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b5123a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f879b50d6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f879b50d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b50da60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b50dbf0"/>
        <function-ref name="request" scoped="" ref="0x7f879b50dd80"/>
        <function-ref name="granted" scoped="" ref="0x7f879b50c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b50c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f879b500e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f879b500e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4ff1c0"/>
        <function-ref name="write" scoped="" ref="0x7f879b4ff350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f879b50c530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f879b50c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b50c8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b50ca40"/>
        <function-ref name="write" scoped="" ref="0x7f879b50cbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b50cd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b50b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f879b4fe8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f879b4fe8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b4fee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f879b5127c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f879b5127c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f879b512b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879b4fd150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879b4fd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879b4fd4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879b4fd660"/>
        <function-ref name="led1On" scoped="" ref="0x7f879b4fd7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879b4fd980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879b4fdb10"/>
        <function-ref name="get" scoped="" ref="0x7f879b4fdca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879b4fde30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879b4fc4d0"/>
        <function-ref name="set" scoped="" ref="0x7f879b4fc020"/>
        <function-ref name="led0On" scoped="" ref="0x7f879b4fc1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f879b4fc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f879b5023e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b5023e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b502760"/>
        <function-ref name="write" scoped="" ref="0x7f879b5028f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f879b503b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f879b503b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b502020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f879b50ea50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f879b50ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879b50edd0"/>
        <function-ref name="disable" scoped="" ref="0x7f879b50d020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879b50d1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879b50d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f879b50bad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b50bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b50a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f879b514ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f879b514ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879b5130a0"/>
        <function-ref name="stop" scoped="" ref="0x7f879b513230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f879b491a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879b491a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f879b491df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f879b495670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b495670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879b4959f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879b495b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879b495d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879b492020"/>
        <function-ref name="getPower" scoped="" ref="0x7f879b4921b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879b492340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f879b490550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f879b490550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f879b48fb00"/>
        <function-ref name="clear" scoped="" ref="0x7f879b48d2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f879b48f3d0"/>
        <function-ref name="set" scoped="" ref="0x7f879b48d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f879b4910c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b4910c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879b491440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879b4915d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879b491760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f879b488480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f879b488480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879b488800"/>
        <function-ref name="isSet" scoped="" ref="0x7f879b488990"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b488b20"/>
        <function-ref name="set" scoped="" ref="0x7f879b488cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f879b48c660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f879b48c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f879b48bce0"/>
        <function-ref name="clear" scoped="" ref="0x7f879b489460"/>
        <function-ref name="isValid" scoped="" ref="0x7f879b48b5b0"/>
        <function-ref name="set" scoped="" ref="0x7f879b489b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f879b4926e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f879b4926e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879b492a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f879b492bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879b492d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f879b481020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f879b481020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f879b4813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f879b487d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b487d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879b4840e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879b484270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879b484400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879b484590"/>
        <function-ref name="getPower" scoped="" ref="0x7f879b484720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879b4848b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f879b4784a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879b4784a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879b478820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879b4789b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b478b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b478cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879b478e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f879b481a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f879b481a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f879b47f020"/>
        <function-ref name="clear" scoped="" ref="0x7f879b47f750"/>
        <function-ref name="isValid" scoped="" ref="0x7f879b4808d0"/>
        <function-ref name="set" scoped="" ref="0x7f879b47fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f879b483640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b483640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879b4839c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879b483b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879b483ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f879b47a8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f879b47a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879b47ac30"/>
        <function-ref name="isSet" scoped="" ref="0x7f879b47adc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b478020"/>
        <function-ref name="set" scoped="" ref="0x7f879b4781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f879b4773b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f879b4773b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879b476020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f879b4766e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f879b4766e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879b4753d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f879b47eaf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f879b47eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f879b47b0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f879b47b800"/>
        <function-ref name="isValid" scoped="" ref="0x7f879b47c970"/>
        <function-ref name="set" scoped="" ref="0x7f879b47a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f879b484c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f879b484c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879b483020"/>
        <function-ref name="noAck" scoped="" ref="0x7f879b4831b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879b483340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f879b427cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f879b427cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879b425980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f879b424020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f879b424020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89aed0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f879c899270"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879b424e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f879b423800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f879b423340"/>
        <function-ref name="overflow" scoped="" ref="0x7f879b423cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879b4200b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879b4200b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879b41c630"/>
        <function-ref name="fired" scoped="" ref="0x7f879b41eb00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879b41d920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879b41d4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f879b41b020"/>
        <function-ref name="gett0" scoped="" ref="0x7f879b41cab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879b41d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879b420ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879b41c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879b41e1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f879b41e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f879b40a620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f879b40a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b40aba0"/>
        <function-ref name="write" scoped="" ref="0x7f879b40ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f879b415940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f879b415940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b415cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f879b40e620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f879b40e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b40e9a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b40eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f879b408060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f879b408060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4083e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b408570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f879b401840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f879b401840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b401bc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b401d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f879b408840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f879b408840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b408bc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b408d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f879b3f5c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f879b3f5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3f4020"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f879b3f8c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f879b3f8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3f6020"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f879b414cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f879b414cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b4130a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f879b3fc060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f879b3fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3fc3e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b3fc570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f879b3f9c60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f879b3f9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3f8020"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f879b40d620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f879b40d620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b40d9a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b40db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f879b40b620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f879b40b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b40b9a0"/>
        <function-ref name="write" scoped="" ref="0x7f879b40bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f879b402060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f879b402060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4023e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b402570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f879b404840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f879b404840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b404bc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b404d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f879b407060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f879b407060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4073e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b407570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f879b4162b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f879b4162b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f879b416630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f879b4167c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f879b416950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f879b4116b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f879b4116b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b411a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f879b411d00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f879b411d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b4101c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f879b3fb480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f879b3fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3fb800"/>
        <function-ref name="write" scoped="" ref="0x7f879b3fb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f879b410490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f879b410490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b410810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f879b3f8480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f879b3f8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3f8800"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f879b4139c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f879b4139c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b413d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f879b3fd840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f879b3fd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3fdbc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b3fdd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f879b40de00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f879b40de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b40b1c0"/>
        <function-ref name="write" scoped="" ref="0x7f879b40b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f879b40ee00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f879b40ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b40d1c0"/>
        <function-ref name="write" scoped="" ref="0x7f879b40d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f879b4152f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f879b4152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b415670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f879b3ff840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f879b3ff840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3ffbc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b3ffd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f879b400060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f879b400060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4003e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b400570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f879b3fd060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f879b3fd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3fd3e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b3fd570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f879b3f5480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f879b3f5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3f5800"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f879b3f6480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f879b3f6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3f6800"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f879b403060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f879b403060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4033e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b403570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f879b400840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f879b400840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b400bc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b400d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f879b3f9480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f879b3f9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3f9800"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f879b406060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f879b406060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4063e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b406570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f879b3f4480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f879b3f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b3f4800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b3f4990"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f4b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b3f4cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b3f4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f879b416c20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f879b416c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b415020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f879b40fe00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f879b40fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b40e1c0"/>
        <function-ref name="write" scoped="" ref="0x7f879b40e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f879b40be00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f879b40be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b40a1c0"/>
        <function-ref name="write" scoped="" ref="0x7f879b40a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f879b402840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f879b402840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b402bc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b402d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f879b407840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f879b407840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b407bc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b407d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f879b401060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f879b401060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4013e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b401570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f879b409060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f879b409060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4093e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b409570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f879b414020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f879b414020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b4143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f879b409840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f879b409840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b409bc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b409d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b417520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b417520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b4178a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b417a30"/>
        <function-ref name="request" scoped="" ref="0x7f879b417bc0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b417d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b416020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f879b410ae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f879b410ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b410e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f879b40f7b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f879b40f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b40fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f879b3fac60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f879b3fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3f9020"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f879b3fa480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f879b3fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3fa800"/>
        <function-ref name="write" scoped="" ref="0x7f879b3fa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f879b411060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f879b411060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b4113e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f879b3fbc60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f879b3fbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3fa020"/>
        <function-ref name="write" scoped="" ref="0x7f879b3fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f879b3f6c60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f879b3f6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3f5020"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f879b403840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f879b403840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b403bc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b403d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f879b3ff060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f879b3ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3ff3e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b3ff570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f879b414670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f879b414670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b4149f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f879b413370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f879b413370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b4136f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f879b406840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f879b406840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b406bc0"/>
        <function-ref name="write" scoped="" ref="0x7f879b406d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f879b40f160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f879b40f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f879b40f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f879b404060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f879b404060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b4043e0"/>
        <function-ref name="write" scoped="" ref="0x7f879b404570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f879b3fc840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f879b3fc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b3fb020"/>
        <function-ref name="write" scoped="" ref="0x7f879b3fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f879b3f3160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f879b3f3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f879b3f34e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f879b3f3670"/>
        <function-ref name="write" scoped="" ref="0x7f879b3f3800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f879b3f3990"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b3f3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f879b3c9a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f879b3c9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f879b3c9da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f879b3c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f879b3c7920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f879b3c7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b3c9560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879b3cd990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879b3cd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b3cdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f879b3c3a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f879b3c3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f879b3c3da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f879b3c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f879b3c4940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f879b3c4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b3c3560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879b3c4080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879b3c4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b3c4400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f879b3cbaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f879b3cbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879b3cbe20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879b3c5020"/>
        <function-ref name="isState" scoped="" ref="0x7f879b3c51b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879b3c5340"/>
        <function-ref name="requestState" scoped="" ref="0x7f879b3c54d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f879b3c5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f879b3ab3b0" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f879b3ab3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b3ab730"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b3ab8c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b3aba50"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b3abbe0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b3abd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879b3ae4d0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879b3ae4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b3ae850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b3ae9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b3aeb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b3aed00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b3ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f879b3a6110" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f879b3a6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b3a6490"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b3a6620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b3a67b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b3a6940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b3a6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879b3aad50" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879b3aad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b3a7100"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b3a7290"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b3a7420"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b3a75b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b3a7740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f879b3a1be0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f879b3a1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f879b3a0020"/>
        <function-ref name="rand32" scoped="" ref="0x7f879b3a01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879b3a79c0" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879b3a79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b3a7d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f879b3a04b0" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b3a04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879b3a0830"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879b3a09c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879b3a0b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f879b3a6d60" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f879b3a6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879b3a1180"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879b3a1310"/>
        <function-ref name="isState" scoped="" ref="0x7f879b3a14a0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879b3a1630"/>
        <function-ref name="requestState" scoped="" ref="0x7f879b3a17c0"/>
        <function-ref name="forceState" scoped="" ref="0x7f879b3a1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f879b3a8b00" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f879b3a8b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879b3a8e80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879b38f030"/>
        <function-ref name="isState" scoped="" ref="0x7f879b38f1c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879b38f350"/>
        <function-ref name="requestState" scoped="" ref="0x7f879b38f4e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f879b38f670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f879b389b80" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f879b389b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b387020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879b38cd00" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879b38cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b3890a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f879b389430" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f879b389430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b3897b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f879b383770" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f879b383770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b383af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879b383020" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879b383020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b3833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879b3841e0" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879b3841e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b384560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f879b383df0" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b383df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879b3821c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879b382350"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879b3824e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f879b3848f0" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f879b3848f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b384c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f879b354200" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f879b354200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b354580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f879b354890" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f879b354890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b354c10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b354da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b353020"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b3531b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b353340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879b358c60" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879b358c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b357020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b3571b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b357340"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b3574d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b357660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f879b356020" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f879b356020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b3563a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b356530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b3566c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b356850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b3569e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879b357900" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879b357900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b357c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b358020" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b358020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b3583a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b358530"/>
        <function-ref name="request" scoped="" ref="0x7f879b3586c0"/>
        <function-ref name="granted" scoped="" ref="0x7f879b358850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b3589e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f879b356d50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f879b356d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b355100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f879b355440" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f879b355440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879b3557c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879b355950"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b355ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b355c70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879b355e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f879b34ae20" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f879b34ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b3491c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b349350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b3494e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b349670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b349800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f879b349b50" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f879b349b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b348020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f879b31bdb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f879b31bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879b319180"/>
        <function-ref name="runTask" scoped="" ref="0x7f879b319310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f879b3482f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b3482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879b348670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879b348800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879b348990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879b348b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f879b348cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879b348e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f879b34cbb0" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f879b34cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b34b020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b34b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b34b340"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b34b4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b34b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f879b347b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f879b347b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879b346020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879b3461b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879b346340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879b3464d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f879b347170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b347170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879b3474f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879b347680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879b347810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f879b34c500" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f879b34c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b34c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f879b34e910" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f879b34e910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b34ec90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b34ee20"/>
        <function-ref name="request" scoped="" ref="0x7f879b34d020"/>
        <function-ref name="granted" scoped="" ref="0x7f879b34d1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b34d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f879b34d660" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f879b34d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b34d9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b34db70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b34dd00"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b34c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b34c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f879b34b9d0" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f879b34b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b34bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f879b34a0d0" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f879b34a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879b34a450"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879b34a5e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b34a770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b34a900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879b34aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879b2fbdd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879b2fbdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b2f9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f879b2f9410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f879b2f9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f879b2f9790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f879b2f9920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f879b2f9ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f879b2f9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f879b2eeb80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879b2eeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879b2ed020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879b2ed1b0"/>
        <function-ref name="start" scoped="" ref="0x7f879b2ed340"/>
        <function-ref name="stop" scoped="" ref="0x7f879b2ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f879b2ec860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f879b2ec860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b2ecbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b2ecd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b2eb020"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b2eb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b2eb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f879b2eb690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f879b2eb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b2eba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879b2f2ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879b2f2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b2ef0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b2ef230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b2ef3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b2ef550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b2ef6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f879b2ee080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f879b2ee080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f879b2ee400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f879b2ee590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f879b2ee720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f879b2ee8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f879b2ed800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f879b2ed800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879b2edb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879b2edd10"/>
        <function-ref name="isState" scoped="" ref="0x7f879b2ec020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879b2ec1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f879b2ec340"/>
        <function-ref name="forceState" scoped="" ref="0x7f879b2ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f879b2ebd90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f879b2ebd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879b2ea180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879b2ea310"/>
        <function-ref name="start" scoped="" ref="0x7f879b2ea4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f879b2ea630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879b2ef980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879b2ef980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b2efd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f879b2e72d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f879b2e72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f879b2e7650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f879b2e77e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f879b2e7970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f879b2e7b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f879b2e9580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f879b2e9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f879b2e9900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f879b2e9a90"/>
        <function-ref name="isState" scoped="" ref="0x7f879b2e9c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f879b2e9db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f879b2e8020"/>
        <function-ref name="forceState" scoped="" ref="0x7f879b2e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f879b2d9d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f879b2d9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b2d8180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b2d8310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b2d84a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b2d8630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b2d87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f879b2dd350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f879b2dd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b2dd6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b2dd860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b2dd9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b2ddb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b2ddd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f879b2d9020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f879b2d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f879b2d93a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f879b2d9530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f879b2d96c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f879b2d9850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f879b2d99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f879b2d41c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f879b2d41c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f879b2d4540"/>
        <function-ref name="noAck" scoped="" ref="0x7f879b2d46d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f879b2d4860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f879b2d7410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f879b2d7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f879b2d7790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f879b2d7920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f879b2d7ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f879b2d7c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f879b2d7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f879b2b5690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f879b2b5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b2b5a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f879b2b6860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f879b2b6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b2b6be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b2b6d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b2b5020"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b2b51b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b2b5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f879b2b2610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f879b2b2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f879b2b2990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f879b2b2b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f879b2b2cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f879b2b2e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f879b2b1020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f879b2b11b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f879b2b1340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f879b2b14d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f879b2b1660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f879b2b17f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f879b2b1980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f879b2b1b10"/>
        <function-ref name="sync" scoped="" ref="0x7f879b2b1ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f879b2b0020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f879b2b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f879b2b78b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f879b2b78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f879b2b7c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f879b2b7dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f879b2b6020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f879b2b61b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f879b2b6340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f879b2b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f879b2b8ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f879b2b8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f879b2b70a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f879b2af1f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f879b2af1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f879b2af570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f879b2af700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f879b2af890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f879b2afa20"/>
        <function-ref name="setCca" scoped="" ref="0x7f879b2afbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f879b2afd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f879b2b9a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879b2b9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879b2b9e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879b2b8020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b2b81b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b2b8340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879b2b84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f879b2bd020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879b2bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b2bd3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b2bd530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b2bd6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b2bd850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b2bd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f879b2bbdf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f879b2bbdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b2ba1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f879b2b5ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f879b2b5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f879b2b40a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f879b2b4230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f879b2b43c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f879b2b4550"/>
        <function-ref name="getPower" scoped="" ref="0x7f879b2b46e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f879b2b4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f879b2b04d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f879b2b04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f879b2b0950"/>
        <function-ref name="changed" scoped="" ref="0x7f879b2b0ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f879b2b0c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f879b2b0e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f879b2b4b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f879b2b4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f879b2b2020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f879b2b21b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f879b2b2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f879b2bb210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f879b2bb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f879b2bb590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879b2aed30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879b2aed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879b2ad0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879b2ad270"/>
        <function-ref name="led1On" scoped="" ref="0x7f879b2ad400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879b2ad590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879b2ad720"/>
        <function-ref name="get" scoped="" ref="0x7f879b2ad8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879b2ada40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879b2ac1b0"/>
        <function-ref name="set" scoped="" ref="0x7f879b2adbd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f879b2add60"/>
        <function-ref name="led2On" scoped="" ref="0x7f879b2ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f879b2ba470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f879b2ba470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f879b2ba7f0"/>
        <function-ref name="source" scoped="" ref="0x7f879b2ba980"/>
        <function-ref name="address" scoped="" ref="0x7f879b2bab10"/>
        <function-ref name="destination" scoped="" ref="0x7f879b2baca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f879b2bae30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f879b2b9020"/>
        <function-ref name="type" scoped="" ref="0x7f879b2b91b0"/>
        <function-ref name="setType" scoped="" ref="0x7f879b2b9340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f879b2b94d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f879b2b9660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f879b2b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f879b2ae0f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f879b2ae0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f879b2ae470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f879b2ae600"/>
        <function-ref name="request" scoped="" ref="0x7f879b2ae790"/>
        <function-ref name="granted" scoped="" ref="0x7f879b2ae920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f879b2aeab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879b2258c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestAMCryptoAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879b2258c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879b221cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f879b222320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879b2210d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879b222c20"/>
        <function-ref name="getdt" scoped="" ref="0x7f879b220660"/>
        <function-ref name="gett0" scoped="" ref="0x7f879b2201e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879b2227a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879b2234e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879b2216e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879b2239b0"/>
        <function-ref name="stop" scoped="" ref="0x7f879b223e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f879b1d3020" loc="17:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f879b1d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f879b1d33a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f879b1d3530"/>
        <function-ref name="start" scoped="" ref="0x7f879b1d36c0"/>
        <function-ref name="stop" scoped="" ref="0x7f879b1d3850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f879b21b7f0" loc="12:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879b21b7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879b218cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f879b219300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879b2180d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879b219c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f879b217660"/>
        <function-ref name="gett0" scoped="" ref="0x7f879b2171e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879b219780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879b21a480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879b2186e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879b21a950"/>
        <function-ref name="stop" scoped="" ref="0x7f879b21ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroBoard" ref="0x7f879b19f020" loc="27:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7f879b19f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7f879b19f3a0"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7f879b19f530"/>
        <function-ref name="ledOn" scoped="" ref="0x7f879b19f6c0"/>
        <function-ref name="ledOff" scoped="" ref="0x7f879b19f850"/>
        <function-ref name="ledToggle" scoped="" ref="0x7f879b19f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f879b21b080" loc="11:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f879b21b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f879b21b400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f879b1d3ae0" loc="18:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f879b1d3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879b1d3e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f879b1d2020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b1d21b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b1d2340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f879b1d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f879b1d42b0" loc="16:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f879b1d42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f879b1d4630"/>
        <function-ref name="getPayload" scoped="" ref="0x7f879b1d47c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f879b1d4950"/>
        <function-ref name="cancel" scoped="" ref="0x7f879b1d4ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f879b1d4c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7f879b19fdf0" loc="28:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f879b19fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879b19eac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x7f879b2142e0" loc="14:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f879b2142e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f879b213020"/>
        <function-ref name="readDone" scoped="" ref="0x7f879b2134a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelStdControl" ref="0x7f879b1c66e0" loc="22:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AccelStdControl" scoped="" ref="0x7f879b1c66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879b1c6a60"/>
        <function-ref name="stop" scoped="" ref="0x7f879b1c6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DMA0" ref="0x7f879b1a4600" loc="21:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA0" scoped="" ref="0x7f879b1a4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f879b1a4980"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f879b1a4b10"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f879b1a4ca0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f879b1a4e30"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f879b1c6020"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879b1c61b0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f879b1c6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopSensing" ref="0x7f879b17f6e0" loc="105:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopSensing" scoped="" ref="0x7f879b17f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879b17fa60"/>
        <function-ref name="runTask" scoped="" ref="0x7f879b17fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879b217a80" loc="13:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879b217a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879b217e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879b215020"/>
        <function-ref name="led1On" scoped="" ref="0x7f879b2151b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879b215340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879b2154d0"/>
        <function-ref name="get" scoped="" ref="0x7f879b215660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879b2157f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879b215e30"/>
        <function-ref name="set" scoped="" ref="0x7f879b215980"/>
        <function-ref name="led0On" scoped="" ref="0x7f879b215b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f879b215ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroStdControl" ref="0x7f879b1a2060" loc="26:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroStdControl" scoped="" ref="0x7f879b1a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879b1a23e0"/>
        <function-ref name="stop" scoped="" ref="0x7f879b1a2570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSensing" ref="0x7f879b182020" loc="98:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startSensing" scoped="" ref="0x7f879b182020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879b1823a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f879b182530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GyroInit" ref="0x7f879b1a3900" loc="25:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroInit" scoped="" ref="0x7f879b1a3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b1a3c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AccelInit" ref="0x7f879b1a3160" loc="24:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AccelInit" scoped="" ref="0x7f879b1a3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879b1a35e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CRYPTO" ref="0x7f879b212020" loc="15:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CRYPTO" scoped="" ref="0x7f879b212020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CRYPTO"/>
      </instance>
      <interface-functions>
        <function-ref name="xtea_decrypt" scoped="" ref="0x7f879b2123a0"/>
        <function-ref name="kasumi_decrypt" scoped="" ref="0x7f879b212530"/>
        <function-ref name="blowfish_encrypt" scoped="" ref="0x7f879b2126c0"/>
        <function-ref name="skipjack_encrypt" scoped="" ref="0x7f879b212850"/>
        <function-ref name="safer_decrypt" scoped="" ref="0x7f879b2129e0"/>
        <function-ref name="blowfish_setup" scoped="" ref="0x7f879b212b70"/>
        <function-ref name="blowfish_done" scoped="" ref="0x7f879b212d00"/>
        <function-ref name="rc5_encrypt" scoped="" ref="0x7f879b211020"/>
        <function-ref name="lsb" scoped="" ref="0x7f879b2111b0"/>
        <function-ref name="kasumi_setup" scoped="" ref="0x7f879b211340"/>
        <function-ref name="rc4_encrypt" scoped="" ref="0x7f879b2114d0"/>
        <function-ref name="rc5_decrypt" scoped="" ref="0x7f879b211660"/>
        <function-ref name="rc2_decrypt" scoped="" ref="0x7f879b2117f0"/>
        <function-ref name="rc5_setup" scoped="" ref="0x7f879b211a80"/>
        <function-ref name="kasumi_done" scoped="" ref="0x7f879b211c10"/>
        <function-ref name="xxtea_encrypt" scoped="" ref="0x7f879b211da0"/>
        <function-ref name="rc2_setup" scoped="" ref="0x7f879b1d6020"/>
        <function-ref name="tea_decrypt" scoped="" ref="0x7f879b1d61b0"/>
        <function-ref name="tea_encrypt" scoped="" ref="0x7f879b1d6340"/>
        <function-ref name="skipjack_done" scoped="" ref="0x7f879b1d64d0"/>
        <function-ref name="msb" scoped="" ref="0x7f879b1d6660"/>
        <function-ref name="skipjack_decrypt" scoped="" ref="0x7f879b1d67f0"/>
        <function-ref name="xxtea_decrypt" scoped="" ref="0x7f879b1d6980"/>
        <function-ref name="safer_encrypt" scoped="" ref="0x7f879b1d6b10"/>
        <function-ref name="skipjack_setup" scoped="" ref="0x7f879b1d6ca0"/>
        <function-ref name="blowfish_decrypt" scoped="" ref="0x7f879b1d5220"/>
        <function-ref name="safer_done" scoped="" ref="0x7f879b1d53b0"/>
        <function-ref name="xtea_encrypt" scoped="" ref="0x7f879b1d5540"/>
        <function-ref name="rc2_encrypt" scoped="" ref="0x7f879b1d56d0"/>
        <function-ref name="rc2_done" scoped="" ref="0x7f879b1d5860"/>
        <function-ref name="rc5_done" scoped="" ref="0x7f879b1d59f0"/>
        <function-ref name="rc4_decrypt" scoped="" ref="0x7f879b1d5b80"/>
        <function-ref name="kasumi_encrypt" scoped="" ref="0x7f879b1d5d10"/>
        <function-ref name="safer_setup" scoped="" ref="0x7f879b1d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Accel" ref="0x7f879b1a18e0" loc="23:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7f879b1a18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7f879b1a1c60"/>
        <function-ref name="wake" scoped="" ref="0x7f879b1a1df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="shimmerAnalogSetup" ref="0x7f879b1c73c0" loc="20:TestAMCryptoC.nc">
      <component-ref qname="TestAMCryptoC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f879b1c73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7f879b1c7740"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7f879b1c78d0"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7f879b1c7a60"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7f879b1c7bf0"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7f879b1c7d80"/>
        <function-ref name="reset" scoped="" ref="0x7f879b1d1020"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7f879b1d11b0"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7f879b1d1340"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7f879b1d14d0"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7f879b1d1660"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7f879b1d17f0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7f879b1d1980"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f879b1d1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CRYPTO" ref="0x7f879b175de0" loc="2:../../../tos/platforms/shimmer2r/CRYPTOC.nc">
      <component-ref qname="CRYPTOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CRYPTO" scoped="" ref="0x7f879b175de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CRYPTO"/>
      </instance>
      <interface-functions>
        <function-ref name="xtea_decrypt" scoped="" ref="0x7f879b172180"/>
        <function-ref name="kasumi_decrypt" scoped="" ref="0x7f879b172310"/>
        <function-ref name="blowfish_encrypt" scoped="" ref="0x7f879b1724a0"/>
        <function-ref name="skipjack_encrypt" scoped="" ref="0x7f879b172630"/>
        <function-ref name="safer_decrypt" scoped="" ref="0x7f879b1727c0"/>
        <function-ref name="blowfish_setup" scoped="" ref="0x7f879b172950"/>
        <function-ref name="blowfish_done" scoped="" ref="0x7f879b172ae0"/>
        <function-ref name="rc5_encrypt" scoped="" ref="0x7f879b172c70"/>
        <function-ref name="lsb" scoped="" ref="0x7f879b172e00"/>
        <function-ref name="kasumi_setup" scoped="" ref="0x7f879b171020"/>
        <function-ref name="rc4_encrypt" scoped="" ref="0x7f879b1711b0"/>
        <function-ref name="rc5_decrypt" scoped="" ref="0x7f879b171340"/>
        <function-ref name="rc2_decrypt" scoped="" ref="0x7f879b1714d0"/>
        <function-ref name="rc5_setup" scoped="" ref="0x7f879b171760"/>
        <function-ref name="kasumi_done" scoped="" ref="0x7f879b1718f0"/>
        <function-ref name="xxtea_encrypt" scoped="" ref="0x7f879b171a80"/>
        <function-ref name="rc2_setup" scoped="" ref="0x7f879b171c10"/>
        <function-ref name="tea_decrypt" scoped="" ref="0x7f879b171da0"/>
        <function-ref name="tea_encrypt" scoped="" ref="0x7f879b170020"/>
        <function-ref name="skipjack_done" scoped="" ref="0x7f879b1701b0"/>
        <function-ref name="msb" scoped="" ref="0x7f879b170340"/>
        <function-ref name="skipjack_decrypt" scoped="" ref="0x7f879b1704d0"/>
        <function-ref name="xxtea_decrypt" scoped="" ref="0x7f879b170660"/>
        <function-ref name="safer_encrypt" scoped="" ref="0x7f879b1707f0"/>
        <function-ref name="skipjack_setup" scoped="" ref="0x7f879b170980"/>
        <function-ref name="blowfish_decrypt" scoped="" ref="0x7f879b170d10"/>
        <function-ref name="safer_done" scoped="" ref="0x7f879b16f020"/>
        <function-ref name="xtea_encrypt" scoped="" ref="0x7f879b16f1b0"/>
        <function-ref name="rc2_encrypt" scoped="" ref="0x7f879b16f340"/>
        <function-ref name="rc2_done" scoped="" ref="0x7f879b16f4d0"/>
        <function-ref name="rc5_done" scoped="" ref="0x7f879b16f660"/>
        <function-ref name="rc4_decrypt" scoped="" ref="0x7f879b16f7f0"/>
        <function-ref name="kasumi_encrypt" scoped="" ref="0x7f879b16f980"/>
        <function-ref name="safer_setup" scoped="" ref="0x7f879b16fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CRYPTO" ref="0x7f879b16e940" loc="4:../../../tos/platforms/shimmer2r/CRYPTOP.nc">
      <component-ref qname="CRYPTOP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CRYPTO" scoped="" ref="0x7f879b16e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CRYPTO"/>
      </instance>
      <interface-functions>
        <function-ref name="xtea_decrypt" scoped="" ref="0x7f879b16ecc0"/>
        <function-ref name="kasumi_decrypt" scoped="" ref="0x7f879b16ee50"/>
        <function-ref name="blowfish_encrypt" scoped="" ref="0x7f879b16b020"/>
        <function-ref name="skipjack_encrypt" scoped="" ref="0x7f879b16b1b0"/>
        <function-ref name="safer_decrypt" scoped="" ref="0x7f879b16b340"/>
        <function-ref name="blowfish_setup" scoped="" ref="0x7f879b16b4d0"/>
        <function-ref name="blowfish_done" scoped="" ref="0x7f879b16b660"/>
        <function-ref name="rc5_encrypt" scoped="" ref="0x7f879b16b7f0"/>
        <function-ref name="lsb" scoped="" ref="0x7f879b16b980"/>
        <function-ref name="kasumi_setup" scoped="" ref="0x7f879b16bb10"/>
        <function-ref name="rc4_encrypt" scoped="" ref="0x7f879b16bca0"/>
        <function-ref name="rc5_decrypt" scoped="" ref="0x7f879b16be30"/>
        <function-ref name="rc2_decrypt" scoped="" ref="0x7f879b16a020"/>
        <function-ref name="rc5_setup" scoped="" ref="0x7f879b16a2b0"/>
        <function-ref name="kasumi_done" scoped="" ref="0x7f879b16a440"/>
        <function-ref name="xxtea_encrypt" scoped="" ref="0x7f879b16a5d0"/>
        <function-ref name="rc2_setup" scoped="" ref="0x7f879b16a760"/>
        <function-ref name="tea_decrypt" scoped="" ref="0x7f879b16a8f0"/>
        <function-ref name="tea_encrypt" scoped="" ref="0x7f879b16aa80"/>
        <function-ref name="skipjack_done" scoped="" ref="0x7f879b16ac10"/>
        <function-ref name="msb" scoped="" ref="0x7f879b16ada0"/>
        <function-ref name="skipjack_decrypt" scoped="" ref="0x7f879b169020"/>
        <function-ref name="xxtea_decrypt" scoped="" ref="0x7f879b1691b0"/>
        <function-ref name="safer_encrypt" scoped="" ref="0x7f879b169340"/>
        <function-ref name="skipjack_setup" scoped="" ref="0x7f879b1694d0"/>
        <function-ref name="blowfish_decrypt" scoped="" ref="0x7f879b169860"/>
        <function-ref name="safer_done" scoped="" ref="0x7f879b1699f0"/>
        <function-ref name="xtea_encrypt" scoped="" ref="0x7f879b169b80"/>
        <function-ref name="rc2_encrypt" scoped="" ref="0x7f879b169d10"/>
        <function-ref name="rc2_done" scoped="" ref="0x7f879b168020"/>
        <function-ref name="rc5_done" scoped="" ref="0x7f879b1681b0"/>
        <function-ref name="rc4_decrypt" scoped="" ref="0x7f879b168340"/>
        <function-ref name="kasumi_encrypt" scoped="" ref="0x7f879b1684d0"/>
        <function-ref name="safer_setup" scoped="" ref="0x7f879b168660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879ae0f2a0" loc="39:../../../tos/platforms/shimmer2r/AccelC.nc">
      <component-ref qname="AccelC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879ae0f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879ae0f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Accel" ref="0x7f879aee79c0" loc="38:../../../tos/platforms/shimmer2r/AccelC.nc">
      <component-ref qname="AccelC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7f879aee79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7f879aee7d40"/>
        <function-ref name="wake" scoped="" ref="0x7f879ae0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879ae0c0f0" loc="39:../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <component-ref qname="Mma7361P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879ae0c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879ae0c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Accel" ref="0x7f879ae0c7a0" loc="40:../../../tos/platforms/shimmer2r/Mma7361P.nc">
      <component-ref qname="Mma7361P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Accel" scoped="" ref="0x7f879ae0c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mma_Accel"/>
      </instance>
      <interface-functions>
        <function-ref name="setSensitivity" scoped="" ref="0x7f879ae0cb20"/>
        <function-ref name="wake" scoped="" ref="0x7f879ae0ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879ae02270" loc="37:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <component-ref qname="shimmerAnalogSetupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879ae02270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879ae025f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="shimmerAnalogSetup" ref="0x7f879ae02900" loc="38:../../../tos/platforms/shimmer/shimmerAnalogSetupC.nc">
      <component-ref qname="shimmerAnalogSetupC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f879ae02900"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7f879ae02c80"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7f879ae02e10"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7f879ae01020"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7f879ae011b0"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7f879ae01340"/>
        <function-ref name="reset" scoped="" ref="0x7f879ae014d0"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7f879ae01660"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7f879ae017f0"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7f879ae01980"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7f879ae01b10"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7f879ae01ca0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7f879ae01e30"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f879ae00020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430DmaControl" ref="0x7f879adf8ce0" loc="45:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430DmaControl" scoped="" ref="0x7f879adf8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7f879adfa0a0"/>
        <function-ref name="init" scoped="" ref="0x7f879adfa230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430DmaChannel" ref="0x7f879adfa530" loc="46:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430DmaChannel" scoped="" ref="0x7f879adfa530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f879adfa8b0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f879adfaa40"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f879adfabd0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f879adfad60"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f879adf9020"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879adf91b0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f879adf9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f879adf95f0" loc="47:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f879adf95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f879adf9970"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f879adf9b00"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f879adf9c90"/>
        <function-ref name="isBusy" scoped="" ref="0x7f879adf9e20"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f879adf7020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f879adf71b0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f879adf7340"/>
        <function-ref name="startConversion" scoped="" ref="0x7f879adf74d0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f879adf7660"/>
        <function-ref name="getMem" scoped="" ref="0x7f879adf77f0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f879adf7980"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f879adf7b10"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f879adf7ca0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f879adf6020"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f879adf61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879adfc850" loc="42:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879adfc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879adfcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f879adf6430" loc="48:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f879adf6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f879adf67b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f879adf6940"/>
        <function-ref name="led1On" scoped="" ref="0x7f879adf6ad0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f879adf6c60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f879adf6df0"/>
        <function-ref name="get" scoped="" ref="0x7f879adf5020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f879adf51b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f879adf57f0"/>
        <function-ref name="set" scoped="" ref="0x7f879adf5340"/>
        <function-ref name="led0On" scoped="" ref="0x7f879adf54d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f879adf5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="shimmerAnalogSetup" ref="0x7f879ae00d00" loc="41:../../../tos/platforms/shimmer/shimmerAnalogSetupP.nc">
      <component-ref qname="shimmerAnalogSetupP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="shimmerAnalogSetup" scoped="" ref="0x7f879ae00d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="shimmerAnalogSetup"/>
      </instance>
      <interface-functions>
        <function-ref name="addAccelInputs" scoped="" ref="0x7f879adfd0a0"/>
        <function-ref name="triggerConversion" scoped="" ref="0x7f879adfd230"/>
        <function-ref name="getNumberOfChannels" scoped="" ref="0x7f879adfd3c0"/>
        <function-ref name="addECGInputs" scoped="" ref="0x7f879adfd550"/>
        <function-ref name="addAnExInput" scoped="" ref="0x7f879adfd6e0"/>
        <function-ref name="reset" scoped="" ref="0x7f879adfd870"/>
        <function-ref name="addEMGInput" scoped="" ref="0x7f879adfda00"/>
        <function-ref name="addStrainGaugeInputs" scoped="" ref="0x7f879adfdb90"/>
        <function-ref name="addGSRInput" scoped="" ref="0x7f879adfdd20"/>
        <function-ref name="finishADCSetup" scoped="" ref="0x7f879adfc020"/>
        <function-ref name="addUVInputs" scoped="" ref="0x7f879adfc1b0"/>
        <function-ref name="addGyroInputs" scoped="" ref="0x7f879adfc340"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f879adfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f879ada9d60" loc="51:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel2" scoped="" ref="0x7f879ada9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f879ada8180"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f879ada8310"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f879ada84a0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f879ada8630"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f879ada87c0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ada8950"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f879ada8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel0" ref="0x7f879adaba00" loc="49:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel0" scoped="" ref="0x7f879adaba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f879adabd80"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f879adaa020"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f879adaa1b0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f879adaa340"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f879adaa4d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879adaa660"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f879adaa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879adab110" loc="48:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879adab110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7f879adab490"/>
        <function-ref name="init" scoped="" ref="0x7f879adab620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f879adaabd0" loc="50:../../../tos/chips/msp430/dma/Msp430DmaC.nc">
      <component-ref qname="Msp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel1" scoped="" ref="0x7f879adaabd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f879ada9020"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f879ada91b0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f879ada9340"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f879ada94d0"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f879ada9660"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ada97f0"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f879ada9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x7f879ad79be0" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel2" scoped="" ref="0x7f879ad79be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ad78020"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ad781b0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ad78340"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ad784d0"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ad78660"/>
        <function-ref name="getState" scoped="" ref="0x7f879ad787f0"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ad78980"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ad78b10"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ad78ca0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ad78e30"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ad77020"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ad771b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ad77340"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ad775d0"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ad77760"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ad778f0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ad77a80"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ad77c10"/>
        <function-ref name="reset" scoped="" ref="0x7f879ad77da0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ad76020"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ad761b0"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ad76340"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ad764d0"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ad76660"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ad767f0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ad76b80"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ad76d10"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ad75020"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ad751b0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ad75340"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ad754d0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ad75660"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ad757f0"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ad75980"/>
        <function-ref name="setState" scoped="" ref="0x7f879ad75b10"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ad75ca0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ad75e30"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ad74020"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ad741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel0" ref="0x7f879ad80930" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel0" scoped="" ref="0x7f879ad80930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ad80cb0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ad80e40"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ada3020"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ada31b0"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ada3340"/>
        <function-ref name="getState" scoped="" ref="0x7f879ada34d0"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ada3660"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ada37f0"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ada3980"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ada3b10"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ada3ca0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ada3e30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ad9c020"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ad9c2b0"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ad9c440"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ad9c5d0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ad9c760"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ad9c8f0"/>
        <function-ref name="reset" scoped="" ref="0x7f879ad9ca80"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ad9cc10"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ad9cda0"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ad7f020"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ad7f1b0"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ad7f340"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ad7f4d0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ad7f860"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ad7f9f0"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ad7fb80"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ad7fd10"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ad7e020"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ad7e1b0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ad7e340"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ad7e4d0"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ad7e660"/>
        <function-ref name="setState" scoped="" ref="0x7f879ad7e7f0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ad7e980"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ad7eb10"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ad7eca0"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ad7ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879ad9d370" loc="41:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879ad9d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7f879ada44d0"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7f879ad9d880"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7f879ad9da10"/>
        <function-ref name="setENNMI" scoped="" ref="0x7f879ad9dba0"/>
        <function-ref name="getState" scoped="" ref="0x7f879ad9dd30"/>
        <function-ref name="reset" scoped="" ref="0x7f879ada4020"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7f879ada41b0"/>
        <function-ref name="setState" scoped="" ref="0x7f879ada4340"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7f879ad9d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x7f879ad7d280" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaC.nc">
      <component-ref qname="HplMsp430DmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel1" scoped="" ref="0x7f879ad7d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ad7d600"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ad7d790"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ad7d920"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ad7dab0"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ad7dc40"/>
        <function-ref name="getState" scoped="" ref="0x7f879ad7ddd0"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ad7c020"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ad7c1b0"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ad7c340"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ad7c4d0"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ad7c660"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ad7c7f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ad7c980"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ad7cc10"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ad7cda0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ad7b020"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ad7b1b0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ad7b340"/>
        <function-ref name="reset" scoped="" ref="0x7f879ad7b4d0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ad7b660"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ad7b7f0"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ad7b980"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ad7bb10"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ad7bca0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ad7be30"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ad7a220"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ad7a3b0"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ad7a540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ad7a6d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ad7a860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ad7a9f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ad7ab80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ad7ad10"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ad79020"/>
        <function-ref name="setState" scoped="" ref="0x7f879ad791b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ad79340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ad794d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ad79660"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ad797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DmaControl" ref="0x7f879ad74e80" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <component-ref qname="HplMsp430DmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DmaControl" scoped="" ref="0x7f879ad74e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7f879ad6f020"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7f879ad703b0"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7f879ad70540"/>
        <function-ref name="setENNMI" scoped="" ref="0x7f879ad706d0"/>
        <function-ref name="getState" scoped="" ref="0x7f879ad70860"/>
        <function-ref name="reset" scoped="" ref="0x7f879ad709f0"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7f879ad70b80"/>
        <function-ref name="setState" scoped="" ref="0x7f879ad70d10"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7f879ad70220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f879ad6e0e0" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaP.nc">
      <component-ref qname="HplMsp430DmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f879ad6e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879ad6e460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7f879acebd00" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7f879acebd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879acea0a0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879acea230"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879acea3c0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879acea550"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879acea6e0"/>
        <function-ref name="getState" scoped="" ref="0x7f879acea870"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879aceaa00"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879aceab90"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879acead20"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ace9020"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ace91b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ace9340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ace94d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ace9760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ace98f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ace9a80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ace9c10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ace9da0"/>
        <function-ref name="reset" scoped="" ref="0x7f879ace8020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ace81b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ace8340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ace84d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ace8660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ace87f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ace8980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ace8d10"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ace7020"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ace71b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ace7340"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ace74d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ace7660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ace77f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ace7980"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ace7b10"/>
        <function-ref name="setState" scoped="" ref="0x7f879ace7ca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ace7e30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ace6020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ace61b0"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ace6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7f879ace6610" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f879ace6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879ace6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7f879ace19b0" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7f879ace19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ace1d30"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ace0020"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ace01b0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ace0340"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ace04d0"/>
        <function-ref name="getState" scoped="" ref="0x7f879ace0660"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ace07f0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ace0980"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ace0b10"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ace0ca0"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ace0e30"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879acdf020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879acdf1b0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879acdf440"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879acdf5d0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879acdf760"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879acdf8f0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879acdfa80"/>
        <function-ref name="reset" scoped="" ref="0x7f879acdfc10"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879acdfda0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879acde020"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879acde1b0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879acde340"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879acde4d0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879acde660"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879acde9f0"/>
        <function-ref name="getSource" scoped="" ref="0x7f879acdeb80"/>
        <function-ref name="getSize" scoped="" ref="0x7f879acded10"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879acdd020"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879acdd1b0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879acdd340"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879acdd4d0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879acdd660"/>
        <function-ref name="setSize" scoped="" ref="0x7f879acdd7f0"/>
        <function-ref name="setState" scoped="" ref="0x7f879acdd980"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879acddb10"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879acddca0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879acdde30"/>
        <function-ref name="setDst" scoped="" ref="0x7f879acdc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7f879acdc2f0" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f879acdc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879acdc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMA" ref="0x7f879acd83f0" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMA" scoped="" ref="0x7f879acd83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879acd8770"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879acd8900"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879acd8a90"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879acd8c20"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879acd8db0"/>
        <function-ref name="getState" scoped="" ref="0x7f879acd7020"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879acd71b0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879acd7340"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879acd74d0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879acd7660"/>
        <function-ref name="aborted" scoped="" ref="0x7f879acd77f0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879acd7980"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879acd7b10"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879acd7da0"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879acd6020"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879acd61b0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879acd6340"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879acd64d0"/>
        <function-ref name="reset" scoped="" ref="0x7f879acd6660"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879acd67f0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879acd6980"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879acd6b10"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879acd6ca0"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879acd6e30"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879acd5020"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879acd53b0"/>
        <function-ref name="getSource" scoped="" ref="0x7f879acd5540"/>
        <function-ref name="getSize" scoped="" ref="0x7f879acd56d0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879acd5860"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879acd59f0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879acd5b80"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879acd5d10"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879acd4020"/>
        <function-ref name="setSize" scoped="" ref="0x7f879acd41b0"/>
        <function-ref name="setState" scoped="" ref="0x7f879acd4340"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879acd44d0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879acd4660"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879acd47f0"/>
        <function-ref name="setDst" scoped="" ref="0x7f879acd4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x7f879acd4c50" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaXP.nc">
      <component-ref qname="HplMsp430DmaC.Dma2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f879acd4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879acd3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7f879ac9f020" loc="45:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7f879ac9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ac9f3a0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ac9f530"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ac9f6c0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ac9f850"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ac9f9e0"/>
        <function-ref name="getState" scoped="" ref="0x7f879ac9fb70"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ac9fd00"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ac9e020"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ac9e1b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ac9e340"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ac9e4d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ac9e660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ac9e7f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ac9ea80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ac9ec10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ac9eda0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ac9d020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ac9d1b0"/>
        <function-ref name="reset" scoped="" ref="0x7f879ac9d340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ac9d4d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ac9d660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ac9d7f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ac9d980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ac9db10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ac9dca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ac9c220"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ac9c3b0"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ac9c540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ac9c6d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ac9c860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ac9c9f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ac9cb80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ac9cd10"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ac9b020"/>
        <function-ref name="setState" scoped="" ref="0x7f879ac9b1b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ac9b340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ac9b4d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ac9b660"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ac9b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f879aca0020" loc="44:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7f879aca0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f879aca03a0"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f879aca0530"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f879aca06c0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f879aca0850"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f879aca09e0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879aca0b70"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f879aca0d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7f879ac977a0" loc="45:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7f879ac977a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ac97b20"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ac97cb0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ac97e40"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ac96020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ac961b0"/>
        <function-ref name="getState" scoped="" ref="0x7f879ac96340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ac964d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ac96660"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ac967f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ac96980"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ac96b10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ac96ca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ac96e30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ac95120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ac952b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ac95440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ac955d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ac95760"/>
        <function-ref name="reset" scoped="" ref="0x7f879ac958f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ac95a80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ac95c10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ac95da0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ac94020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ac941b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ac94340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ac946d0"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ac94860"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ac949f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ac94b80"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ac94d10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ac93020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ac931b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ac93340"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ac934d0"/>
        <function-ref name="setState" scoped="" ref="0x7f879ac93660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ac937f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ac93980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ac93b10"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ac93ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f879ac987a0" loc="44:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7f879ac987a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f879ac98b20"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f879ac98cb0"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f879ac98e40"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f879ac97020"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f879ac971b0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ac97340"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f879ac974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel" ref="0x7f879ac8fdb0" loc="45:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel2P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel" scoped="" ref="0x7f879ac8fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ac8e180"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ac8e310"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ac8e4a0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ac8e630"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ac8e7c0"/>
        <function-ref name="getState" scoped="" ref="0x7f879ac8e950"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ac8eae0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ac8ec70"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ac8ee00"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ac8d020"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ac8d1b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ac8d340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ac8d4d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ac8d760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ac8d8f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ac8da80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ac8dc10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ac8dda0"/>
        <function-ref name="reset" scoped="" ref="0x7f879ac8c020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ac8c1b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ac8c340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ac8c4d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ac8c660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ac8c7f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ac8c980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ac8cd10"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ac8b020"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ac8b1b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ac8b340"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ac8b4d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ac8b660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ac8b7f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ac8b980"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ac8bb10"/>
        <function-ref name="setState" scoped="" ref="0x7f879ac8bca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ac8be30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ac8a020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ac8a1b0"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ac8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x7f879ac90d80" loc="44:../../../tos/chips/msp430/dma/Msp430DmaChannelP.nc">
      <component-ref qname="Msp430DmaC.Channel2P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Channel" scoped="" ref="0x7f879ac90d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="stopTransfer" scoped="" ref="0x7f879ac8f180"/>
        <function-ref name="repeatTransfer" scoped="" ref="0x7f879ac8f310"/>
        <function-ref name="setupTransfer" scoped="" ref="0x7f879ac8f4a0"/>
        <function-ref name="startTransfer" scoped="" ref="0x7f879ac8f630"/>
        <function-ref name="setupTransferRaw" scoped="" ref="0x7f879ac8f7c0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ac8f950"/>
        <function-ref name="softwareTrigger" scoped="" ref="0x7f879ac8fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel1" ref="0x7f879ac7e740" loc="48:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel1" scoped="" ref="0x7f879ac7e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ac7eac0"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ac7ec50"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ac7ede0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ac7d020"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ac7d1b0"/>
        <function-ref name="getState" scoped="" ref="0x7f879ac7d340"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ac7d4d0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ac7d660"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ac7d7f0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ac7d980"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ac7db10"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ac7dca0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ac7de30"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ac7c120"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ac7c2b0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ac7c440"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ac7c5d0"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ac7c760"/>
        <function-ref name="reset" scoped="" ref="0x7f879ac7c8f0"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ac7ca80"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ac7cc10"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ac7cda0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ac7b020"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ac7b1b0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ac7b340"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ac7b6d0"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ac7b860"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ac7b9f0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ac7bb80"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ac7bd10"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ac7a020"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ac7a1b0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ac7a340"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ac7a4d0"/>
        <function-ref name="setState" scoped="" ref="0x7f879ac7a660"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ac7a7f0"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ac7a980"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ac7ab10"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ac7aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplControl" ref="0x7f879ac85970" loc="46:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplControl" scoped="" ref="0x7f879ac85970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="clearRoundRobin" scoped="" ref="0x7f879ac84990"/>
        <function-ref name="setRoundRobin" scoped="" ref="0x7f879ac85e80"/>
        <function-ref name="clearOnFetch" scoped="" ref="0x7f879ac84030"/>
        <function-ref name="setENNMI" scoped="" ref="0x7f879ac841c0"/>
        <function-ref name="getState" scoped="" ref="0x7f879ac84350"/>
        <function-ref name="reset" scoped="" ref="0x7f879ac844e0"/>
        <function-ref name="setOnFetch" scoped="" ref="0x7f879ac84670"/>
        <function-ref name="setState" scoped="" ref="0x7f879ac84800"/>
        <function-ref name="clearENNMI" scoped="" ref="0x7f879ac85cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel2" ref="0x7f879ac790d0" loc="49:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel2" scoped="" ref="0x7f879ac790d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ac79450"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ac795e0"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ac79770"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ac79900"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ac79a90"/>
        <function-ref name="getState" scoped="" ref="0x7f879ac79c20"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ac79db0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ac78020"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ac781b0"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ac78340"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ac784d0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ac78660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ac787f0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ac78a80"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ac78c10"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ac78da0"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ac77020"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ac771b0"/>
        <function-ref name="reset" scoped="" ref="0x7f879ac77340"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ac774d0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ac77660"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ac777f0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ac77980"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ac77b10"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ac77ca0"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ac76220"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ac763b0"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ac76540"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ac766d0"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ac76860"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ac769f0"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ac76b80"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ac76d10"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ac75020"/>
        <function-ref name="setState" scoped="" ref="0x7f879ac751b0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ac75340"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ac754d0"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ac75660"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ac757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f879ac85060" loc="44:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f879ac85060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430DmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setFlags" scoped="" ref="0x7f879ac853e0"/>
        <function-ref name="init" scoped="" ref="0x7f879ac85570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplChannel0" ref="0x7f879ac84d90" loc="47:../../../tos/chips/msp430/dma/Msp430DmaControlP.nc">
      <component-ref qname="Msp430DmaControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplChannel0" scoped="" ref="0x7f879ac84d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="disableDMA" scoped="" ref="0x7f879ac82180"/>
        <function-ref name="clearTrigger" scoped="" ref="0x7f879ac82310"/>
        <function-ref name="setDstDecrement" scoped="" ref="0x7f879ac824a0"/>
        <function-ref name="setLevelSensitive" scoped="" ref="0x7f879ac82630"/>
        <function-ref name="setSrcIncrement" scoped="" ref="0x7f879ac827c0"/>
        <function-ref name="getState" scoped="" ref="0x7f879ac82950"/>
        <function-ref name="setWordToWord" scoped="" ref="0x7f879ac82ae0"/>
        <function-ref name="setTrigger" scoped="" ref="0x7f879ac82c70"/>
        <function-ref name="getDestination" scoped="" ref="0x7f879ac82e00"/>
        <function-ref name="setRepeatedBlockMode" scoped="" ref="0x7f879ac81020"/>
        <function-ref name="aborted" scoped="" ref="0x7f879ac811b0"/>
        <function-ref name="setByteToByte" scoped="" ref="0x7f879ac81340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f879ac814d0"/>
        <function-ref name="disableInterrupt" scoped="" ref="0x7f879ac81760"/>
        <function-ref name="interruptPending" scoped="" ref="0x7f879ac818f0"/>
        <function-ref name="setStateRaw" scoped="" ref="0x7f879ac81a80"/>
        <function-ref name="getTrigger" scoped="" ref="0x7f879ac81c10"/>
        <function-ref name="setDstIncrement" scoped="" ref="0x7f879ac81da0"/>
        <function-ref name="reset" scoped="" ref="0x7f879ac80020"/>
        <function-ref name="setSingleMode" scoped="" ref="0x7f879ac801b0"/>
        <function-ref name="triggerDMA" scoped="" ref="0x7f879ac80340"/>
        <function-ref name="setByteToWord" scoped="" ref="0x7f879ac804d0"/>
        <function-ref name="setSrc" scoped="" ref="0x7f879ac80660"/>
        <function-ref name="setRepeatedSingleMode" scoped="" ref="0x7f879ac807f0"/>
        <function-ref name="setSrcNoIncrement" scoped="" ref="0x7f879ac80980"/>
        <function-ref name="setBurstMode" scoped="" ref="0x7f879ac80d10"/>
        <function-ref name="getSource" scoped="" ref="0x7f879ac7f020"/>
        <function-ref name="getSize" scoped="" ref="0x7f879ac7f1b0"/>
        <function-ref name="setSrcDecrement" scoped="" ref="0x7f879ac7f340"/>
        <function-ref name="transferDone" scoped="" ref="0x7f879ac7f4d0"/>
        <function-ref name="enableDMA" scoped="" ref="0x7f879ac7f660"/>
        <function-ref name="setRepeatedBurstMode" scoped="" ref="0x7f879ac7f7f0"/>
        <function-ref name="setBlockMode" scoped="" ref="0x7f879ac7f980"/>
        <function-ref name="setSize" scoped="" ref="0x7f879ac7fb10"/>
        <function-ref name="setState" scoped="" ref="0x7f879ac7fca0"/>
        <function-ref name="setDstNoIncrement" scoped="" ref="0x7f879ac7fe30"/>
        <function-ref name="setEdgeSensitive" scoped="" ref="0x7f879ac7e020"/>
        <function-ref name="setWordToByte" scoped="" ref="0x7f879ac7e1b0"/>
        <function-ref name="setDst" scoped="" ref="0x7f879ac7e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GyroBoard" ref="0x7f879ac4f460" loc="42:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7f879ac4f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7f879ac4f7e0"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7f879ac4f970"/>
        <function-ref name="ledOn" scoped="" ref="0x7f879ac4fb00"/>
        <function-ref name="ledOff" scoped="" ref="0x7f879ac4fc90"/>
        <function-ref name="ledToggle" scoped="" ref="0x7f879ac4fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879ac52510" loc="40:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879ac52510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879ac52890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f879ac52b50" loc="41:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardC.nc">
      <component-ref qname="GyroBoardC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f879ac52b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879ac4f020"/>
        <function-ref name="stop" scoped="" ref="0x7f879ac4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GyroBoard" ref="0x7f879ac445c0" loc="45:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GyroBoard" scoped="" ref="0x7f879ac445c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GyroBoard"/>
      </instance>
      <interface-functions>
        <function-ref name="autoZero" scoped="" ref="0x7f879ac44940"/>
        <function-ref name="buttonPressed" scoped="" ref="0x7f879ac44ad0"/>
        <function-ref name="ledOn" scoped="" ref="0x7f879ac44c60"/>
        <function-ref name="ledOff" scoped="" ref="0x7f879ac44df0"/>
        <function-ref name="ledToggle" scoped="" ref="0x7f879ac43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f879ac46770" loc="43:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f879ac46770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f879ac46af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="buttonNotify" ref="0x7f879ac3fbd0" loc="48:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="buttonNotify" scoped="" ref="0x7f879ac3fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879ac4e840"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f879ac462f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f879ac42ce0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ac42860"/>
        <function-ref name="notify" scoped="" ref="0x7f879ac411e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f879ac46db0" loc="44:../../../tos/platforms/shimmer2/chips/gyro/GyroBoardP.nc">
      <component-ref qname="GyroBoardP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f879ac46db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f879ac44180"/>
        <function-ref name="stop" scoped="" ref="0x7f879ac44310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f879ac47600" loc="51:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonC.nc">
      <component-ref qname="GyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f879ac47600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879ac4e840"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f879ac462f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f879ac23690"/>
        <function-ref name="enable" scoped="" ref="0x7f879ac23210"/>
        <function-ref name="notify" scoped="" ref="0x7f879ac23b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x7f879ac1eb20" loc="44:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <component-ref qname="HplGyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f879ac1eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879ac1d020"/>
        <function-ref name="disable" scoped="" ref="0x7f879ac1d1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879ac1d340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879ac1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879ac21960" loc="43:../../../tos/platforms/shimmer2/chips/gyro/HplGyroButtonC.nc">
      <component-ref qname="HplGyroButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879ac21960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879ac21ce0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879ac21e70"/>
        <function-ref name="toggle" scoped="" ref="0x7f879ac1e030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879ac1e1c0"/>
        <function-ref name="get" scoped="" ref="0x7f879ac1e350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879ac1e4e0"/>
        <function-ref name="set" scoped="" ref="0x7f879ac1e670"/>
        <function-ref name="clr" scoped="" ref="0x7f879ac1e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f879ac1a020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplGyroButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f879ac1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879ac1a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f879ac1a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f879ac1a6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f879ac1a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879ac1a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f879ac1ab70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879ac1ad00"/>
        <function-ref name="get" scoped="" ref="0x7f879ac19020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f879ac191b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f879ac19340"/>
        <function-ref name="set" scoped="" ref="0x7f879ac194d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f879ac19660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f879ac197f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f879ac19a80"/>
        <function-ref name="clr" scoped="" ref="0x7f879ac19c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f879ac1cd50" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplGyroButtonC.UserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879ac1cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879ac1b100"/>
        <function-ref name="isInput" scoped="" ref="0x7f879ac1b290"/>
        <function-ref name="toggle" scoped="" ref="0x7f879ac1b420"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879ac1b5b0"/>
        <function-ref name="get" scoped="" ref="0x7f879ac1b740"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879ac1b8d0"/>
        <function-ref name="set" scoped="" ref="0x7f879ac1ba60"/>
        <function-ref name="clr" scoped="" ref="0x7f879ac1bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f879ac16de0" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplGyroButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f879ac16de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f879ac15180"/>
        <function-ref name="fired" scoped="" ref="0x7f879ac15310"/>
        <function-ref name="disable" scoped="" ref="0x7f879ac154a0"/>
        <function-ref name="edge" scoped="" ref="0x7f879ac15630"/>
        <function-ref name="enable" scoped="" ref="0x7f879ac157c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f879ac15950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f879ac162e0" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplGyroButtonC.InterruptUserButtonC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f879ac162e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879ac16660"/>
        <function-ref name="disable" scoped="" ref="0x7f879ac167f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879ac16980"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879ac16b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEvent" ref="0x7f879abfe2f0" loc="51:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendEvent" scoped="" ref="0x7f879abfe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879abfe670"/>
        <function-ref name="runTask" scoped="" ref="0x7f879abfe800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GpioInterrupt" ref="0x7f879abff760" loc="48:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GpioInterrupt" scoped="" ref="0x7f879abff760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f879abffae0"/>
        <function-ref name="disable" scoped="" ref="0x7f879abffc70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f879abffe00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f879abfe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f879ac02b10" loc="45:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f879ac02b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f879ac01bd0"/>
        <function-ref name="enable" scoped="" ref="0x7f879ac01750"/>
        <function-ref name="notify" scoped="" ref="0x7f879ac00090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f879ac00510" loc="47:../../../tos/platforms/shimmer/SwitchToggleC.nc">
      <component-ref qname="GyroButtonC.SwitchToggleC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f879ac00510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f879ac00890"/>
        <function-ref name="isInput" scoped="" ref="0x7f879ac00a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f879ac00bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f879ac00d40"/>
        <function-ref name="get" scoped="" ref="0x7f879abff020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f879abff1b0"/>
        <function-ref name="set" scoped="" ref="0x7f879abff340"/>
        <function-ref name="clr" scoped="" ref="0x7f879abff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounce" ref="0x7f879abeac40" loc="64:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounce" scoped="" ref="0x7f879abeac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f879abe9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f879abe91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x7f879abfcaf0" loc="45:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Notify" scoped="" ref="0x7f879abfcaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879ac4e840"/>
            <typename><typedef-ref name="button_state_t" ref="0x7f879ac462f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f879abf9bd0"/>
        <function-ref name="enable" scoped="" ref="0x7f879abf9750"/>
        <function-ref name="notify" scoped="" ref="0x7f879abf7090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyLower" ref="0x7f879abf7750" loc="47:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NotifyLower" scoped="" ref="0x7f879abf7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x7f879abf6810"/>
        <function-ref name="enable" scoped="" ref="0x7f879abf6390"/>
        <function-ref name="notify" scoped="" ref="0x7f879abf6c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="debounceTimer" ref="0x7f879abf53d0" loc="48:../../../tos/platforms/shimmer2/chips/gyro/GyroButtonP.nc">
      <component-ref qname="GyroButtonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="debounceTimer" scoped="" ref="0x7f879abf53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879abf1870"/>
        <function-ref name="fired" scoped="" ref="0x7f879abf4e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879abf2c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879abf2780"/>
        <function-ref name="getdt" scoped="" ref="0x7f879abf01e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f879abf1cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879abf2300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879abf4020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879abf1260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879abf44f0"/>
        <function-ref name="stop" scoped="" ref="0x7f879abf49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f879abe48c0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="GyroButtonC.debounceTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f879abe48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f879abe0cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f879abe2320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f879abe00d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f879abe2c20"/>
        <function-ref name="getdt" scoped="" ref="0x7f879abdf660"/>
        <function-ref name="gett0" scoped="" ref="0x7f879abdf1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f879abe27a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f879abe34e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f879abe06e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f879abe39b0"/>
        <function-ref name="stop" scoped="" ref="0x7f879abe3e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f879abda110" loc="20:../../../tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f879abda110"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c89a720"/>
            <typename><typedef-ref name="TMilli" ref="0x7f879c89aa90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f879abdad40"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f879cd75020" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f879cd82b80" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f879cd3a740" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f879cd3d990" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f879cd3a020" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f879cd3d2b0" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f879cd3c120" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f879cd3e4d0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f879cd3ebb0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f879cd3c840" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f879d0c7020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f879d3883a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f879cce9500" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f879cce9280" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f879ccf69c0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f879cd325a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f879cd31020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f879cce9d70" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f879cce8c80" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f879cceab00" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f879cce84f0" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f879cceb190" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f879cceb920" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f879ccea390" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f879cd325a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f879cd31020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f879ccea110" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f879cd325a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f879cd31020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f879ccdb560" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f879ccd9ca0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f879ccd9a20" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f879ccd89d0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f879ccd8750" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f879ccd9270" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f879ccda940" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f879ccda020" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f879ccdbc90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f879cce4890" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f879cce12a0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f879cce1020" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f879cce1c80" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f879cce1a00" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f879cce06a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f879cce0420" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f879cce0d90" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f879ccf1120" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f879ccf0a10" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f879ccf0790" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f879ccf1850" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f879ccf5350" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f879ccf0020" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f879ccf4270" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f879ccf39e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f879ccf5ae0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f879ccf4980" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f879ccf32e0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f879ccf3060" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f879ccef450" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f879ccef1d0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f879ccb21f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f879ce197f0" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f879ce16020" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f879ce19020" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f879d2a1810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f879d447020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f879d446020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f879d447790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f879d43b270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f879d43bac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f879cb9abb0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f879cb9a260" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f879cb9a5e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879cb9a910" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f879cb94620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb94020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879cb94350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f879cb936d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f879cb972a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb97020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f879cb967f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb96210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f879cb96560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f879cb8f020" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb9cc60" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f879cb8e110" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb8fe10" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f879cb8a490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb8be50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879cb8a1c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f879cb8b560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f879cb8d5e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb8d020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879cb8d350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f879cb7bd30" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f879cda1930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f879cb7bab0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f879cb84a10" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f879cb84790" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f879cb92e50" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f879cb86950" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f879cb866d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f879cb813a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f879cb82d70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f879cb81110" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f879cb83e50" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f879cb83870" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f879cb83bc0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f879cb7e810" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f879cb7e590" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f879cb7cb90" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f879cb7c5e0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f879cb7c900" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f879cda1550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f879cb80600" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f879cb80380" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f879cb792f0" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f879cda1930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f879cb7dcf0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f879cb79060" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f879cda1930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f879cb78190" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f879cda1930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f879cb75ad0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb75850" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f879cb73cd0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb73a50" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f879cb71020" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb74ce0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f879cb6b5e0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb6b020" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879cb6b350" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f879cb66bb0" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb665b0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879cb668e0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f879cb68d20" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f879cb69900" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb69680" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f879cb67e00" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cb67820" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f879cb67b70" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f879cafaab0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f879cafa830" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f879caf8020" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f879caf9d30" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f879cafed60" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f879caf9350" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f879caf4410" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
              <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879cafca80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f879cafcdd0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879caf4130" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="52:../../../tos/platforms/shimmer2r/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f879caea270" loc="62:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="59:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f879caeaa20" loc="68:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="64:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f879cae9270" loc="73:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="70:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f879cae81f0" loc="84:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="80:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f879cae6940" loc="101:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="97:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f879cae5190" loc="117:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="103:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f879cae9a00" loc="78:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="75:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f879cae5d00" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="120:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f879cae5a80" loc="134:../../../tos/platforms/shimmer2r/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f879caeba60" loc="57:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="54:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f879cae89d0" loc="90:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="87:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f879cae6190" loc="95:../../../tos/platforms/shimmer2r/Leds.nc">
        <documentation loc="92:../../../tos/platforms/shimmer2r/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f879ca7c020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879ca7d960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f879ca7dce0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f879ca7f020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f879ca7d020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879ca7f8b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f879ca7fc20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f879ca61a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f879ca5e270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f879ca5c070" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f879ca608e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f879ca71b20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f879ca65020" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f879ca64c20" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879ca649a0" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f879ca658a0" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f879ca666d0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879ca66450" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f879ca634b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f879ca64190" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f879ca6e0e0" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f879ca6ea10" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f879ca70720" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f879ca704a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f879ca6d5c0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f879ca6d340" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f879ca6b7a0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f879ca6a400" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879ca6a180" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f879ca69020" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f879ca6ac50" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f879c937dd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f879c937800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879c937b40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f879c92fac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f879c92f840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f879c92e930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f879c92e360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879c92e6a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f879c930740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f879c92d2c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f879c92c920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879c92cc60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f879c92d020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f879c92f070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f879c932720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f879c933db0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879c932130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f879c932480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f879c90c5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f879c90c330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f879c90cdf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f879c90bcf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f879c90b700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f879c90ba60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f879c909b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f879c8b1270" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f879c8b1ba0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f879c8ac070" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f879c8d5450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f879c8d5870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f879c8b49c0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f879c8b5990" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f879c8b5020" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f879c8b41f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f879c8b3470" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f879c8a5510" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f879c8a8cb0" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f879c89d2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879c89d020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f879c89e780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f879c874af0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f879c87f790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f879c88c530" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c904360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f879c904ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f879c88c2b0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c904360"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f879c904ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f879c882870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f879c88aa40" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c8ff2d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f879c8ffb10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f879c88a7c0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c8ff2d0"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f879c8ffb10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f879c879e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f879c875480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f879c88a020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c902230"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f879c9029c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f879c888270" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c8ff2d0"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f879c8ffb10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f879c885020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f879c886d30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f879c886610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f879c879740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f879c88b780" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c902230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f879c9029c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f879c88b500" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c902230"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f879c9029c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f879c887420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f879c8785d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f879c887e00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f879c887b80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f879c883910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f879c8820e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f879c87a840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f879c87d790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f879c8817e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f879c879020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f879c87e020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f879c878cf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f879c885800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879c90d320"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f879c906a10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f879c8774c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f879c874350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f879c888c10" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f879c888990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f879c8734d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879c873250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f879c88cd10" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c904360"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f879c904ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f879c881020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f879c87e770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f879c87a020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f879c8d5450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f879c8d5870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879c87ccf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f879c8d5450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f879c8d5870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f879c87c2a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f879c8e8420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f879c8e8840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879c87c020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f879c8e8420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f879c8e8840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f879c873d90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f879c877cb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f879c883070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f879c875be0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f879c87d020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f879c87f020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879c86b410" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879c86b410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f879c86b650" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879c86b650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f879c86a020" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879c86b650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f879c869120" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f879c86a8a0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f879c869880" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f879c7f5930" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f879c7b8a50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f879c7b71f0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f879c7b3b10" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f879c7b3890" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f879c7b92d0" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f879c7b60e0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f879c7b2490" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f879c7b7930" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f879c7b82b0" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f879c7b47c0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f879c7b9a70" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f879c7bb420" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f879c7b6860" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f879c7b3020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f879c7b4070" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f879c7bbb50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/platforms/shimmer/chips/msp430/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f879c7cc780" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f879c7dfc90" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f879c7d2020" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f879c7d3ca0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f879c7e6390" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f879c7cf7a0" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f879c7d7020" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f879c7e0da0" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f879c7ddb70" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f879c7e1d40" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f879c7e1ac0" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f879c7e3270" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f879c7db900" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f879c7d1020" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f879c7cc020" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f879c7d3560" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f879c7c71f0" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f879c7c3880" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f879c7e5270" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f879c7db190" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f879c7daa90" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f879c7e0650" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f879c7e8190" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f879c7d5d40" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f879c7d5ac0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f879c7eb9f0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f879c7cf020" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f879c7ca020" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f879c7c59a0" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f879c7c3120" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f879c7ce790" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f879c7ca750" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f879c7d27b0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f879c7c81f0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f879c7e5990" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f879c7d61f0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f879c7c9630" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f879c7cd790" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f879c7d8760" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f879c7d84e0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f879c7c4190" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f879c7d5390" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f879c7ce020" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f879c7e8c10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f879c8c1240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f879c8c1660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879c7e8990" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f879c8c1240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f879c8c1660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f879c7dca00" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f879c7e4a80" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f879c7e4800" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f879c7da2a0" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879c7da020" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f879c7c89c0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f879c7e13b0" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f879c7e4120" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f879c7d6bb0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f879c7d6930" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f879c7e6ac0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f879c7cae70" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f879c7cd020" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f879c7d1790" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f879c7d79f0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f879c7d7770" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f879c7dc2b0" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f879c7df530" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f879c7c4900" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f879c7e3bf0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f879c7e3970" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f879c7c79b0" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f879c7dd420" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f879c7c51f0" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f879c4ef730" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f879c4efe60" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f879c4f1880" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f879c4eecf0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f879c4ef020" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f879c4ee5b0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f879c4f4a90" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f879c4f1190" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f879c494020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f879c494880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f879c45fe00" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f879c45d020" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f879c45f570" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f879c45e6d0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f879c45d950" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f879c450020" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f879c457090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f879c452d20" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f879c457090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f879c453020" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f879c453b20" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f879c457090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f879c4538a0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f879c457090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f879c452470" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f879c457090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f879c2e7ad0" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f879c2e7ad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f879c2e2270" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f879c2e7ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f879c2e1cb0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f879c2e7ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f879c2e1a30" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f879c2e7ad0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f879ded7c30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f879ded7c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f879c2dec70" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f879c2e7ad0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f879c2de9f0" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f879c2e4b20" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f879c2e3ad0" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f879c2e2e50" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f879c2e7ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f879c2e43b0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f879c2e32d0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f879c2bddd0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f879c2bdb50" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f879c284700" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c284700"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f879c280020" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f879c280d50" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c284700"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f879c2807a0" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f879c280ac0" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c284700"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f879c268020" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c268020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f879c268920" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f879c2676c0" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c268020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f879c267110" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f879c267430" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c268020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f879c276bf0" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c276bf0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7f879c26f020" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c276bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f879c272650" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f879c2729d0" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c276bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f879c272d30" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7f879c273b10" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c276bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f879c273520" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879c276bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f879c273880" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f879c271d90" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7f879c271b10" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f879c26e660" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f879c26e020" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7f879c26e3d0" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f879c2484b0" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f879c2484b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f879c248e80" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f879c2484b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f879c22b4b0" loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f879c233450" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879c2331d0" loc="84:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f879c232940" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879c232340" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f879c2326b0" loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f879c22c4c0" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879c22d260" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f879c22db00" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f879c22de80" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f879c22c210" loc="177:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f879c228dd0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f879c228730" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f879c228ac0" loc="227:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f879c22fd30" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879c231a30" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f879c22f380" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f879c22f710" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f879c22fa80" loc="138:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f879c229120" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879c22be70" loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f879c1d9e20" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f879c1d9160" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c260a50"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f879c25f020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f879c1dbaf0" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f879c261e30"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f879c261550"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f879c1da020" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c260a50"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f879c25f020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f879c1da390" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f879c1da730" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f879c1daae0" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f879c1dae50" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f879c1d8dc0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f879c1d87a0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f879c1d8b30" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f879c1d5780" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f879c1d4020" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f879c1ccda0" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f879c1c86a0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f879c1bcac0" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c24f5f0"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f879c24d090"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f879c1b9c30" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c260a50"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f879c25f020"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f879c1b99b0" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f879c1b6350" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f879c1b4550" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f879c1b6d50" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f879c1b6ad0" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f879c1bb350" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c24c710"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f879c24a020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f879c1b9130" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c260a50"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f879c25f020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f879c1bbac0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f879c1bbe80" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f879c260a50"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f879c25f020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f879c1b3600" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f879c1bd760" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c24f5f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f879c24d090"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f879c1bd4e0" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c24f5f0"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f879c24d090"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f879c1b8750" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f879c1b84d0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f879c1b72a0" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f879c1b7020" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f879c1b7b10" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f879c1b4d10" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f879c1b3da0" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f879c1bc2a0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c24c710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f879c24a020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f879c1bc020" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f879c24c710"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f879c24a020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879c027020" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879c027020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f879c020c50" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f879c0245b0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f879c022360" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f879c023d60" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f879c0220d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f879c0235b0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f879c01fca0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f879c01f420" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f879c024d90" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f879c027b90" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f879c027910" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f879c0202f0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f879c022d00" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f879c020060" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f879c025680" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f879c025400" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f879c025e80" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879bf706d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879bf706d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f879bf6c020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f879bf67070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879bf67070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f879bf672b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bf672b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f879bf63e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bf672b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f879bf66e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f879bf63460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bf672b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bf672b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f879bf64e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bf672b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f879bf631d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bf672b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f879bf64640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f879bf62620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bf672b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f879bf67e10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bf672b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f879bf67b90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bf672b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f879bf66680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f879bcb8b30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f879bcb8b30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f879bcb8d70" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bcb8d70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f879bcb3c00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bcb8d70"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bcb3980" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f879bcb2d80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bcb2b00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f879bcb59c0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bcb5740" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f879bcb40c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bcb8d70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bcb0a80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f879bcb0de0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f879bcb8d70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f879bca3030" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bca49e0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f879bca4d70" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f879bca22a0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bca2020" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f879bca41f0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f879bca67f0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f879bca6570" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f879bc7b430" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc7b1b0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f879bc7e720" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc7e4a0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f879bc81dc0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f879bc81b40" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f879bc812a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f879bc81020" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f879bc7f880" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f879bc7f600" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f879bc7d5e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc7d360" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f879bc70e60" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f879bc70850" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f879bc70bd0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f879bc8a0c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f879bc8caa0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f879bc8cdf0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f879bc866d0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f879bc860d0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f879bc86440" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f879bc8aba0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f879ded2110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f879bc8a920" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f879bc88600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f879bc88380" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f879bc8c2a0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f879bc8c020" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f879bc89720" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f879bc894a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f879bc74630" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc743b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f879bc786f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc780d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f879bc78460" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f879bc755f0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc75370" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f879bc77af0" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc774d0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f879bc77860" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f879bc72630" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc723b0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f879bc830b0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc8ddd0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420RxState" loc="41:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
      <documentation loc="33:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <short>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; </short>
        <long>&#10; strictly for manipulating the receiver prior to radio start-up&#10; so that we can run without reception and/or cca under certain circumstances&#10;&#10; @author Steve Ayer&#10; @date   February, 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="enableRx" ref="0x7f879bc59040" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f879bc5cd90" loc="43:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x7f879bc599c0" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
        <interfacedef-ref qname="CC2420RxState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f879bc59740" loc="45:../../../tos/platforms/shimmer2r/chips/cc2420/CC2420RxState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f879bc48900" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f879bc48340" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f879bc48670" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f879bc47c10" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f879bc43410" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f879bc445e0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f879bc44e20" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879bc43170" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f879bc46dc0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f879bc467e0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f879bc46b30" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f879bc473d0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f879bc47150" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f879bc40820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f879bc40020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f879bc3aae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc3a820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f879bc3a020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f879cddc720"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f879cdd9090"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc3cbe0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f879bc39de0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f879cdd9b90"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f879cdd7b80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879bc39ae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f879bc4e4c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f879bc4c570" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f879bc4dd50" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f879bc53b70" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f879bc4fbe0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f879bc4ed30" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f879bc4d580" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f879bc4f420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f879bc33480" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f879bc35ac0" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f879bc34c90" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f879bc34a10" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f879bc34270" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f879bc36800" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f879bc36580" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f879bc352e0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f879bc35060" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f879bbd1120" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f879bbd2ad0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f879bbd2e20" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f879bbd4a70" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f879bbd4130" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f879bbd5aa0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f879bbd5e80" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f879bbda4e0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f879bbda260" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f879bbd2350" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f879bbd6020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f879bbd7d20" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f879bbd9610" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f879bbd9390" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f879bbd0390" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f879bbd52a0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f879bbd5020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f879bbd1b20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f879bbd9d90" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f879bc9f670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f879bc9fdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f879bbd75c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f879bbdea60" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f879bbdac30" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f879bbd67c0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f879bba92a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879cdde8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879bba9020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f879bba9d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879cdde8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879bba9b00" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f879bbc1640" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f879bc9f670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f879bc9fdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f879bbb3af0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f879bbb2ab0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f879bbb2350" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f879cda1930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f879bbb32b0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f879cda1930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f879bbb8b40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f879cda1930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f879bbb3020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f879cda1d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f879bba3540" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879cdde8d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f879bbae2c0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879cdde8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f879bbaf3d0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f879bbafc40" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879bbae020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f879bbada80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879cdde8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f879bbaeb90" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f879bbad490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879bbad7e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f879bbb5190" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f879bbb6960" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f879bbb61f0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f879bbb98d0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f879ba98ad0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f879ba97c90" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f879ba974e0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f879ba97260" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f879ba98270" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f879ba432b0" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f879ba42d50" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f879ba44af0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f879ba42530" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f879ba422b0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f879ba44350" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f879ba43ab0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f879b92e810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f879b92d0e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f879b92d920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f879b904420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b905e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879b904190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f879b8ff700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b900d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879b8ff110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f879b8ff460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f879b900020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879cdde8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b901970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879b901cc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f879b905020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f879cdde8d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b9069d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879b906d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f879b902b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b902250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f879b9025a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f879b9028f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f879b8e5a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f879b8e50d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f879b8e5460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879b8e57a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f879b8e0020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f879b8e32a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f879b8e3630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f879b8e3970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f879b8e3ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f879b8e78f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f879b8e7670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f879b84d120" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f879c8e8420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f879c8e8840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f879b855d60" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b855ae0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f879b8512a0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b851020" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f879b852610" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f879b851d30" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b851ab0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f879b71a2b0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f879b605580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f879b5d99e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f879b5d9020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f879b5d9750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f879b5da7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f879b5da020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f879b5ded30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f879b5ef2a0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879b5ef020" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f879b5f02a0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879b5f0020" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f879b5ec2a0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879b5ec020" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f879b5ed2a0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f879b5ed020" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f879cd91720"/>
                <typename><typedef-ref name="message_t" ref="0x7f879cd90d80"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f879b3ca5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f879b3ca5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f879b3c72a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f879b3ca5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f879b3c7020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f879b3ca5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GyroBoard" loc="39:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
      <function command="" provided="0" name="autoZero" ref="0x7f879b19c560" loc="47:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="buttonPressed" ref="0x7f879b19ccc0" loc="50:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOn" ref="0x7f879b19d0e0" loc="43:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledOff" ref="0x7f879b19d790" loc="44:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ledToggle" ref="0x7f879b19de60" loc="45:../../../tos/platforms/shimmer2/chips/gyro/GyroBoard.nc">
        <interfacedef-ref qname="GyroBoard"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430DmaChannel" loc="41:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
      <function command="" provided="0" name="stopTransfer" ref="0x7f879b1a57f0" loc="102:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Stop a DMA transfer in progress&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="repeatTransfer" ref="0x7f879b1a7630" loc="91:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="86:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Repeat a DMA transfer using previous settings but new pointers&#10; and transfer size.</short>
          <long>&#10; Repeat a DMA transfer using previous settings but new pointers&#10; and transfer size.  Automatically starts the transfer (sets the&#10; enable bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src_addr" ref="0x7f879b1a8c20" loc="91:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dst_addr" ref="0x7f879b1a7020" loc="91:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f879b1a7390" loc="92:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setupTransfer" ref="0x7f879b1aa090" loc="49:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="43:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Setup a transfer using explicit argument (most robust and simple&#10; mechanism and recommended for novice users)&#10;&#10; See MSP430DMA.h for parameter options&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b8a70"/>
              <typename><typedef-ref name="dma_transfer_mode_t" ref="0x7f879b1b6740"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1c11c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7f879b1bee00"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b3600"/>
              <typename><typedef-ref name="dma_level_t" ref="0x7f879b1b2090"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b4860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7f879b1b3350"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b4860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7f879b1b3350"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b5700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7f879b1b45d0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b5700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7f879b1b45d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="transfer_mode" ref="0x7f879b1aec50" loc="49:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b8a70"/>
              <typename><typedef-ref name="dma_transfer_mode_t" ref="0x7f879b1b6740"/></typename>
            </type-tag>
          </variable>
          <variable name="trigger" ref="0x7f879b1ad060" loc="50:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1c11c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7f879b1bee00"/></typename>
            </type-tag>
          </variable>
          <variable name="level" ref="0x7f879b1ad3f0" loc="51:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b3600"/>
              <typename><typedef-ref name="dma_level_t" ref="0x7f879b1b2090"/></typename>
            </type-tag>
          </variable>
          <variable name="src_addr" ref="0x7f879b1ad770" loc="52:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dst_addr" ref="0x7f879b1adaf0" loc="53:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f879b1ade60" loc="54:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="src_byte" ref="0x7f879b1ac240" loc="55:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b4860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7f879b1b3350"/></typename>
            </type-tag>
          </variable>
          <variable name="dst_byte" ref="0x7f879b1ac5f0" loc="56:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b4860"/>
              <typename><typedef-ref name="dma_byte_t" ref="0x7f879b1b3350"/></typename>
            </type-tag>
          </variable>
          <variable name="src_incr" ref="0x7f879b1ac9a0" loc="57:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b5700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7f879b1b45d0"/></typename>
            </type-tag>
          </variable>
          <variable name="dst_incr" ref="0x7f879b1acd50" loc="58:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1b5700"/>
              <typename><typedef-ref name="dma_incr_t" ref="0x7f879b1b45d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startTransfer" ref="0x7f879b1a83e0" loc="84:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="80:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Enable the DMA module.</short>
          <long>&#10; Enable the DMA module.  Equivalent to setting the DMA enable bit.&#10; This function does not force a transfer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setupTransferRaw" ref="0x7f879b1a9900" loc="77:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="60:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Raw interface for setting up a DMA transfer.</short>
          <long>&#10; Raw interface for setting up a DMA transfer.  This function is&#10; intended to provide as much raw performance as possible but&#10; sacrifices type checking in the process.  Recommended ONLY for&#10; advanced users that have very intricate knowledge of the MSP430&#10; DMA module described in the user's guide.&#10;&#10; @param state The control register value, as specified by &#10;              dma_control_state_t in MSP430DMA.h&#10; @param trigger The trigger for the DMA transfer.  Should be one&#10;                of the options from dma_trigger_t in MSP430DMA.h&#10; @param src Pointer to the source address&#10; @param dest Pointer to the destination address&#10; @param size Size of the DMA transfer&#10;&#10; See MSP430DMA.h for parameter options&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x7f879b1aa8b0" loc="77:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="trigger" ref="0x7f879b1aac20" loc="77:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="src" ref="0x7f879b1a9020" loc="78:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7f879b1a9350" loc="78:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f879b1a9640" loc="78:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="transferDone" ref="0x7f879b1a42a0" loc="107:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="104:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Notification that the transfer has completed&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="success" ref="0x7f879b1a4020" loc="107:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="softwareTrigger" ref="0x7f879b1a5020" loc="97:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
        <documentation loc="94:../../../tos/chips/msp430/dma/Msp430DmaChannel.nc">
          <short>&#10; Trigger a DMA transfer using software&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CRYPTO" loc="2:../../../tos/platforms/shimmer2r/CRYPTO.nc">
      <function command="" provided="0" name="xtea_decrypt" ref="0x7f879b1fb2c0" loc="13:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
                <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f879b1fc820" loc="13:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f879b1fcb40" loc="13:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1fb020" loc="13:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
                <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="kasumi_decrypt" ref="0x7f879b1dfdc0" loc="37:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f879b2085a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f879b205020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f879b1df420" loc="37:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f879b1df780" loc="37:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1dfb20" loc="37:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f879b2085a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f879b205020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="blowfish_encrypt" ref="0x7f879b1dbe50" loc="41:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="blowfish_key" ref="0x7f879b20da50"/></typename>
                <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f879b20feb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f879b1db460" loc="41:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f879b1db7c0" loc="41:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1dbbb0" loc="41:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="blowfish_key" ref="0x7f879b20da50"/></typename>
                <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f879b20feb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="skipjack_encrypt" ref="0x7f879b1f8800" loc="16:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f879b2091a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f879b209870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f879b1f9e20" loc="16:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f879b1f81b0" loc="16:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1f8560" loc="16:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f879b2091a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f879b209870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="safer_decrypt" ref="0x7f879b1eacc0" loc="27:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f879b209c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f879b208200"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block_in" ref="0x7f879b1ea2f0" loc="27:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="block_out" ref="0x7f879b1ea690" loc="27:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1eaa20" loc="27:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f879b209c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f879b208200"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="blowfish_setup" ref="0x7f879b1dccb0" loc="40:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f879b20feb0"/>
                <typename><typedef-ref name="blowfish_key" ref="0x7f879b20da50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f879b1dc020" loc="40:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f879b1dc320" loc="40:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="num_rounds" ref="0x7f879b1dc650" loc="40:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f879b1dca00" loc="40:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f879b20feb0"/>
                <typename><typedef-ref name="blowfish_key" ref="0x7f879b20da50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="blowfish_done" ref="0x7f879b1d89f0" loc="43:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f879b20feb0"/>
                <typename><typedef-ref name="blowfish_key" ref="0x7f879b20da50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f879b1d8770" loc="43:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f879b20feb0"/>
                <typename><typedef-ref name="blowfish_key" ref="0x7f879b20da50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc5_encrypt" ref="0x7f879b1e6a80" loc="31:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc5_key" ref="0x7f879b20bd50"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f879b20b500"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f879b1e6110" loc="31:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f879b1e6430" loc="31:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7f879b1e67e0" loc="31:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc5_key" ref="0x7f879b20bd50"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f879b20b500"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lsb" ref="0x7f879b1d7350" loc="45:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b1d70d0" loc="45:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="kasumi_setup" ref="0x7f879b1e29a0" loc="35:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f879b2085a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f879b205020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f879b1e3bb0" loc="35:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f879b1e2020" loc="35:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="num_rounds" ref="0x7f879b1e2350" loc="35:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f879b1e26f0" loc="35:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f879b2085a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f879b205020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc4_encrypt" ref="0x7f879b1ff360" loc="9:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b200d20" loc="9:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x7f879b1ff0d0" loc="9:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc5_decrypt" ref="0x7f879b1e5ac0" loc="32:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc5_key" ref="0x7f879b20bd50"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f879b20b500"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f879b1e5150" loc="32:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f879b1e5470" loc="32:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7f879b1e5820" loc="32:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc5_key" ref="0x7f879b20bd50"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f879b20b500"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc2_decrypt" ref="0x7f879b1f1b10" loc="22:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc2_key" ref="0x7f879b20fb00"/></typename>
                <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f879b20f490"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f879b1f1150" loc="22:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f879b1f14b0" loc="22:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1f1870" loc="22:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc2_key" ref="0x7f879b20fb00"/></typename>
                <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f879b20f490"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc5_setup" ref="0x7f879b1e7a40" loc="30:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f879b20b500"/>
                <typename><typedef-ref name="rc5_key" ref="0x7f879b20bd50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f879b1e9d20" loc="30:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="keysize_b" ref="0x7f879b1e70d0" loc="30:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="rounds" ref="0x7f879b1e7420" loc="30:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x7f879b1e7790" loc="30:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f879b20b500"/>
                <typename><typedef-ref name="rc5_key" ref="0x7f879b20bd50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="kasumi_done" ref="0x7f879b1de790" loc="38:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f879b2085a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f879b205020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f879b1de510" loc="38:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f879b2085a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f879b205020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="xxtea_encrypt" ref="0x7f879b201780" loc="6:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b201180" loc="6:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x7f879b2014f0" loc="6:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc2_setup" ref="0x7f879b1f47b0" loc="20:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f879b20f490"/>
                <typename><typedef-ref name="rc2_key" ref="0x7f879b20fb00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f879b1f5ae0" loc="20:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f879b1f5de0" loc="20:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="num_rounds" ref="0x7f879b1f4180" loc="20:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f879b1f4500" loc="20:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f879b20f490"/>
                <typename><typedef-ref name="rc2_key" ref="0x7f879b20fb00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tea_decrypt" ref="0x7f879b205d50" loc="3:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v0" ref="0x7f879b205790" loc="3:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="v1" ref="0x7f879b205ac0" loc="3:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tea_encrypt" ref="0x7f879b203a20" loc="4:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="v0" ref="0x7f879b203460" loc="4:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
          <variable name="v1" ref="0x7f879b203790" loc="4:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="skipjack_done" ref="0x7f879b1f53d0" loc="18:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f879b2091a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f879b209870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f879b1f5150" loc="18:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f879b2091a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f879b209870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="msb" ref="0x7f879b1d7c50" loc="46:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b1d79d0" loc="46:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="skipjack_decrypt" ref="0x7f879b1f79d0" loc="17:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f879b2091a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f879b209870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f879b1f7020" loc="17:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f879b1f7380" loc="17:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1f7730" loc="17:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f879b2091a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f879b209870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="xxtea_decrypt" ref="0x7f879b200620" loc="7:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b200020" loc="7:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x7f879b200390" loc="7:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="safer_encrypt" ref="0x7f879b1ebb20" loc="26:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f879b209c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f879b208200"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="block_in" ref="0x7f879b1eb150" loc="26:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="block_out" ref="0x7f879b1eb4f0" loc="26:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1eb880" loc="26:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f879b209c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f879b208200"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="skipjack_setup" ref="0x7f879b1f96c0" loc="15:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f879b2091a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f879b209870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f879b1fba00" loc="15:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f879b1fbd00" loc="15:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="num_rounds" ref="0x7f879b1f9060" loc="15:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f879b1f9410" loc="15:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:1"><struct-ref name="symmetric_key_skipjack" ref="0x7f879b2091a0"/>
                <typename><typedef-ref name="skipjack_key" ref="0x7f879b209870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="blowfish_decrypt" ref="0x7f879b1d8020" loc="42:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="blowfish_key" ref="0x7f879b20da50"/></typename>
                <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f879b20feb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ct" ref="0x7f879b1da5f0" loc="42:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="pt" ref="0x7f879b1da950" loc="42:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1dad40" loc="42:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="blowfish_key" ref="0x7f879b20da50"/></typename>
                <type-tag size="I:2084" alignment="I:2"><struct-ref name="symmetric_key_blowfish" ref="0x7f879b20feb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="safer_done" ref="0x7f879b1e9690" loc="28:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f879b209c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f879b208200"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f879b1e9410" loc="28:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f879b209c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f879b208200"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="xtea_encrypt" ref="0x7f879b1fc130" loc="12:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
                <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f879b1fd7b0" loc="12:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f879b1fdad0" loc="12:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1fde60" loc="12:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
                <typename><typedef-ref name="uint32_t" ref="0x7f879ded1920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc2_encrypt" ref="0x7f879b1f39e0" loc="21:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc2_key" ref="0x7f879b20fb00"/></typename>
                <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f879b20f490"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f879b1f3020" loc="21:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f879b1f3380" loc="21:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1f3740" loc="21:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="rc2_key" ref="0x7f879b20fb00"/></typename>
                <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f879b20f490"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc2_done" ref="0x7f879b1f0510" loc="23:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f879b20f490"/>
                <typename><typedef-ref name="rc2_key" ref="0x7f879b20fb00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skey" ref="0x7f879b1f0290" loc="23:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_rc2" ref="0x7f879b20f490"/>
                <typename><typedef-ref name="rc2_key" ref="0x7f879b20fb00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc5_done" ref="0x7f879b1e3480" loc="33:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f879b20b500"/>
                <typename><typedef-ref name="rc5_key" ref="0x7f879b20bd50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ctx" ref="0x7f879b1e3200" loc="33:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><struct-ref name="symmetric_key_rc5" ref="0x7f879b20b500"/>
                <typename><typedef-ref name="rc5_key" ref="0x7f879b20bd50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rc4_decrypt" ref="0x7f879b1fd0c0" loc="10:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f879b1ffa60" loc="10:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x7f879b1ffdd0" loc="10:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="kasumi_encrypt" ref="0x7f879b1e1cb0" loc="36:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f879b2085a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f879b205020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pt" ref="0x7f879b1e1310" loc="36:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ct" ref="0x7f879b1e1670" loc="36:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="skey" ref="0x7f879b1e1a10" loc="36:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:128" alignment="I:2"><struct-ref name="symmetric_key_kasumi" ref="0x7f879b2085a0"/>
                <typename><typedef-ref name="kasumi_key" ref="0x7f879b205020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="safer_setup" ref="0x7f879b1ef980" loc="25:../../../tos/platforms/shimmer2r/CRYPTO.nc">
        <interfacedef-ref qname="CRYPTO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f879b209c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f879b208200"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f879b1f0c30" loc="25:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keylen" ref="0x7f879b1ef020" loc="25:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="numrounds" ref="0x7f879b1ef340" loc="25:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="skey" ref="0x7f879b1ef6d0" loc="25:../../../tos/platforms/shimmer2r/CRYPTO.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:36" alignment="I:1"><struct-ref name="symmetric_key_safer" ref="0x7f879b209c00"/>
                <typename><typedef-ref name="safer_key" ref="0x7f879b208200"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mma_Accel" loc="40:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
      <function command="" provided="0" name="setSensitivity" ref="0x7f879b1a1510" loc="54:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
        <documentation loc="49:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
          <short>&#10; Sets the sensitivity (gain) of the sensors.</short>
          <long>&#10; Sets the sensitivity (gain) of the sensors.&#10;&#10; @param sensitivity the sensitivity (gain)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mma_Accel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sensitivity" ref="0x7f879b1a1290" loc="54:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wake" ref="0x7f879b1c5a10" loc="47:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
        <documentation loc="42:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
          <short>&#10; Turns the accelerometer on or off.</short>
          <long>&#10; Turns the accelerometer on or off.&#10;&#10; @param wakeup if &#60;code>TRUE&#60;/code> turns it on; if &#60;code>FALSE&#60;/code> turns it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Mma_Accel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="wakeup" ref="0x7f879b1c5790" loc="47:../../../tos/platforms/shimmer/chips/mma7260/Mma_Accel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="shimmerAnalogSetup" loc="43:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
      <function command="" provided="0" name="addAccelInputs" ref="0x7f879b1cf120" loc="46:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerConversion" ref="0x7f879b1c8020" loc="79:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumberOfChannels" ref="0x7f879b1c7020" loc="83:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addECGInputs" ref="0x7f879b1cd020" loc="52:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addAnExInput" ref="0x7f879b1cb020" loc="64:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f879b1ccc60" loc="64:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f879ded1160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f879b1cbe50" loc="70:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addEMGInput" ref="0x7f879b1cc550" loc="61:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addStrainGaugeInputs" ref="0x7f879b1cb780" loc="67:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addGSRInput" ref="0x7f879b1cde20" loc="58:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="finishADCSetup" ref="0x7f879b1c9870" loc="77:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f879b1c95f0" loc="77:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addUVInputs" ref="0x7f879b1cd720" loc="55:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="addGyroInputs" ref="0x7f879b1cf840" loc="49:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f879b1c8720" loc="81:../../../tos/platforms/shimmer/shimmerAnalogSetup.nc">
        <interfacedef-ref qname="shimmerAnalogSetup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430DmaControl" loc="40:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setFlags" ref="0x7f879adf8a40" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
        <interfacedef-ref qname="Msp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable_nmi" ref="0x7f879adf80d0" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
          <variable name="round_robin" ref="0x7f879adf8430" loc="42:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
          <variable name="on_fetch" ref="0x7f879adf87a0" loc="43:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f879adfb990" loc="41:../../../tos/chips/msp430/dma/Msp430DmaControl.nc">
        <interfacedef-ref qname="Msp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaChannel" loc="38:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableDMA" ref="0x7f879ad8e740" loc="61:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTrigger" ref="0x7f879ad9bc60" loc="40:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstDecrement" ref="0x7f879ad93020" loc="51:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLevelSensitive" ref="0x7f879ad8f780" loc="58:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcIncrement" ref="0x7f879ad94020" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getState" ref="0x7f879ad84580" loc="77:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7f879b1b2420"/>
            <typename><typedef-ref name="dma_channel_state_t" ref="0x7f879b1ae2e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordToWord" ref="0x7f879ad92020" loc="53:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTrigger" ref="0x7f879ad9b530" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1c11c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7f879b1bee00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="trigger" ref="0x7f879ad9b2b0" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f879b1c11c0"/>
              <typename><typedef-ref name="dma_trigger_t" ref="0x7f879b1bee00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestination" ref="0x7f879ad824f0" loc="79:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedBlockMode" ref="0x7f879ad971f0" loc="45:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="aborted" ref="0x7f879ad8b950" loc="68:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setByteToByte" ref="0x7f879ad90760" loc="56:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f879ad8d020" loc="63:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterrupt" ref="0x7f879ad8d780" loc="64:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="interruptPending" ref="0x7f879ad8b020" loc="66:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f879d44b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStateRaw" ref="0x7f879ad85d70" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x7f879ad86d50" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="trigger" ref="0x7f879ad85110" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
          <variable name="src" ref="0x7f879ad85430" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7f879ad85760" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f879ad85ab0" loc="76:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTrigger" ref="0x7f879ad81490" loc="81:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7f879b1bd200"/>
            <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7f879b1bdd50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstIncrement" ref="0x7f879ad93870" loc="52:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f879ad81b80" loc="83:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSingleMode" ref="0x7f879ad993e0" loc="41:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerDMA" ref="0x7f879ad8a0e0" loc="69:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setByteToWord" ref="0x7f879ad92760" loc="54:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrc" ref="0x7f879ad8aa30" loc="71:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="saddr" ref="0x7f879ad8a7b0" loc="71:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedSingleMode" ref="0x7f879ad98a00" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcNoIncrement" ref="0x7f879ad96120" loc="47:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBurstMode" ref="0x7f879ad98270" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSource" ref="0x7f879ad84cd0" loc="78:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x7f879ad82c50" loc="80:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcDecrement" ref="0x7f879ad96870" loc="48:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="transferDone" ref="0x7f879ad805d0" loc="85:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="success" ref="0x7f879ad80350" loc="85:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableDMA" ref="0x7f879ad8e020" loc="60:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatedBurstMode" ref="0x7f879ad97970" loc="46:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBlockMode" ref="0x7f879ad99b10" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSize" ref="0x7f879ad89d30" loc="73:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sz" ref="0x7f879ad89ab0" loc="73:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setState" ref="0x7f879ad86630" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7f879b1b2420"/>
              <typename><typedef-ref name="dma_channel_state_t" ref="0x7f879b1ae2e0"/></typename>
            </type-tag>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7f879b1bd200"/>
              <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7f879b1bdd50"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7f879ad884b0" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_state_s" ref="0x7f879b1b2420"/>
              <typename><typedef-ref name="dma_channel_state_t" ref="0x7f879b1ae2e0"/></typename>
            </type-tag>
          </variable>
          <variable name="t" ref="0x7f879ad88860" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_channel_trigger_s" ref="0x7f879b1bd200"/>
              <typename><typedef-ref name="dma_channel_trigger_t" ref="0x7f879b1bdd50"/></typename>
            </type-tag>
          </variable>
          <variable name="src" ref="0x7f879ad88b80" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="dest" ref="0x7f879ad86020" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x7f879ad86370" loc="75:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f879ded1520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDstNoIncrement" ref="0x7f879ad94780" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdgeSensitive" ref="0x7f879ad8f020" loc="57:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordToByte" ref="0x7f879ad90020" loc="55:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDst" ref="0x7f879ad893d0" loc="72:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
        <interfacedef-ref qname="HplMsp430DmaChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="daddr" ref="0x7f879ad89150" loc="72:../../../tos/chips/msp430/dma/HplMsp430DmaChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaControl" loc="40:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
      <documentation loc="34:../../../tos/chips/msp430/dma/Msp430Dma.h">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Mark Hays&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearENNMI" ref="0x7f879ad9f740" loc="47:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoundRobin" ref="0x7f879ada1120" loc="44:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOnFetch" ref="0x7f879ada29a0" loc="43:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setENNMI" ref="0x7f879ad9f020" loc="46:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getState" ref="0x7f879ad9e890" loc="49:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7f879b1bac30"/>
            <typename><typedef-ref name="dma_state_t" ref="0x7f879b1b9e40"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f879ad9d020" loc="50:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOnFetch" ref="0x7f879ada2270" loc="42:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setState" ref="0x7f879ad9e110" loc="48:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7f879b1bac30"/>
              <typename><typedef-ref name="dma_state_t" ref="0x7f879b1b9e40"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="s" ref="0x7f879ad9fe30" loc="48:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref name="dma_state_s" ref="0x7f879b1bac30"/>
              <typename><typedef-ref name="dma_state_t" ref="0x7f879b1b9e40"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRoundRobin" ref="0x7f879ada1870" loc="45:../../../tos/chips/msp430/dma/HplMsp430DmaControl.nc">
        <interfacedef-ref qname="HplMsp430DmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430DmaInterrupt" loc="38:../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Ben Greenstein &#60;ben@cs.ucla.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f879ad6fd40" loc="39:../../../tos/chips/msp430/dma/HplMsp430DmaInterrupt.nc">
        <interfacedef-ref qname="HplMsp430DmaInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:../../../tos/interfaces/Notify.nc">
      <documentation loc="33:../../../tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f879ac43a80" loc="52:../../../tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879ac43a80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x7f879ac40bb0" loc="67:../../../tos/interfaces/Notify.nc">
        <documentation loc="61:../../../tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f879ac40390" loc="59:../../../tos/interfaces/Notify.nc">
        <documentation loc="53:../../../tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f879d442c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x7f879ac3f5f0" loc="74:../../../tos/interfaces/Notify.nc">
        <documentation loc="69:../../../tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879ac43a80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f879ac3f370" loc="74:../../../tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f879ac43a80"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
