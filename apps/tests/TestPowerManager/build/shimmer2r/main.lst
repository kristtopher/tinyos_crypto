
build/shimmer2r/main.exe:     file format elf32-msp430


Disassembly of section .text:

00004000 <__watchdog_support>:
    4000:	55 42 20 01 	mov.b	&0x0120,r5	
    4004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    4008:	82 45 52 11 	mov	r5,	&0x1152	

0000400c <__init_stack>:
    400c:	31 40 00 39 	mov	#14592,	r1	;#0x3900

00004010 <__do_copy_data>:
    4010:	3f 40 04 00 	mov	#4,	r15	;#0x0004
    4014:	0f 93       	tst	r15		
    4016:	08 24       	jz	$+18     	;abs 0x4028
    4018:	92 42 52 11 20 01 	mov	&0x1152,&0x0120	
    401e:	2f 83       	decd	r15		
    4020:	9f 4f e2 76 00 11 	mov	30434(r15),4352(r15);0x76e2(r15), 0x1100(r15)
    4026:	f8 23       	jnz	$-14     	;abs 0x4018

00004028 <__do_clear_bss>:
    4028:	3f 40 4e 00 	mov	#78,	r15	;#0x004e
    402c:	0f 93       	tst	r15		
    402e:	07 24       	jz	$+16     	;abs 0x403e
    4030:	92 42 52 11 20 01 	mov	&0x1152,&0x0120	
    4036:	1f 83       	dec	r15		
    4038:	cf 43 04 11 	mov.b	#0,	4356(r15);r3 As==00, 0x1104(r15)
    403c:	f9 23       	jnz	$-12     	;abs 0x4030

0000403e <main>:
    403e:	04 41       	mov	r1,	r4	
    4040:	24 53       	incd	r4		
    4042:	21 83       	decd	r1		
    4044:	b0 12 3e 6d 	call	#0x6d3e	
    4048:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    404c:	b0 12 c4 4c 	call	#0x4cc4	
    4050:	b0 12 86 5d 	call	#0x5d86	
    4054:	03 43       	nop			
    4056:	b0 12 a0 5d 	call	#0x5da0	
    405a:	4f 93       	tst.b	r15		
    405c:	fc 23       	jnz	$-6      	;abs 0x4056
    405e:	b0 12 de 6a 	call	#0x6ade	
    4062:	03 43       	nop			
    4064:	b0 12 a0 5d 	call	#0x5da0	
    4068:	4f 93       	tst.b	r15		
    406a:	fc 23       	jnz	$-6      	;abs 0x4064
    406c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    4070:	b0 12 66 6d 	call	#0x6d66	
    4074:	b0 12 8e 40 	call	#0x408e	
    4078:	b0 12 1c 6b 	call	#0x6b1c	
    407c:	b0 12 30 6d 	call	#0x6d30	
    4080:	3f 43       	mov	#-1,	r15	;r3 As==11
    4082:	21 53       	incd	r1		

00004084 <__stop_progExec__>:
    4084:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    4088:	fd 3f       	jmp	$-4      	;abs 0x4084

0000408a <__ctors_end>:
    408a:	30 40 ba 76 	br	#0x76ba	

0000408e <__nesc_enable_interrupt>:
    408e:	04 12       	push	r4		
    4090:	04 41       	mov	r1,	r4	
    4092:	24 53       	incd	r4		
    4094:	32 d2       	eint			
    4096:	34 41       	pop	r4		
    4098:	30 41       	ret			

0000409a <Msp430TimerCapComP__2__Timer__overflow>:
    409a:	04 12       	push	r4		
    409c:	04 41       	mov	r1,	r4	
    409e:	24 53       	incd	r4		
    40a0:	34 41       	pop	r4		
    40a2:	30 41       	ret			

000040a4 <Msp430TimerCapComP__1__Timer__overflow>:
    40a4:	04 12       	push	r4		
    40a6:	04 41       	mov	r1,	r4	
    40a8:	24 53       	incd	r4		
    40aa:	34 41       	pop	r4		
    40ac:	30 41       	ret			

000040ae <Msp430TimerCapComP__0__Timer__overflow>:
    40ae:	04 12       	push	r4		
    40b0:	04 41       	mov	r1,	r4	
    40b2:	24 53       	incd	r4		
    40b4:	34 41       	pop	r4		
    40b6:	30 41       	ret			

000040b8 <Msp430TimerP__0__Timer__overflow>:
    40b8:	04 12       	push	r4		
    40ba:	04 41       	mov	r1,	r4	
    40bc:	24 53       	incd	r4		
    40be:	b0 12 ae 40 	call	#0x40ae	
    40c2:	b0 12 a4 40 	call	#0x40a4	
    40c6:	b0 12 9a 40 	call	#0x409a	
    40ca:	34 41       	pop	r4		
    40cc:	30 41       	ret			

000040ce <Msp430TimerP__0__Overflow__fired>:
    40ce:	04 12       	push	r4		
    40d0:	04 41       	mov	r1,	r4	
    40d2:	24 53       	incd	r4		
    40d4:	b0 12 b8 40 	call	#0x40b8	
    40d8:	34 41       	pop	r4		
    40da:	30 41       	ret			

000040dc <Msp430TimerP__0__Event__default__fired>:
    40dc:	04 12       	push	r4		
    40de:	04 41       	mov	r1,	r4	
    40e0:	24 53       	incd	r4		
    40e2:	21 83       	decd	r1		
    40e4:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    40e8:	21 53       	incd	r1		
    40ea:	34 41       	pop	r4		
    40ec:	30 41       	ret			

000040ee <Msp430TimerP__0__Event__fired>:
    40ee:	04 12       	push	r4		
    40f0:	04 41       	mov	r1,	r4	
    40f2:	24 53       	incd	r4		
    40f4:	21 83       	decd	r1		
    40f6:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    40fa:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    40fe:	1f 93       	cmp	#1,	r15	;r3 As==01
    4100:	0e 24       	jz	$+30     	;abs 0x411e
    4102:	2f 93       	cmp	#2,	r15	;r3 As==10
    4104:	03 34       	jge	$+8      	;abs 0x410c
    4106:	0f 93       	tst	r15		
    4108:	07 24       	jz	$+16     	;abs 0x4118
    410a:	12 3c       	jmp	$+38     	;abs 0x4130
    410c:	2f 93       	cmp	#2,	r15	;r3 As==10
    410e:	0a 24       	jz	$+22     	;abs 0x4124
    4110:	3f 90 05 00 	cmp	#5,	r15	;#0x0005
    4114:	0a 24       	jz	$+22     	;abs 0x412a
    4116:	0c 3c       	jmp	$+26     	;abs 0x4130
    4118:	b0 12 a8 6d 	call	#0x6da8	
    411c:	0e 3c       	jmp	$+30     	;abs 0x413a
    411e:	b0 12 d0 6d 	call	#0x6dd0	
    4122:	0b 3c       	jmp	$+24     	;abs 0x413a
    4124:	b0 12 f8 6d 	call	#0x6df8	
    4128:	08 3c       	jmp	$+18     	;abs 0x413a
    412a:	b0 12 ce 40 	call	#0x40ce	
    412e:	05 3c       	jmp	$+12     	;abs 0x413a
    4130:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    4134:	b0 12 dc 40 	call	#0x40dc	
    4138:	03 43       	nop			
    413a:	21 53       	incd	r1		
    413c:	34 41       	pop	r4		
    413e:	30 41       	ret			

00004140 <Msp430TimerP__0__VectorTimerX0__fired>:
    4140:	04 12       	push	r4		
    4142:	04 41       	mov	r1,	r4	
    4144:	24 53       	incd	r4		
    4146:	4f 43       	clr.b	r15		
    4148:	b0 12 ee 40 	call	#0x40ee	
    414c:	34 41       	pop	r4		
    414e:	30 41       	ret			

00004150 <Msp430TimerCommonP__VectorTimerA0__fired>:
    4150:	04 12       	push	r4		
    4152:	04 41       	mov	r1,	r4	
    4154:	24 53       	incd	r4		
    4156:	b0 12 40 41 	call	#0x4140	
    415a:	34 41       	pop	r4		
    415c:	30 41       	ret			

0000415e <Msp430TimerCapComP__0__int2CC>:
    415e:	04 12       	push	r4		
    4160:	04 41       	mov	r1,	r4	
    4162:	24 53       	incd	r4		
    4164:	21 82       	sub	#4,	r1	;r2 As==10
    4166:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    416a:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    416e:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    4174:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4178:	21 52       	add	#4,	r1	;r2 As==10
    417a:	34 41       	pop	r4		
    417c:	30 41       	ret			

0000417e <Msp430TimerCapComP__0__Control__getControl>:
    417e:	04 12       	push	r4		
    4180:	04 41       	mov	r1,	r4	
    4182:	24 53       	incd	r4		
    4184:	3f 40 62 01 	mov	#354,	r15	;#0x0162
    4188:	2f 4f       	mov	@r15,	r15	
    418a:	b0 12 5e 41 	call	#0x415e	
    418e:	34 41       	pop	r4		
    4190:	30 41       	ret			

00004192 <Msp430TimerCapComP__0__Capture__default__captured>:
    4192:	04 12       	push	r4		
    4194:	04 41       	mov	r1,	r4	
    4196:	24 53       	incd	r4		
    4198:	21 83       	decd	r1		
    419a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    419e:	21 53       	incd	r1		
    41a0:	34 41       	pop	r4		
    41a2:	30 41       	ret			

000041a4 <Msp430TimerCapComP__0__Capture__captured>:
    41a4:	04 12       	push	r4		
    41a6:	04 41       	mov	r1,	r4	
    41a8:	24 53       	incd	r4		
    41aa:	21 83       	decd	r1		
    41ac:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    41b0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    41b4:	b0 12 92 41 	call	#0x4192	
    41b8:	21 53       	incd	r1		
    41ba:	34 41       	pop	r4		
    41bc:	30 41       	ret			

000041be <Msp430TimerCapComP__0__Capture__getEvent>:
    41be:	04 12       	push	r4		
    41c0:	04 41       	mov	r1,	r4	
    41c2:	24 53       	incd	r4		
    41c4:	3f 40 72 01 	mov	#370,	r15	;#0x0172
    41c8:	2f 4f       	mov	@r15,	r15	
    41ca:	34 41       	pop	r4		
    41cc:	30 41       	ret			

000041ce <Msp430TimerCapComP__0__Compare__default__fired>:
    41ce:	04 12       	push	r4		
    41d0:	04 41       	mov	r1,	r4	
    41d2:	24 53       	incd	r4		
    41d4:	34 41       	pop	r4		
    41d6:	30 41       	ret			

000041d8 <Msp430TimerCapComP__0__Compare__fired>:
    41d8:	04 12       	push	r4		
    41da:	04 41       	mov	r1,	r4	
    41dc:	24 53       	incd	r4		
    41de:	b0 12 ce 41 	call	#0x41ce	
    41e2:	34 41       	pop	r4		
    41e4:	30 41       	ret			

000041e6 <Msp430TimerCapComP__1__int2CC>:
    41e6:	04 12       	push	r4		
    41e8:	04 41       	mov	r1,	r4	
    41ea:	24 53       	incd	r4		
    41ec:	21 82       	sub	#4,	r1	;r2 As==10
    41ee:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    41f2:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    41f6:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    41fc:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4200:	21 52       	add	#4,	r1	;r2 As==10
    4202:	34 41       	pop	r4		
    4204:	30 41       	ret			

00004206 <Msp430TimerCapComP__1__Control__getControl>:
    4206:	04 12       	push	r4		
    4208:	04 41       	mov	r1,	r4	
    420a:	24 53       	incd	r4		
    420c:	3f 40 64 01 	mov	#356,	r15	;#0x0164
    4210:	2f 4f       	mov	@r15,	r15	
    4212:	b0 12 e6 41 	call	#0x41e6	
    4216:	34 41       	pop	r4		
    4218:	30 41       	ret			

0000421a <Msp430TimerCapComP__1__Capture__default__captured>:
    421a:	04 12       	push	r4		
    421c:	04 41       	mov	r1,	r4	
    421e:	24 53       	incd	r4		
    4220:	21 83       	decd	r1		
    4222:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4226:	21 53       	incd	r1		
    4228:	34 41       	pop	r4		
    422a:	30 41       	ret			

0000422c <Msp430TimerCapComP__1__Capture__captured>:
    422c:	04 12       	push	r4		
    422e:	04 41       	mov	r1,	r4	
    4230:	24 53       	incd	r4		
    4232:	21 83       	decd	r1		
    4234:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4238:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    423c:	b0 12 1a 42 	call	#0x421a	
    4240:	21 53       	incd	r1		
    4242:	34 41       	pop	r4		
    4244:	30 41       	ret			

00004246 <Msp430TimerCapComP__1__Capture__getEvent>:
    4246:	04 12       	push	r4		
    4248:	04 41       	mov	r1,	r4	
    424a:	24 53       	incd	r4		
    424c:	3f 40 74 01 	mov	#372,	r15	;#0x0174
    4250:	2f 4f       	mov	@r15,	r15	
    4252:	34 41       	pop	r4		
    4254:	30 41       	ret			

00004256 <Msp430TimerCapComP__1__Compare__default__fired>:
    4256:	04 12       	push	r4		
    4258:	04 41       	mov	r1,	r4	
    425a:	24 53       	incd	r4		
    425c:	34 41       	pop	r4		
    425e:	30 41       	ret			

00004260 <Msp430TimerCapComP__1__Compare__fired>:
    4260:	04 12       	push	r4		
    4262:	04 41       	mov	r1,	r4	
    4264:	24 53       	incd	r4		
    4266:	b0 12 56 42 	call	#0x4256	
    426a:	34 41       	pop	r4		
    426c:	30 41       	ret			

0000426e <Msp430TimerCapComP__2__int2CC>:
    426e:	04 12       	push	r4		
    4270:	04 41       	mov	r1,	r4	
    4272:	24 53       	incd	r4		
    4274:	21 82       	sub	#4,	r1	;r2 As==10
    4276:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    427a:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    427e:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    4284:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4288:	21 52       	add	#4,	r1	;r2 As==10
    428a:	34 41       	pop	r4		
    428c:	30 41       	ret			

0000428e <Msp430TimerCapComP__2__Control__getControl>:
    428e:	04 12       	push	r4		
    4290:	04 41       	mov	r1,	r4	
    4292:	24 53       	incd	r4		
    4294:	3f 40 66 01 	mov	#358,	r15	;#0x0166
    4298:	2f 4f       	mov	@r15,	r15	
    429a:	b0 12 6e 42 	call	#0x426e	
    429e:	34 41       	pop	r4		
    42a0:	30 41       	ret			

000042a2 <Msp430TimerCapComP__2__Capture__default__captured>:
    42a2:	04 12       	push	r4		
    42a4:	04 41       	mov	r1,	r4	
    42a6:	24 53       	incd	r4		
    42a8:	21 83       	decd	r1		
    42aa:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    42ae:	21 53       	incd	r1		
    42b0:	34 41       	pop	r4		
    42b2:	30 41       	ret			

000042b4 <Msp430TimerCapComP__2__Capture__captured>:
    42b4:	04 12       	push	r4		
    42b6:	04 41       	mov	r1,	r4	
    42b8:	24 53       	incd	r4		
    42ba:	21 83       	decd	r1		
    42bc:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    42c0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    42c4:	b0 12 a2 42 	call	#0x42a2	
    42c8:	21 53       	incd	r1		
    42ca:	34 41       	pop	r4		
    42cc:	30 41       	ret			

000042ce <Msp430TimerCapComP__2__Capture__getEvent>:
    42ce:	04 12       	push	r4		
    42d0:	04 41       	mov	r1,	r4	
    42d2:	24 53       	incd	r4		
    42d4:	3f 40 76 01 	mov	#374,	r15	;#0x0176
    42d8:	2f 4f       	mov	@r15,	r15	
    42da:	34 41       	pop	r4		
    42dc:	30 41       	ret			

000042de <Msp430TimerCapComP__2__Compare__default__fired>:
    42de:	04 12       	push	r4		
    42e0:	04 41       	mov	r1,	r4	
    42e2:	24 53       	incd	r4		
    42e4:	34 41       	pop	r4		
    42e6:	30 41       	ret			

000042e8 <Msp430TimerCapComP__2__Compare__fired>:
    42e8:	04 12       	push	r4		
    42ea:	04 41       	mov	r1,	r4	
    42ec:	24 53       	incd	r4		
    42ee:	b0 12 de 42 	call	#0x42de	
    42f2:	34 41       	pop	r4		
    42f4:	30 41       	ret			

000042f6 <Msp430TimerP__0__VectorTimerX1__fired>:
    42f6:	04 12       	push	r4		
    42f8:	04 41       	mov	r1,	r4	
    42fa:	24 53       	incd	r4		
    42fc:	21 83       	decd	r1		
    42fe:	3f 40 2e 01 	mov	#302,	r15	;#0x012e
    4302:	2f 4f       	mov	@r15,	r15	
    4304:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    4308:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    430c:	4f 4f       	mov.b	r15,	r15	
    430e:	12 c3       	clrc			
    4310:	4f 10       	rrc.b	r15		
    4312:	b0 12 ee 40 	call	#0x40ee	
    4316:	21 53       	incd	r1		
    4318:	34 41       	pop	r4		
    431a:	30 41       	ret			

0000431c <Msp430TimerCommonP__VectorTimerA1__fired>:
    431c:	04 12       	push	r4		
    431e:	04 41       	mov	r1,	r4	
    4320:	24 53       	incd	r4		
    4322:	b0 12 f6 42 	call	#0x42f6	
    4326:	34 41       	pop	r4		
    4328:	30 41       	ret			

0000432a <Msp430TimerP__1__VectorTimerX0__fired>:
    432a:	04 12       	push	r4		
    432c:	04 41       	mov	r1,	r4	
    432e:	24 53       	incd	r4		
    4330:	4f 43       	clr.b	r15		
    4332:	b0 12 7e 6e 	call	#0x6e7e	
    4336:	34 41       	pop	r4		
    4338:	30 41       	ret			

0000433a <Msp430TimerCommonP__VectorTimerB0__fired>:
    433a:	04 12       	push	r4		
    433c:	04 41       	mov	r1,	r4	
    433e:	24 53       	incd	r4		
    4340:	b0 12 2a 43 	call	#0x432a	
    4344:	34 41       	pop	r4		
    4346:	30 41       	ret			

00004348 <Msp430TimerCapComP__9__Timer__overflow>:
    4348:	04 12       	push	r4		
    434a:	04 41       	mov	r1,	r4	
    434c:	24 53       	incd	r4		
    434e:	34 41       	pop	r4		
    4350:	30 41       	ret			

00004352 <Msp430TimerCapComP__8__Timer__overflow>:
    4352:	04 12       	push	r4		
    4354:	04 41       	mov	r1,	r4	
    4356:	24 53       	incd	r4		
    4358:	34 41       	pop	r4		
    435a:	30 41       	ret			

0000435c <Msp430TimerCapComP__7__Timer__overflow>:
    435c:	04 12       	push	r4		
    435e:	04 41       	mov	r1,	r4	
    4360:	24 53       	incd	r4		
    4362:	34 41       	pop	r4		
    4364:	30 41       	ret			

00004366 <Msp430TimerCapComP__6__Timer__overflow>:
    4366:	04 12       	push	r4		
    4368:	04 41       	mov	r1,	r4	
    436a:	24 53       	incd	r4		
    436c:	34 41       	pop	r4		
    436e:	30 41       	ret			

00004370 <Msp430TimerCapComP__5__Timer__overflow>:
    4370:	04 12       	push	r4		
    4372:	04 41       	mov	r1,	r4	
    4374:	24 53       	incd	r4		
    4376:	34 41       	pop	r4		
    4378:	30 41       	ret			

0000437a <Msp430TimerCapComP__4__Timer__overflow>:
    437a:	04 12       	push	r4		
    437c:	04 41       	mov	r1,	r4	
    437e:	24 53       	incd	r4		
    4380:	34 41       	pop	r4		
    4382:	30 41       	ret			

00004384 <Msp430TimerCapComP__3__Timer__overflow>:
    4384:	04 12       	push	r4		
    4386:	04 41       	mov	r1,	r4	
    4388:	24 53       	incd	r4		
    438a:	34 41       	pop	r4		
    438c:	30 41       	ret			

0000438e <Msp430AlarmC__0__Msp430Timer__overflow>:
    438e:	04 12       	push	r4		
    4390:	04 41       	mov	r1,	r4	
    4392:	24 53       	incd	r4		
    4394:	34 41       	pop	r4		
    4396:	30 41       	ret			

00004398 <CounterToLocalTimeC__0__Counter__overflow>:
    4398:	04 12       	push	r4		
    439a:	04 41       	mov	r1,	r4	
    439c:	24 53       	incd	r4		
    439e:	34 41       	pop	r4		
    43a0:	30 41       	ret			

000043a2 <TransformAlarmC__0__Counter__overflow>:
    43a2:	04 12       	push	r4		
    43a4:	04 41       	mov	r1,	r4	
    43a6:	24 53       	incd	r4		
    43a8:	34 41       	pop	r4		
    43aa:	30 41       	ret			

000043ac <TransformCounterC__0__Counter__overflow>:
    43ac:	04 12       	push	r4		
    43ae:	04 41       	mov	r1,	r4	
    43b0:	24 53       	incd	r4		
    43b2:	b0 12 a2 43 	call	#0x43a2	
    43b6:	b0 12 98 43 	call	#0x4398	
    43ba:	34 41       	pop	r4		
    43bc:	30 41       	ret			

000043be <TransformCounterC__0__CounterFrom__overflow>:
    43be:	04 12       	push	r4		
    43c0:	04 41       	mov	r1,	r4	
    43c2:	24 53       	incd	r4		
    43c4:	1e 42 1a 11 	mov	&0x111a,r14	
    43c8:	1f 42 1c 11 	mov	&0x111c,r15	
    43cc:	1e 53       	inc	r14		
    43ce:	0f 63       	adc	r15		
    43d0:	82 4e 1a 11 	mov	r14,	&0x111a	
    43d4:	82 4f 1c 11 	mov	r15,	&0x111c	
    43d8:	1e 42 1a 11 	mov	&0x111a,r14	
    43dc:	1f 42 1c 11 	mov	&0x111c,r15	
    43e0:	3e f3       	and	#-1,	r14	;r3 As==11
    43e2:	3f f0 1f 00 	and	#31,	r15	;#0x001f
    43e6:	0e 93       	tst	r14		
    43e8:	04 20       	jnz	$+10     	;abs 0x43f2
    43ea:	0f 93       	tst	r15		
    43ec:	02 20       	jnz	$+6      	;abs 0x43f2
    43ee:	b0 12 ac 43 	call	#0x43ac	
    43f2:	34 41       	pop	r4		
    43f4:	30 41       	ret			

000043f6 <Msp430CounterC__0__Counter__overflow>:
    43f6:	04 12       	push	r4		
    43f8:	04 41       	mov	r1,	r4	
    43fa:	24 53       	incd	r4		
    43fc:	b0 12 be 43 	call	#0x43be	
    4400:	34 41       	pop	r4		
    4402:	30 41       	ret			

00004404 <Msp430CounterC__0__Msp430Timer__overflow>:
    4404:	04 12       	push	r4		
    4406:	04 41       	mov	r1,	r4	
    4408:	24 53       	incd	r4		
    440a:	b0 12 f6 43 	call	#0x43f6	
    440e:	34 41       	pop	r4		
    4410:	30 41       	ret			

00004412 <Msp430TimerP__1__Timer__overflow>:
    4412:	04 12       	push	r4		
    4414:	04 41       	mov	r1,	r4	
    4416:	24 53       	incd	r4		
    4418:	b0 12 04 44 	call	#0x4404	
    441c:	b0 12 8e 43 	call	#0x438e	
    4420:	b0 12 84 43 	call	#0x4384	
    4424:	b0 12 7a 43 	call	#0x437a	
    4428:	b0 12 70 43 	call	#0x4370	
    442c:	b0 12 66 43 	call	#0x4366	
    4430:	b0 12 5c 43 	call	#0x435c	
    4434:	b0 12 52 43 	call	#0x4352	
    4438:	b0 12 48 43 	call	#0x4348	
    443c:	34 41       	pop	r4		
    443e:	30 41       	ret			

00004440 <Msp430TimerP__1__Overflow__fired>:
    4440:	04 12       	push	r4		
    4442:	04 41       	mov	r1,	r4	
    4444:	24 53       	incd	r4		
    4446:	b0 12 12 44 	call	#0x4412	
    444a:	34 41       	pop	r4		
    444c:	30 41       	ret			

0000444e <AlarmToTimerC__0__fired__postTask>:
    444e:	04 12       	push	r4		
    4450:	04 41       	mov	r1,	r4	
    4452:	24 53       	incd	r4		
    4454:	21 83       	decd	r1		
    4456:	4f 43       	clr.b	r15		
    4458:	b0 12 dc 6e 	call	#0x6edc	
    445c:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    4460:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    4464:	21 53       	incd	r1		
    4466:	34 41       	pop	r4		
    4468:	30 41       	ret			

0000446a <AlarmToTimerC__0__Alarm__fired>:
    446a:	04 12       	push	r4		
    446c:	04 41       	mov	r1,	r4	
    446e:	24 53       	incd	r4		
    4470:	b0 12 4e 44 	call	#0x444e	
    4474:	34 41       	pop	r4		
    4476:	30 41       	ret			

00004478 <TransformAlarmC__0__Alarm__fired>:
    4478:	04 12       	push	r4		
    447a:	04 41       	mov	r1,	r4	
    447c:	24 53       	incd	r4		
    447e:	b0 12 6a 44 	call	#0x446a	
    4482:	34 41       	pop	r4		
    4484:	30 41       	ret			

00004486 <TransformAlarmC__0__AlarmFrom__fired>:
    4486:	04 12       	push	r4		
    4488:	04 41       	mov	r1,	r4	
    448a:	24 53       	incd	r4		
    448c:	1e 42 12 11 	mov	&0x1112,r14	
    4490:	1f 42 14 11 	mov	&0x1114,r15	
    4494:	0e 93       	tst	r14		
    4496:	05 20       	jnz	$+12     	;abs 0x44a2
    4498:	0f 93       	tst	r15		
    449a:	03 20       	jnz	$+8      	;abs 0x44a2
    449c:	b0 12 78 44 	call	#0x4478	
    44a0:	02 3c       	jmp	$+6      	;abs 0x44a6
    44a2:	b0 12 1a 6f 	call	#0x6f1a	
    44a6:	34 41       	pop	r4		
    44a8:	30 41       	ret			

000044aa <Msp430AlarmC__0__Alarm__fired>:
    44aa:	04 12       	push	r4		
    44ac:	04 41       	mov	r1,	r4	
    44ae:	24 53       	incd	r4		
    44b0:	b0 12 86 44 	call	#0x4486	
    44b4:	34 41       	pop	r4		
    44b6:	30 41       	ret			

000044b8 <Msp430TimerCapComP__3__Control__disableEvents>:
    44b8:	04 12       	push	r4		
    44ba:	04 41       	mov	r1,	r4	
    44bc:	24 53       	incd	r4		
    44be:	3f 40 82 01 	mov	#386,	r15	;#0x0182
    44c2:	3e 40 82 01 	mov	#386,	r14	;#0x0182
    44c6:	2e 4e       	mov	@r14,	r14	
    44c8:	3e f0 ef ff 	and	#-17,	r14	;#0xffef
    44cc:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
    44d0:	34 41       	pop	r4		
    44d2:	30 41       	ret			

000044d4 <Msp430AlarmC__0__Msp430TimerControl__disableEvents>:
    44d4:	04 12       	push	r4		
    44d6:	04 41       	mov	r1,	r4	
    44d8:	24 53       	incd	r4		
    44da:	b0 12 b8 44 	call	#0x44b8	
    44de:	34 41       	pop	r4		
    44e0:	30 41       	ret			

000044e2 <Msp430AlarmC__0__Msp430Compare__fired>:
    44e2:	04 12       	push	r4		
    44e4:	04 41       	mov	r1,	r4	
    44e6:	24 53       	incd	r4		
    44e8:	b0 12 d4 44 	call	#0x44d4	
    44ec:	b0 12 aa 44 	call	#0x44aa	
    44f0:	34 41       	pop	r4		
    44f2:	30 41       	ret			

000044f4 <Msp430TimerCapComP__3__Compare__fired>:
    44f4:	04 12       	push	r4		
    44f6:	04 41       	mov	r1,	r4	
    44f8:	24 53       	incd	r4		
    44fa:	b0 12 e2 44 	call	#0x44e2	
    44fe:	34 41       	pop	r4		
    4500:	30 41       	ret			

00004502 <Msp430TimerCapComP__3__Capture__getEvent>:
    4502:	04 12       	push	r4		
    4504:	04 41       	mov	r1,	r4	
    4506:	24 53       	incd	r4		
    4508:	3f 40 92 01 	mov	#402,	r15	;#0x0192
    450c:	2f 4f       	mov	@r15,	r15	
    450e:	34 41       	pop	r4		
    4510:	30 41       	ret			

00004512 <Msp430TimerCapComP__3__Capture__default__captured>:
    4512:	04 12       	push	r4		
    4514:	04 41       	mov	r1,	r4	
    4516:	24 53       	incd	r4		
    4518:	21 83       	decd	r1		
    451a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    451e:	21 53       	incd	r1		
    4520:	34 41       	pop	r4		
    4522:	30 41       	ret			

00004524 <Msp430TimerCapComP__3__Capture__captured>:
    4524:	04 12       	push	r4		
    4526:	04 41       	mov	r1,	r4	
    4528:	24 53       	incd	r4		
    452a:	21 83       	decd	r1		
    452c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4530:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4534:	b0 12 12 45 	call	#0x4512	
    4538:	21 53       	incd	r1		
    453a:	34 41       	pop	r4		
    453c:	30 41       	ret			

0000453e <Msp430TimerCapComP__3__int2CC>:
    453e:	04 12       	push	r4		
    4540:	04 41       	mov	r1,	r4	
    4542:	24 53       	incd	r4		
    4544:	21 82       	sub	#4,	r1	;r2 As==10
    4546:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    454a:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    454e:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    4554:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4558:	21 52       	add	#4,	r1	;r2 As==10
    455a:	34 41       	pop	r4		
    455c:	30 41       	ret			

0000455e <Msp430TimerCapComP__3__Control__getControl>:
    455e:	04 12       	push	r4		
    4560:	04 41       	mov	r1,	r4	
    4562:	24 53       	incd	r4		
    4564:	3f 40 82 01 	mov	#386,	r15	;#0x0182
    4568:	2f 4f       	mov	@r15,	r15	
    456a:	b0 12 3e 45 	call	#0x453e	
    456e:	34 41       	pop	r4		
    4570:	30 41       	ret			

00004572 <Msp430TimerCapComP__3__Event__fired>:
    4572:	04 12       	push	r4		
    4574:	04 41       	mov	r1,	r4	
    4576:	24 53       	incd	r4		
    4578:	b0 12 5e 45 	call	#0x455e	
    457c:	8f 10       	swpb	r15		
    457e:	4f 4f       	mov.b	r15,	r15	
    4580:	4f 4f       	mov.b	r15,	r15	
    4582:	5f f3       	and.b	#1,	r15	;r3 As==01
    4584:	4f 93       	tst.b	r15		
    4586:	05 24       	jz	$+12     	;abs 0x4592
    4588:	b0 12 02 45 	call	#0x4502	
    458c:	b0 12 24 45 	call	#0x4524	
    4590:	02 3c       	jmp	$+6      	;abs 0x4596
    4592:	b0 12 f4 44 	call	#0x44f4	
    4596:	34 41       	pop	r4		
    4598:	30 41       	ret			

0000459a <SchedulerBasicP__isWaiting>:
    459a:	04 12       	push	r4		
    459c:	04 41       	mov	r1,	r4	
    459e:	24 53       	incd	r4		
    45a0:	21 83       	decd	r1		
    45a2:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    45a6:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    45aa:	5f 4f 0a 11 	mov.b	4362(r15),r15	;0x110a(r15)
    45ae:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    45b0:	05 20       	jnz	$+12     	;abs 0x45bc
    45b2:	5f 42 50 11 	mov.b	&0x1150,r15	
    45b6:	5f 94 fc ff 	cmp.b	-4(r4),	r15	;0xfffc(r4)
    45ba:	02 20       	jnz	$+6      	;abs 0x45c0
    45bc:	1f 43       	mov	#1,	r15	;r3 As==01
    45be:	01 3c       	jmp	$+4      	;abs 0x45c2
    45c0:	0f 43       	clr	r15		
    45c2:	4f 4f       	mov.b	r15,	r15	
    45c4:	21 53       	incd	r1		
    45c6:	34 41       	pop	r4		
    45c8:	30 41       	ret			

000045ca <SchedulerBasicP__pushTask>:
    45ca:	04 12       	push	r4		
    45cc:	04 41       	mov	r1,	r4	
    45ce:	24 53       	incd	r4		
    45d0:	21 83       	decd	r1		
    45d2:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    45d6:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    45da:	b0 12 9a 45 	call	#0x459a	
    45de:	4f 93       	tst.b	r15		
    45e0:	16 20       	jnz	$+46     	;abs 0x460e
    45e2:	5f 42 4f 11 	mov.b	&0x114f,r15	
    45e6:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    45e8:	07 20       	jnz	$+16     	;abs 0x45f8
    45ea:	d2 44 fc ff 4f 11 	mov.b	-4(r4),	&0x114f	;0xfffc(r4)
    45f0:	d2 44 fc ff 50 11 	mov.b	-4(r4),	&0x1150	;0xfffc(r4)
    45f6:	09 3c       	jmp	$+20     	;abs 0x460a
    45f8:	5f 42 50 11 	mov.b	&0x1150,r15	
    45fc:	4f 4f       	mov.b	r15,	r15	
    45fe:	df 44 fc ff 0a 11 	mov.b	-4(r4),	4362(r15);0xfffc(r4), 0x110a(r15)
    4604:	d2 44 fc ff 50 11 	mov.b	-4(r4),	&0x1150	;0xfffc(r4)
    460a:	5f 43       	mov.b	#1,	r15	;r3 As==01
    460c:	01 3c       	jmp	$+4      	;abs 0x4610
    460e:	4f 43       	clr.b	r15		
    4610:	21 53       	incd	r1		
    4612:	34 41       	pop	r4		
    4614:	30 41       	ret			

00004616 <Msp430CounterC__0__Msp430Timer__get>:
    4616:	04 12       	push	r4		
    4618:	04 41       	mov	r1,	r4	
    461a:	24 53       	incd	r4		
    461c:	21 83       	decd	r1		
    461e:	b0 12 58 71 	call	#0x7158	
    4622:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4626:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    462a:	21 53       	incd	r1		
    462c:	34 41       	pop	r4		
    462e:	30 41       	ret			

00004630 <Msp430CounterC__0__Counter__get>:
    4630:	04 12       	push	r4		
    4632:	04 41       	mov	r1,	r4	
    4634:	24 53       	incd	r4		
    4636:	b0 12 16 46 	call	#0x4616	
    463a:	34 41       	pop	r4		
    463c:	30 41       	ret			

0000463e <TransformCounterC__0__CounterFrom__get>:
    463e:	04 12       	push	r4		
    4640:	04 41       	mov	r1,	r4	
    4642:	24 53       	incd	r4		
    4644:	21 83       	decd	r1		
    4646:	b0 12 30 46 	call	#0x4630	
    464a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    464e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4652:	21 53       	incd	r1		
    4654:	34 41       	pop	r4		
    4656:	30 41       	ret			

00004658 <Msp430TimerP__1__Timer__isOverflowPending>:
    4658:	04 12       	push	r4		
    465a:	04 41       	mov	r1,	r4	
    465c:	24 53       	incd	r4		
    465e:	3f 40 80 01 	mov	#384,	r15	;#0x0180
    4662:	2f 4f       	mov	@r15,	r15	
    4664:	4f 4f       	mov.b	r15,	r15	
    4666:	5f f3       	and.b	#1,	r15	;r3 As==01
    4668:	34 41       	pop	r4		
    466a:	30 41       	ret			

0000466c <Msp430CounterC__0__Msp430Timer__isOverflowPending>:
    466c:	04 12       	push	r4		
    466e:	04 41       	mov	r1,	r4	
    4670:	24 53       	incd	r4		
    4672:	21 83       	decd	r1		
    4674:	b0 12 58 46 	call	#0x4658	
    4678:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    467c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    4680:	21 53       	incd	r1		
    4682:	34 41       	pop	r4		
    4684:	30 41       	ret			

00004686 <Msp430CounterC__0__Counter__isOverflowPending>:
    4686:	04 12       	push	r4		
    4688:	04 41       	mov	r1,	r4	
    468a:	24 53       	incd	r4		
    468c:	b0 12 6c 46 	call	#0x466c	
    4690:	34 41       	pop	r4		
    4692:	30 41       	ret			

00004694 <TransformCounterC__0__CounterFrom__isOverflowPending>:
    4694:	04 12       	push	r4		
    4696:	04 41       	mov	r1,	r4	
    4698:	24 53       	incd	r4		
    469a:	21 83       	decd	r1		
    469c:	b0 12 86 46 	call	#0x4686	
    46a0:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    46a4:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    46a8:	21 53       	incd	r1		
    46aa:	34 41       	pop	r4		
    46ac:	30 41       	ret			

000046ae <Msp430TimerCapComP__3__Control__enableEvents>:
    46ae:	04 12       	push	r4		
    46b0:	04 41       	mov	r1,	r4	
    46b2:	24 53       	incd	r4		
    46b4:	3f 40 82 01 	mov	#386,	r15	;#0x0182
    46b8:	3e 40 82 01 	mov	#386,	r14	;#0x0182
    46bc:	2e 4e       	mov	@r14,	r14	
    46be:	3e d0 10 00 	bis	#16,	r14	;#0x0010
    46c2:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
    46c6:	34 41       	pop	r4		
    46c8:	30 41       	ret			

000046ca <Msp430AlarmC__0__Msp430TimerControl__enableEvents>:
    46ca:	04 12       	push	r4		
    46cc:	04 41       	mov	r1,	r4	
    46ce:	24 53       	incd	r4		
    46d0:	b0 12 ae 46 	call	#0x46ae	
    46d4:	34 41       	pop	r4		
    46d6:	30 41       	ret			

000046d8 <Msp430TimerCapComP__3__Control__clearPendingInterrupt>:
    46d8:	04 12       	push	r4		
    46da:	04 41       	mov	r1,	r4	
    46dc:	24 53       	incd	r4		
    46de:	3f 40 82 01 	mov	#386,	r15	;#0x0182
    46e2:	3e 40 82 01 	mov	#386,	r14	;#0x0182
    46e6:	2e 4e       	mov	@r14,	r14	
    46e8:	3e f0 fe ff 	and	#-2,	r14	;#0xfffe
    46ec:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)
    46f0:	34 41       	pop	r4		
    46f2:	30 41       	ret			

000046f4 <Msp430AlarmC__0__Msp430TimerControl__clearPendingInterrupt>:
    46f4:	04 12       	push	r4		
    46f6:	04 41       	mov	r1,	r4	
    46f8:	24 53       	incd	r4		
    46fa:	b0 12 d8 46 	call	#0x46d8	
    46fe:	34 41       	pop	r4		
    4700:	30 41       	ret			

00004702 <Msp430TimerCapComP__3__Compare__setEvent>:
    4702:	04 12       	push	r4		
    4704:	04 41       	mov	r1,	r4	
    4706:	24 53       	incd	r4		
    4708:	21 83       	decd	r1		
    470a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    470e:	3f 40 92 01 	mov	#402,	r15	;#0x0192
    4712:	9f 44 fc ff 00 00 	mov	-4(r4),	0(r15)	;0xfffc(r4), 0x0000(r15)
    4718:	21 53       	incd	r1		
    471a:	34 41       	pop	r4		
    471c:	30 41       	ret			

0000471e <Msp430AlarmC__0__Msp430Compare__setEvent>:
    471e:	04 12       	push	r4		
    4720:	04 41       	mov	r1,	r4	
    4722:	24 53       	incd	r4		
    4724:	21 83       	decd	r1		
    4726:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    472a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    472e:	b0 12 02 47 	call	#0x4702	
    4732:	21 53       	incd	r1		
    4734:	34 41       	pop	r4		
    4736:	30 41       	ret			

00004738 <Msp430TimerCapComP__3__Timer__get>:
    4738:	04 12       	push	r4		
    473a:	04 41       	mov	r1,	r4	
    473c:	24 53       	incd	r4		
    473e:	21 83       	decd	r1		
    4740:	b0 12 58 71 	call	#0x7158	
    4744:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4748:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    474c:	21 53       	incd	r1		
    474e:	34 41       	pop	r4		
    4750:	30 41       	ret			

00004752 <Msp430TimerCapComP__3__Compare__setEventFromNow>:
    4752:	0b 12       	push	r11		
    4754:	04 12       	push	r4		
    4756:	04 41       	mov	r1,	r4	
    4758:	24 52       	add	#4,	r4	;r2 As==10
    475a:	21 83       	decd	r1		
    475c:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    4760:	3b 40 92 01 	mov	#402,	r11	;#0x0192
    4764:	b0 12 38 47 	call	#0x4738	
    4768:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    476c:	8b 4f 00 00 	mov	r15,	0(r11)	;0x0000(r11)
    4770:	21 53       	incd	r1		
    4772:	34 41       	pop	r4		
    4774:	3b 41       	pop	r11		
    4776:	30 41       	ret			

00004778 <Msp430AlarmC__0__Msp430Compare__setEventFromNow>:
    4778:	04 12       	push	r4		
    477a:	04 41       	mov	r1,	r4	
    477c:	24 53       	incd	r4		
    477e:	21 83       	decd	r1		
    4780:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4784:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4788:	b0 12 52 47 	call	#0x4752	
    478c:	21 53       	incd	r1		
    478e:	34 41       	pop	r4		
    4790:	30 41       	ret			

00004792 <Msp430AlarmC__0__Msp430Timer__get>:
    4792:	04 12       	push	r4		
    4794:	04 41       	mov	r1,	r4	
    4796:	24 53       	incd	r4		
    4798:	21 83       	decd	r1		
    479a:	b0 12 58 71 	call	#0x7158	
    479e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    47a2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    47a6:	21 53       	incd	r1		
    47a8:	34 41       	pop	r4		
    47aa:	30 41       	ret			

000047ac <Msp430AlarmC__0__Alarm__startAt>:
    47ac:	04 12       	push	r4		
    47ae:	04 41       	mov	r1,	r4	
    47b0:	24 53       	incd	r4		
    47b2:	31 50 f6 ff 	add	#-10,	r1	;#0xfff6
    47b6:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    47ba:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    47be:	b0 12 92 47 	call	#0x4792	
    47c2:	84 4f f4 ff 	mov	r15,	-12(r4)	;0xfff4(r4)
    47c6:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    47ca:	1f 84 fa ff 	sub	-6(r4),	r15	;0xfffa(r4)
    47ce:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
    47d2:	94 94 fc ff f6 ff 	cmp	-4(r4),	-10(r4)	;0xfffc(r4), 0xfff6(r4)
    47d8:	04 28       	jnc	$+10     	;abs 0x47e2
    47da:	2f 43       	mov	#2,	r15	;r3 As==10
    47dc:	b0 12 78 47 	call	#0x4778	
    47e0:	14 3c       	jmp	$+42     	;abs 0x480a
    47e2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    47e6:	1f 84 f6 ff 	sub	-10(r4),r15	;0xfff6(r4)
    47ea:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    47ee:	b4 90 03 00 f8 ff 	cmp	#3,	-8(r4)	;#0x0003, 0xfff8(r4)
    47f4:	04 2c       	jc	$+10     	;abs 0x47fe
    47f6:	2f 43       	mov	#2,	r15	;r3 As==10
    47f8:	b0 12 78 47 	call	#0x4778	
    47fc:	06 3c       	jmp	$+14     	;abs 0x480a
    47fe:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    4802:	1f 54 f8 ff 	add	-8(r4),	r15	;0xfff8(r4)
    4806:	b0 12 1e 47 	call	#0x471e	
    480a:	b0 12 f4 46 	call	#0x46f4	
    480e:	b0 12 ca 46 	call	#0x46ca	
    4812:	31 50 0a 00 	add	#10,	r1	;#0x000a
    4816:	34 41       	pop	r4		
    4818:	30 41       	ret			

0000481a <TransformAlarmC__0__AlarmFrom__startAt>:
    481a:	04 12       	push	r4		
    481c:	04 41       	mov	r1,	r4	
    481e:	24 53       	incd	r4		
    4820:	21 82       	sub	#4,	r1	;r2 As==10
    4822:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    4826:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    482a:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    482e:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4832:	b0 12 ac 47 	call	#0x47ac	
    4836:	21 52       	add	#4,	r1	;r2 As==10
    4838:	34 41       	pop	r4		
    483a:	30 41       	ret			

0000483c <Msp430TimerCapComP__4__Compare__default__fired>:
    483c:	04 12       	push	r4		
    483e:	04 41       	mov	r1,	r4	
    4840:	24 53       	incd	r4		
    4842:	34 41       	pop	r4		
    4844:	30 41       	ret			

00004846 <Msp430TimerCapComP__4__Compare__fired>:
    4846:	04 12       	push	r4		
    4848:	04 41       	mov	r1,	r4	
    484a:	24 53       	incd	r4		
    484c:	b0 12 3c 48 	call	#0x483c	
    4850:	34 41       	pop	r4		
    4852:	30 41       	ret			

00004854 <Msp430TimerCapComP__4__Capture__getEvent>:
    4854:	04 12       	push	r4		
    4856:	04 41       	mov	r1,	r4	
    4858:	24 53       	incd	r4		
    485a:	3f 40 94 01 	mov	#404,	r15	;#0x0194
    485e:	2f 4f       	mov	@r15,	r15	
    4860:	34 41       	pop	r4		
    4862:	30 41       	ret			

00004864 <Msp430TimerCapComP__4__Capture__default__captured>:
    4864:	04 12       	push	r4		
    4866:	04 41       	mov	r1,	r4	
    4868:	24 53       	incd	r4		
    486a:	21 83       	decd	r1		
    486c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4870:	21 53       	incd	r1		
    4872:	34 41       	pop	r4		
    4874:	30 41       	ret			

00004876 <Msp430TimerCapComP__4__Capture__captured>:
    4876:	04 12       	push	r4		
    4878:	04 41       	mov	r1,	r4	
    487a:	24 53       	incd	r4		
    487c:	21 83       	decd	r1		
    487e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4882:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4886:	b0 12 64 48 	call	#0x4864	
    488a:	21 53       	incd	r1		
    488c:	34 41       	pop	r4		
    488e:	30 41       	ret			

00004890 <Msp430TimerCapComP__4__int2CC>:
    4890:	04 12       	push	r4		
    4892:	04 41       	mov	r1,	r4	
    4894:	24 53       	incd	r4		
    4896:	21 82       	sub	#4,	r1	;r2 As==10
    4898:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    489c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    48a0:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    48a6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    48aa:	21 52       	add	#4,	r1	;r2 As==10
    48ac:	34 41       	pop	r4		
    48ae:	30 41       	ret			

000048b0 <Msp430TimerCapComP__4__Control__getControl>:
    48b0:	04 12       	push	r4		
    48b2:	04 41       	mov	r1,	r4	
    48b4:	24 53       	incd	r4		
    48b6:	3f 40 84 01 	mov	#388,	r15	;#0x0184
    48ba:	2f 4f       	mov	@r15,	r15	
    48bc:	b0 12 90 48 	call	#0x4890	
    48c0:	34 41       	pop	r4		
    48c2:	30 41       	ret			

000048c4 <Msp430TimerCapComP__4__Event__fired>:
    48c4:	04 12       	push	r4		
    48c6:	04 41       	mov	r1,	r4	
    48c8:	24 53       	incd	r4		
    48ca:	b0 12 b0 48 	call	#0x48b0	
    48ce:	8f 10       	swpb	r15		
    48d0:	4f 4f       	mov.b	r15,	r15	
    48d2:	4f 4f       	mov.b	r15,	r15	
    48d4:	5f f3       	and.b	#1,	r15	;r3 As==01
    48d6:	4f 93       	tst.b	r15		
    48d8:	05 24       	jz	$+12     	;abs 0x48e4
    48da:	b0 12 54 48 	call	#0x4854	
    48de:	b0 12 76 48 	call	#0x4876	
    48e2:	02 3c       	jmp	$+6      	;abs 0x48e8
    48e4:	b0 12 46 48 	call	#0x4846	
    48e8:	34 41       	pop	r4		
    48ea:	30 41       	ret			

000048ec <Msp430TimerCapComP__5__Compare__default__fired>:
    48ec:	04 12       	push	r4		
    48ee:	04 41       	mov	r1,	r4	
    48f0:	24 53       	incd	r4		
    48f2:	34 41       	pop	r4		
    48f4:	30 41       	ret			

000048f6 <Msp430TimerCapComP__5__Compare__fired>:
    48f6:	04 12       	push	r4		
    48f8:	04 41       	mov	r1,	r4	
    48fa:	24 53       	incd	r4		
    48fc:	b0 12 ec 48 	call	#0x48ec	
    4900:	34 41       	pop	r4		
    4902:	30 41       	ret			

00004904 <Msp430TimerCapComP__5__Capture__getEvent>:
    4904:	04 12       	push	r4		
    4906:	04 41       	mov	r1,	r4	
    4908:	24 53       	incd	r4		
    490a:	3f 40 96 01 	mov	#406,	r15	;#0x0196
    490e:	2f 4f       	mov	@r15,	r15	
    4910:	34 41       	pop	r4		
    4912:	30 41       	ret			

00004914 <Msp430TimerCapComP__5__Capture__default__captured>:
    4914:	04 12       	push	r4		
    4916:	04 41       	mov	r1,	r4	
    4918:	24 53       	incd	r4		
    491a:	21 83       	decd	r1		
    491c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4920:	21 53       	incd	r1		
    4922:	34 41       	pop	r4		
    4924:	30 41       	ret			

00004926 <Msp430TimerCapComP__5__Capture__captured>:
    4926:	04 12       	push	r4		
    4928:	04 41       	mov	r1,	r4	
    492a:	24 53       	incd	r4		
    492c:	21 83       	decd	r1		
    492e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4932:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4936:	b0 12 14 49 	call	#0x4914	
    493a:	21 53       	incd	r1		
    493c:	34 41       	pop	r4		
    493e:	30 41       	ret			

00004940 <Msp430TimerCapComP__5__int2CC>:
    4940:	04 12       	push	r4		
    4942:	04 41       	mov	r1,	r4	
    4944:	24 53       	incd	r4		
    4946:	21 82       	sub	#4,	r1	;r2 As==10
    4948:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    494c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    4950:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    4956:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    495a:	21 52       	add	#4,	r1	;r2 As==10
    495c:	34 41       	pop	r4		
    495e:	30 41       	ret			

00004960 <Msp430TimerCapComP__5__Control__getControl>:
    4960:	04 12       	push	r4		
    4962:	04 41       	mov	r1,	r4	
    4964:	24 53       	incd	r4		
    4966:	3f 40 86 01 	mov	#390,	r15	;#0x0186
    496a:	2f 4f       	mov	@r15,	r15	
    496c:	b0 12 40 49 	call	#0x4940	
    4970:	34 41       	pop	r4		
    4972:	30 41       	ret			

00004974 <Msp430TimerCapComP__5__Event__fired>:
    4974:	04 12       	push	r4		
    4976:	04 41       	mov	r1,	r4	
    4978:	24 53       	incd	r4		
    497a:	b0 12 60 49 	call	#0x4960	
    497e:	8f 10       	swpb	r15		
    4980:	4f 4f       	mov.b	r15,	r15	
    4982:	4f 4f       	mov.b	r15,	r15	
    4984:	5f f3       	and.b	#1,	r15	;r3 As==01
    4986:	4f 93       	tst.b	r15		
    4988:	05 24       	jz	$+12     	;abs 0x4994
    498a:	b0 12 04 49 	call	#0x4904	
    498e:	b0 12 26 49 	call	#0x4926	
    4992:	02 3c       	jmp	$+6      	;abs 0x4998
    4994:	b0 12 f6 48 	call	#0x48f6	
    4998:	34 41       	pop	r4		
    499a:	30 41       	ret			

0000499c <Msp430TimerCapComP__6__Compare__default__fired>:
    499c:	04 12       	push	r4		
    499e:	04 41       	mov	r1,	r4	
    49a0:	24 53       	incd	r4		
    49a2:	34 41       	pop	r4		
    49a4:	30 41       	ret			

000049a6 <Msp430TimerCapComP__6__Compare__fired>:
    49a6:	04 12       	push	r4		
    49a8:	04 41       	mov	r1,	r4	
    49aa:	24 53       	incd	r4		
    49ac:	b0 12 9c 49 	call	#0x499c	
    49b0:	34 41       	pop	r4		
    49b2:	30 41       	ret			

000049b4 <Msp430TimerCapComP__6__Capture__getEvent>:
    49b4:	04 12       	push	r4		
    49b6:	04 41       	mov	r1,	r4	
    49b8:	24 53       	incd	r4		
    49ba:	3f 40 98 01 	mov	#408,	r15	;#0x0198
    49be:	2f 4f       	mov	@r15,	r15	
    49c0:	34 41       	pop	r4		
    49c2:	30 41       	ret			

000049c4 <Msp430TimerCapComP__6__Capture__default__captured>:
    49c4:	04 12       	push	r4		
    49c6:	04 41       	mov	r1,	r4	
    49c8:	24 53       	incd	r4		
    49ca:	21 83       	decd	r1		
    49cc:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    49d0:	21 53       	incd	r1		
    49d2:	34 41       	pop	r4		
    49d4:	30 41       	ret			

000049d6 <Msp430TimerCapComP__6__Capture__captured>:
    49d6:	04 12       	push	r4		
    49d8:	04 41       	mov	r1,	r4	
    49da:	24 53       	incd	r4		
    49dc:	21 83       	decd	r1		
    49de:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    49e2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    49e6:	b0 12 c4 49 	call	#0x49c4	
    49ea:	21 53       	incd	r1		
    49ec:	34 41       	pop	r4		
    49ee:	30 41       	ret			

000049f0 <Msp430TimerCapComP__6__int2CC>:
    49f0:	04 12       	push	r4		
    49f2:	04 41       	mov	r1,	r4	
    49f4:	24 53       	incd	r4		
    49f6:	21 82       	sub	#4,	r1	;r2 As==10
    49f8:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    49fc:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    4a00:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    4a06:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4a0a:	21 52       	add	#4,	r1	;r2 As==10
    4a0c:	34 41       	pop	r4		
    4a0e:	30 41       	ret			

00004a10 <Msp430TimerCapComP__6__Control__getControl>:
    4a10:	04 12       	push	r4		
    4a12:	04 41       	mov	r1,	r4	
    4a14:	24 53       	incd	r4		
    4a16:	3f 40 88 01 	mov	#392,	r15	;#0x0188
    4a1a:	2f 4f       	mov	@r15,	r15	
    4a1c:	b0 12 f0 49 	call	#0x49f0	
    4a20:	34 41       	pop	r4		
    4a22:	30 41       	ret			

00004a24 <Msp430TimerCapComP__6__Event__fired>:
    4a24:	04 12       	push	r4		
    4a26:	04 41       	mov	r1,	r4	
    4a28:	24 53       	incd	r4		
    4a2a:	b0 12 10 4a 	call	#0x4a10	
    4a2e:	8f 10       	swpb	r15		
    4a30:	4f 4f       	mov.b	r15,	r15	
    4a32:	4f 4f       	mov.b	r15,	r15	
    4a34:	5f f3       	and.b	#1,	r15	;r3 As==01
    4a36:	4f 93       	tst.b	r15		
    4a38:	05 24       	jz	$+12     	;abs 0x4a44
    4a3a:	b0 12 b4 49 	call	#0x49b4	
    4a3e:	b0 12 d6 49 	call	#0x49d6	
    4a42:	02 3c       	jmp	$+6      	;abs 0x4a48
    4a44:	b0 12 a6 49 	call	#0x49a6	
    4a48:	34 41       	pop	r4		
    4a4a:	30 41       	ret			

00004a4c <Msp430TimerCapComP__7__Compare__default__fired>:
    4a4c:	04 12       	push	r4		
    4a4e:	04 41       	mov	r1,	r4	
    4a50:	24 53       	incd	r4		
    4a52:	34 41       	pop	r4		
    4a54:	30 41       	ret			

00004a56 <Msp430TimerCapComP__7__Compare__fired>:
    4a56:	04 12       	push	r4		
    4a58:	04 41       	mov	r1,	r4	
    4a5a:	24 53       	incd	r4		
    4a5c:	b0 12 4c 4a 	call	#0x4a4c	
    4a60:	34 41       	pop	r4		
    4a62:	30 41       	ret			

00004a64 <Msp430TimerCapComP__7__Capture__getEvent>:
    4a64:	04 12       	push	r4		
    4a66:	04 41       	mov	r1,	r4	
    4a68:	24 53       	incd	r4		
    4a6a:	3f 40 9a 01 	mov	#410,	r15	;#0x019a
    4a6e:	2f 4f       	mov	@r15,	r15	
    4a70:	34 41       	pop	r4		
    4a72:	30 41       	ret			

00004a74 <Msp430TimerCapComP__7__Capture__default__captured>:
    4a74:	04 12       	push	r4		
    4a76:	04 41       	mov	r1,	r4	
    4a78:	24 53       	incd	r4		
    4a7a:	21 83       	decd	r1		
    4a7c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4a80:	21 53       	incd	r1		
    4a82:	34 41       	pop	r4		
    4a84:	30 41       	ret			

00004a86 <Msp430TimerCapComP__7__Capture__captured>:
    4a86:	04 12       	push	r4		
    4a88:	04 41       	mov	r1,	r4	
    4a8a:	24 53       	incd	r4		
    4a8c:	21 83       	decd	r1		
    4a8e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4a92:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4a96:	b0 12 74 4a 	call	#0x4a74	
    4a9a:	21 53       	incd	r1		
    4a9c:	34 41       	pop	r4		
    4a9e:	30 41       	ret			

00004aa0 <Msp430TimerCapComP__7__int2CC>:
    4aa0:	04 12       	push	r4		
    4aa2:	04 41       	mov	r1,	r4	
    4aa4:	24 53       	incd	r4		
    4aa6:	21 82       	sub	#4,	r1	;r2 As==10
    4aa8:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4aac:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    4ab0:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    4ab6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4aba:	21 52       	add	#4,	r1	;r2 As==10
    4abc:	34 41       	pop	r4		
    4abe:	30 41       	ret			

00004ac0 <Msp430TimerCapComP__7__Control__getControl>:
    4ac0:	04 12       	push	r4		
    4ac2:	04 41       	mov	r1,	r4	
    4ac4:	24 53       	incd	r4		
    4ac6:	3f 40 8a 01 	mov	#394,	r15	;#0x018a
    4aca:	2f 4f       	mov	@r15,	r15	
    4acc:	b0 12 a0 4a 	call	#0x4aa0	
    4ad0:	34 41       	pop	r4		
    4ad2:	30 41       	ret			

00004ad4 <Msp430TimerCapComP__7__Event__fired>:
    4ad4:	04 12       	push	r4		
    4ad6:	04 41       	mov	r1,	r4	
    4ad8:	24 53       	incd	r4		
    4ada:	b0 12 c0 4a 	call	#0x4ac0	
    4ade:	8f 10       	swpb	r15		
    4ae0:	4f 4f       	mov.b	r15,	r15	
    4ae2:	4f 4f       	mov.b	r15,	r15	
    4ae4:	5f f3       	and.b	#1,	r15	;r3 As==01
    4ae6:	4f 93       	tst.b	r15		
    4ae8:	05 24       	jz	$+12     	;abs 0x4af4
    4aea:	b0 12 64 4a 	call	#0x4a64	
    4aee:	b0 12 86 4a 	call	#0x4a86	
    4af2:	02 3c       	jmp	$+6      	;abs 0x4af8
    4af4:	b0 12 56 4a 	call	#0x4a56	
    4af8:	34 41       	pop	r4		
    4afa:	30 41       	ret			

00004afc <Msp430TimerCapComP__8__Compare__default__fired>:
    4afc:	04 12       	push	r4		
    4afe:	04 41       	mov	r1,	r4	
    4b00:	24 53       	incd	r4		
    4b02:	34 41       	pop	r4		
    4b04:	30 41       	ret			

00004b06 <Msp430TimerCapComP__8__Compare__fired>:
    4b06:	04 12       	push	r4		
    4b08:	04 41       	mov	r1,	r4	
    4b0a:	24 53       	incd	r4		
    4b0c:	b0 12 fc 4a 	call	#0x4afc	
    4b10:	34 41       	pop	r4		
    4b12:	30 41       	ret			

00004b14 <Msp430TimerCapComP__8__Capture__getEvent>:
    4b14:	04 12       	push	r4		
    4b16:	04 41       	mov	r1,	r4	
    4b18:	24 53       	incd	r4		
    4b1a:	3f 40 9c 01 	mov	#412,	r15	;#0x019c
    4b1e:	2f 4f       	mov	@r15,	r15	
    4b20:	34 41       	pop	r4		
    4b22:	30 41       	ret			

00004b24 <Msp430TimerCapComP__8__Capture__default__captured>:
    4b24:	04 12       	push	r4		
    4b26:	04 41       	mov	r1,	r4	
    4b28:	24 53       	incd	r4		
    4b2a:	21 83       	decd	r1		
    4b2c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4b30:	21 53       	incd	r1		
    4b32:	34 41       	pop	r4		
    4b34:	30 41       	ret			

00004b36 <Msp430TimerCapComP__8__Capture__captured>:
    4b36:	04 12       	push	r4		
    4b38:	04 41       	mov	r1,	r4	
    4b3a:	24 53       	incd	r4		
    4b3c:	21 83       	decd	r1		
    4b3e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4b42:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4b46:	b0 12 24 4b 	call	#0x4b24	
    4b4a:	21 53       	incd	r1		
    4b4c:	34 41       	pop	r4		
    4b4e:	30 41       	ret			

00004b50 <Msp430TimerCapComP__8__int2CC>:
    4b50:	04 12       	push	r4		
    4b52:	04 41       	mov	r1,	r4	
    4b54:	24 53       	incd	r4		
    4b56:	21 82       	sub	#4,	r1	;r2 As==10
    4b58:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4b5c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    4b60:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    4b66:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4b6a:	21 52       	add	#4,	r1	;r2 As==10
    4b6c:	34 41       	pop	r4		
    4b6e:	30 41       	ret			

00004b70 <Msp430TimerCapComP__8__Control__getControl>:
    4b70:	04 12       	push	r4		
    4b72:	04 41       	mov	r1,	r4	
    4b74:	24 53       	incd	r4		
    4b76:	3f 40 8c 01 	mov	#396,	r15	;#0x018c
    4b7a:	2f 4f       	mov	@r15,	r15	
    4b7c:	b0 12 50 4b 	call	#0x4b50	
    4b80:	34 41       	pop	r4		
    4b82:	30 41       	ret			

00004b84 <Msp430TimerCapComP__8__Event__fired>:
    4b84:	04 12       	push	r4		
    4b86:	04 41       	mov	r1,	r4	
    4b88:	24 53       	incd	r4		
    4b8a:	b0 12 70 4b 	call	#0x4b70	
    4b8e:	8f 10       	swpb	r15		
    4b90:	4f 4f       	mov.b	r15,	r15	
    4b92:	4f 4f       	mov.b	r15,	r15	
    4b94:	5f f3       	and.b	#1,	r15	;r3 As==01
    4b96:	4f 93       	tst.b	r15		
    4b98:	05 24       	jz	$+12     	;abs 0x4ba4
    4b9a:	b0 12 14 4b 	call	#0x4b14	
    4b9e:	b0 12 36 4b 	call	#0x4b36	
    4ba2:	02 3c       	jmp	$+6      	;abs 0x4ba8
    4ba4:	b0 12 06 4b 	call	#0x4b06	
    4ba8:	34 41       	pop	r4		
    4baa:	30 41       	ret			

00004bac <Msp430TimerCapComP__9__Compare__default__fired>:
    4bac:	04 12       	push	r4		
    4bae:	04 41       	mov	r1,	r4	
    4bb0:	24 53       	incd	r4		
    4bb2:	34 41       	pop	r4		
    4bb4:	30 41       	ret			

00004bb6 <Msp430TimerCapComP__9__Compare__fired>:
    4bb6:	04 12       	push	r4		
    4bb8:	04 41       	mov	r1,	r4	
    4bba:	24 53       	incd	r4		
    4bbc:	b0 12 ac 4b 	call	#0x4bac	
    4bc0:	34 41       	pop	r4		
    4bc2:	30 41       	ret			

00004bc4 <Msp430TimerCapComP__9__Capture__getEvent>:
    4bc4:	04 12       	push	r4		
    4bc6:	04 41       	mov	r1,	r4	
    4bc8:	24 53       	incd	r4		
    4bca:	3f 40 9e 01 	mov	#414,	r15	;#0x019e
    4bce:	2f 4f       	mov	@r15,	r15	
    4bd0:	34 41       	pop	r4		
    4bd2:	30 41       	ret			

00004bd4 <Msp430TimerCapComP__9__Capture__default__captured>:
    4bd4:	04 12       	push	r4		
    4bd6:	04 41       	mov	r1,	r4	
    4bd8:	24 53       	incd	r4		
    4bda:	21 83       	decd	r1		
    4bdc:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4be0:	21 53       	incd	r1		
    4be2:	34 41       	pop	r4		
    4be4:	30 41       	ret			

00004be6 <Msp430TimerCapComP__9__Capture__captured>:
    4be6:	04 12       	push	r4		
    4be8:	04 41       	mov	r1,	r4	
    4bea:	24 53       	incd	r4		
    4bec:	21 83       	decd	r1		
    4bee:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4bf2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    4bf6:	b0 12 d4 4b 	call	#0x4bd4	
    4bfa:	21 53       	incd	r1		
    4bfc:	34 41       	pop	r4		
    4bfe:	30 41       	ret			

00004c00 <Msp430TimerCapComP__9__int2CC>:
    4c00:	04 12       	push	r4		
    4c02:	04 41       	mov	r1,	r4	
    4c04:	24 53       	incd	r4		
    4c06:	21 82       	sub	#4,	r1	;r2 As==10
    4c08:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    4c0c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    4c10:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    4c16:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    4c1a:	21 52       	add	#4,	r1	;r2 As==10
    4c1c:	34 41       	pop	r4		
    4c1e:	30 41       	ret			

00004c20 <Msp430TimerCapComP__9__Control__getControl>:
    4c20:	04 12       	push	r4		
    4c22:	04 41       	mov	r1,	r4	
    4c24:	24 53       	incd	r4		
    4c26:	3f 40 8e 01 	mov	#398,	r15	;#0x018e
    4c2a:	2f 4f       	mov	@r15,	r15	
    4c2c:	b0 12 00 4c 	call	#0x4c00	
    4c30:	34 41       	pop	r4		
    4c32:	30 41       	ret			

00004c34 <Msp430TimerCapComP__9__Event__fired>:
    4c34:	04 12       	push	r4		
    4c36:	04 41       	mov	r1,	r4	
    4c38:	24 53       	incd	r4		
    4c3a:	b0 12 20 4c 	call	#0x4c20	
    4c3e:	8f 10       	swpb	r15		
    4c40:	4f 4f       	mov.b	r15,	r15	
    4c42:	4f 4f       	mov.b	r15,	r15	
    4c44:	5f f3       	and.b	#1,	r15	;r3 As==01
    4c46:	4f 93       	tst.b	r15		
    4c48:	05 24       	jz	$+12     	;abs 0x4c54
    4c4a:	b0 12 c4 4b 	call	#0x4bc4	
    4c4e:	b0 12 e6 4b 	call	#0x4be6	
    4c52:	02 3c       	jmp	$+6      	;abs 0x4c58
    4c54:	b0 12 b6 4b 	call	#0x4bb6	
    4c58:	34 41       	pop	r4		
    4c5a:	30 41       	ret			

00004c5c <Msp430TimerP__1__VectorTimerX1__fired>:
    4c5c:	04 12       	push	r4		
    4c5e:	04 41       	mov	r1,	r4	
    4c60:	24 53       	incd	r4		
    4c62:	21 83       	decd	r1		
    4c64:	3f 40 1e 01 	mov	#286,	r15	;#0x011e
    4c68:	2f 4f       	mov	@r15,	r15	
    4c6a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    4c6e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    4c72:	4f 4f       	mov.b	r15,	r15	
    4c74:	12 c3       	clrc			
    4c76:	4f 10       	rrc.b	r15		
    4c78:	b0 12 7e 6e 	call	#0x6e7e	
    4c7c:	21 53       	incd	r1		
    4c7e:	34 41       	pop	r4		
    4c80:	30 41       	ret			

00004c82 <Msp430TimerCommonP__VectorTimerB1__fired>:
    4c82:	04 12       	push	r4		
    4c84:	04 41       	mov	r1,	r4	
    4c86:	24 53       	incd	r4		
    4c88:	b0 12 5c 4c 	call	#0x4c5c	
    4c8c:	34 41       	pop	r4		
    4c8e:	30 41       	ret			

00004c90 <SchedulerBasicP__Scheduler__init>:
    4c90:	04 12       	push	r4		
    4c92:	04 41       	mov	r1,	r4	
    4c94:	24 53       	incd	r4		
    4c96:	3f 40 0a 11 	mov	#4362,	r15	;#0x110a
    4c9a:	ff 43 00 00 	mov.b	#-1,	0(r15)	;r3 As==11, 0x0000(r15)
    4c9e:	1f 53       	inc	r15		
    4ca0:	ff 43 00 00 	mov.b	#-1,	0(r15)	;r3 As==11, 0x0000(r15)
    4ca4:	1f 53       	inc	r15		
    4ca6:	ff 43 00 00 	mov.b	#-1,	0(r15)	;r3 As==11, 0x0000(r15)
    4caa:	1f 53       	inc	r15		
    4cac:	ff 43 00 00 	mov.b	#-1,	0(r15)	;r3 As==11, 0x0000(r15)
    4cb0:	1f 53       	inc	r15		
    4cb2:	ff 43 00 00 	mov.b	#-1,	0(r15)	;r3 As==11, 0x0000(r15)
    4cb6:	1f 53       	inc	r15		
    4cb8:	f2 43 4f 11 	mov.b	#-1,	&0x114f	;r3 As==11
    4cbc:	f2 43 50 11 	mov.b	#-1,	&0x1150	;r3 As==11
    4cc0:	34 41       	pop	r4		
    4cc2:	30 41       	ret			

00004cc4 <RealMainP__Scheduler__init>:
    4cc4:	04 12       	push	r4		
    4cc6:	04 41       	mov	r1,	r4	
    4cc8:	24 53       	incd	r4		
    4cca:	b0 12 90 4c 	call	#0x4c90	
    4cce:	34 41       	pop	r4		
    4cd0:	30 41       	ret			

00004cd2 <Msp430GpioC__2__HplGeneralIO__set>:
    4cd2:	04 12       	push	r4		
    4cd4:	04 41       	mov	r1,	r4	
    4cd6:	24 53       	incd	r4		
    4cd8:	b0 12 4e 72 	call	#0x724e	
    4cdc:	34 41       	pop	r4		
    4cde:	30 41       	ret			

00004ce0 <Msp430GpioC__2__GeneralIO__set>:
    4ce0:	04 12       	push	r4		
    4ce2:	04 41       	mov	r1,	r4	
    4ce4:	24 53       	incd	r4		
    4ce6:	b0 12 d2 4c 	call	#0x4cd2	
    4cea:	34 41       	pop	r4		
    4cec:	30 41       	ret			

00004cee <LedsP__Led2__set>:
    4cee:	04 12       	push	r4		
    4cf0:	04 41       	mov	r1,	r4	
    4cf2:	24 53       	incd	r4		
    4cf4:	b0 12 e0 4c 	call	#0x4ce0	
    4cf8:	34 41       	pop	r4		
    4cfa:	30 41       	ret			

00004cfc <Msp430GpioC__1__HplGeneralIO__set>:
    4cfc:	04 12       	push	r4		
    4cfe:	04 41       	mov	r1,	r4	
    4d00:	24 53       	incd	r4		
    4d02:	b0 12 20 72 	call	#0x7220	
    4d06:	34 41       	pop	r4		
    4d08:	30 41       	ret			

00004d0a <Msp430GpioC__1__GeneralIO__set>:
    4d0a:	04 12       	push	r4		
    4d0c:	04 41       	mov	r1,	r4	
    4d0e:	24 53       	incd	r4		
    4d10:	b0 12 fc 4c 	call	#0x4cfc	
    4d14:	34 41       	pop	r4		
    4d16:	30 41       	ret			

00004d18 <LedsP__Led1__set>:
    4d18:	04 12       	push	r4		
    4d1a:	04 41       	mov	r1,	r4	
    4d1c:	24 53       	incd	r4		
    4d1e:	b0 12 0a 4d 	call	#0x4d0a	
    4d22:	34 41       	pop	r4		
    4d24:	30 41       	ret			

00004d26 <Msp430GpioC__0__HplGeneralIO__set>:
    4d26:	04 12       	push	r4		
    4d28:	04 41       	mov	r1,	r4	
    4d2a:	24 53       	incd	r4		
    4d2c:	b0 12 f2 71 	call	#0x71f2	
    4d30:	34 41       	pop	r4		
    4d32:	30 41       	ret			

00004d34 <Msp430GpioC__0__GeneralIO__set>:
    4d34:	04 12       	push	r4		
    4d36:	04 41       	mov	r1,	r4	
    4d38:	24 53       	incd	r4		
    4d3a:	b0 12 26 4d 	call	#0x4d26	
    4d3e:	34 41       	pop	r4		
    4d40:	30 41       	ret			

00004d42 <LedsP__Led0__set>:
    4d42:	04 12       	push	r4		
    4d44:	04 41       	mov	r1,	r4	
    4d46:	24 53       	incd	r4		
    4d48:	b0 12 34 4d 	call	#0x4d34	
    4d4c:	34 41       	pop	r4		
    4d4e:	30 41       	ret			

00004d50 <HplMsp430GeneralIOP__27__IO__makeOutput>:
    4d50:	04 12       	push	r4		
    4d52:	04 41       	mov	r1,	r4	
    4d54:	24 53       	incd	r4		
    4d56:	3f 40 1e 00 	mov	#30,	r15	;#0x001e
    4d5a:	3e 40 1e 00 	mov	#30,	r14	;#0x001e
    4d5e:	6e 4e       	mov.b	@r14,	r14	
    4d60:	7e d2       	bis.b	#8,	r14	;r2 As==11
    4d62:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    4d66:	34 41       	pop	r4		
    4d68:	30 41       	ret			

00004d6a <Msp430GpioC__2__HplGeneralIO__makeOutput>:
    4d6a:	04 12       	push	r4		
    4d6c:	04 41       	mov	r1,	r4	
    4d6e:	24 53       	incd	r4		
    4d70:	b0 12 50 4d 	call	#0x4d50	
    4d74:	34 41       	pop	r4		
    4d76:	30 41       	ret			

00004d78 <Msp430GpioC__2__GeneralIO__makeOutput>:
    4d78:	04 12       	push	r4		
    4d7a:	04 41       	mov	r1,	r4	
    4d7c:	24 53       	incd	r4		
    4d7e:	b0 12 6a 4d 	call	#0x4d6a	
    4d82:	34 41       	pop	r4		
    4d84:	30 41       	ret			

00004d86 <LedsP__Led2__makeOutput>:
    4d86:	04 12       	push	r4		
    4d88:	04 41       	mov	r1,	r4	
    4d8a:	24 53       	incd	r4		
    4d8c:	b0 12 78 4d 	call	#0x4d78	
    4d90:	34 41       	pop	r4		
    4d92:	30 41       	ret			

00004d94 <HplMsp430GeneralIOP__26__IO__makeOutput>:
    4d94:	04 12       	push	r4		
    4d96:	04 41       	mov	r1,	r4	
    4d98:	24 53       	incd	r4		
    4d9a:	3f 40 1e 00 	mov	#30,	r15	;#0x001e
    4d9e:	3e 40 1e 00 	mov	#30,	r14	;#0x001e
    4da2:	6e 4e       	mov.b	@r14,	r14	
    4da4:	6e d2       	bis.b	#4,	r14	;r2 As==10
    4da6:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    4daa:	34 41       	pop	r4		
    4dac:	30 41       	ret			

00004dae <Msp430GpioC__1__HplGeneralIO__makeOutput>:
    4dae:	04 12       	push	r4		
    4db0:	04 41       	mov	r1,	r4	
    4db2:	24 53       	incd	r4		
    4db4:	b0 12 94 4d 	call	#0x4d94	
    4db8:	34 41       	pop	r4		
    4dba:	30 41       	ret			

00004dbc <Msp430GpioC__1__GeneralIO__makeOutput>:
    4dbc:	04 12       	push	r4		
    4dbe:	04 41       	mov	r1,	r4	
    4dc0:	24 53       	incd	r4		
    4dc2:	b0 12 ae 4d 	call	#0x4dae	
    4dc6:	34 41       	pop	r4		
    4dc8:	30 41       	ret			

00004dca <LedsP__Led1__makeOutput>:
    4dca:	04 12       	push	r4		
    4dcc:	04 41       	mov	r1,	r4	
    4dce:	24 53       	incd	r4		
    4dd0:	b0 12 bc 4d 	call	#0x4dbc	
    4dd4:	34 41       	pop	r4		
    4dd6:	30 41       	ret			

00004dd8 <HplMsp430GeneralIOP__24__IO__makeOutput>:
    4dd8:	04 12       	push	r4		
    4dda:	04 41       	mov	r1,	r4	
    4ddc:	24 53       	incd	r4		
    4dde:	3f 40 1e 00 	mov	#30,	r15	;#0x001e
    4de2:	3e 40 1e 00 	mov	#30,	r14	;#0x001e
    4de6:	6e 4e       	mov.b	@r14,	r14	
    4de8:	5e d3       	bis.b	#1,	r14	;r3 As==01
    4dea:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    4dee:	34 41       	pop	r4		
    4df0:	30 41       	ret			

00004df2 <Msp430GpioC__0__HplGeneralIO__makeOutput>:
    4df2:	04 12       	push	r4		
    4df4:	04 41       	mov	r1,	r4	
    4df6:	24 53       	incd	r4		
    4df8:	b0 12 d8 4d 	call	#0x4dd8	
    4dfc:	34 41       	pop	r4		
    4dfe:	30 41       	ret			

00004e00 <Msp430GpioC__0__GeneralIO__makeOutput>:
    4e00:	04 12       	push	r4		
    4e02:	04 41       	mov	r1,	r4	
    4e04:	24 53       	incd	r4		
    4e06:	b0 12 f2 4d 	call	#0x4df2	
    4e0a:	34 41       	pop	r4		
    4e0c:	30 41       	ret			

00004e0e <LedsP__Led0__makeOutput>:
    4e0e:	04 12       	push	r4		
    4e10:	04 41       	mov	r1,	r4	
    4e12:	24 53       	incd	r4		
    4e14:	b0 12 00 4e 	call	#0x4e00	
    4e18:	34 41       	pop	r4		
    4e1a:	30 41       	ret			

00004e1c <LedsP__Init__init>:
    4e1c:	04 12       	push	r4		
    4e1e:	04 41       	mov	r1,	r4	
    4e20:	24 53       	incd	r4		
    4e22:	b0 12 0e 4e 	call	#0x4e0e	
    4e26:	b0 12 ca 4d 	call	#0x4dca	
    4e2a:	b0 12 86 4d 	call	#0x4d86	
    4e2e:	b0 12 42 4d 	call	#0x4d42	
    4e32:	b0 12 18 4d 	call	#0x4d18	
    4e36:	b0 12 ee 4c 	call	#0x4cee	
    4e3a:	4f 43       	clr.b	r15		
    4e3c:	34 41       	pop	r4		
    4e3e:	30 41       	ret			

00004e40 <PlatformP__LedsInit__init>:
    4e40:	04 12       	push	r4		
    4e42:	04 41       	mov	r1,	r4	
    4e44:	24 53       	incd	r4		
    4e46:	21 83       	decd	r1		
    4e48:	b0 12 1c 4e 	call	#0x4e1c	
    4e4c:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    4e50:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    4e54:	21 53       	incd	r1		
    4e56:	34 41       	pop	r4		
    4e58:	30 41       	ret			

00004e5a <TOSH_MAKE_DOCK_N_INPUT>:
    4e5a:	04 12       	push	r4		
    4e5c:	04 41       	mov	r1,	r4	
    4e5e:	24 53       	incd	r4		
    4e60:	5f 42 2a 00 	mov.b	&0x002a,r15	
    4e64:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    4e68:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    4e6c:	34 41       	pop	r4		
    4e6e:	30 41       	ret			

00004e70 <TOSH_SET_UCLK1_PIN>:
    4e70:	04 12       	push	r4		
    4e72:	04 41       	mov	r1,	r4	
    4e74:	24 53       	incd	r4		
    4e76:	5f 42 31 00 	mov.b	&0x0031,r15	
    4e7a:	7f d2       	bis.b	#8,	r15	;r2 As==11
    4e7c:	c2 4f 31 00 	mov.b	r15,	&0x0031	
    4e80:	34 41       	pop	r4		
    4e82:	30 41       	ret			

00004e84 <TOSH_SET_SIMO1_PIN>:
    4e84:	04 12       	push	r4		
    4e86:	04 41       	mov	r1,	r4	
    4e88:	24 53       	incd	r4		
    4e8a:	5f 42 31 00 	mov.b	&0x0031,r15	
    4e8e:	6f d3       	bis.b	#2,	r15	;r3 As==10
    4e90:	c2 4f 31 00 	mov.b	r15,	&0x0031	
    4e94:	34 41       	pop	r4		
    4e96:	30 41       	ret			

00004e98 <TOSH_SET_SD_CLK_PIN>:
    4e98:	04 12       	push	r4		
    4e9a:	04 41       	mov	r1,	r4	
    4e9c:	24 53       	incd	r4		
    4e9e:	5f 42 19 00 	mov.b	&0x0019,r15	
    4ea2:	7f d2       	bis.b	#8,	r15	;r2 As==11
    4ea4:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    4ea8:	34 41       	pop	r4		
    4eaa:	30 41       	ret			

00004eac <TOSH_SET_SD_DI_PIN>:
    4eac:	04 12       	push	r4		
    4eae:	04 41       	mov	r1,	r4	
    4eb0:	24 53       	incd	r4		
    4eb2:	5f 42 19 00 	mov.b	&0x0019,r15	
    4eb6:	6f d3       	bis.b	#2,	r15	;r3 As==10
    4eb8:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    4ebc:	34 41       	pop	r4		
    4ebe:	30 41       	ret			

00004ec0 <TOSH_SET_SD_CS_N_PIN>:
    4ec0:	04 12       	push	r4		
    4ec2:	04 41       	mov	r1,	r4	
    4ec4:	24 53       	incd	r4		
    4ec6:	5f 42 19 00 	mov.b	&0x0019,r15	
    4eca:	5f d3       	bis.b	#1,	r15	;r3 As==01
    4ecc:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    4ed0:	34 41       	pop	r4		
    4ed2:	30 41       	ret			

00004ed4 <TOSH_MAKE_SOMI1_INPUT>:
    4ed4:	04 12       	push	r4		
    4ed6:	04 41       	mov	r1,	r4	
    4ed8:	24 53       	incd	r4		
    4eda:	5f 42 32 00 	mov.b	&0x0032,r15	
    4ede:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    4ee2:	c2 4f 32 00 	mov.b	r15,	&0x0032	
    4ee6:	34 41       	pop	r4		
    4ee8:	30 41       	ret			

00004eea <TOSH_SEL_SOMI1_IOFUNC>:
    4eea:	04 12       	push	r4		
    4eec:	04 41       	mov	r1,	r4	
    4eee:	24 53       	incd	r4		
    4ef0:	5f 42 33 00 	mov.b	&0x0033,r15	
    4ef4:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    4ef8:	c2 4f 33 00 	mov.b	r15,	&0x0033	
    4efc:	34 41       	pop	r4		
    4efe:	30 41       	ret			

00004f00 <TOSH_MAKE_SIMO1_OUTPUT>:
    4f00:	04 12       	push	r4		
    4f02:	04 41       	mov	r1,	r4	
    4f04:	24 53       	incd	r4		
    4f06:	5f 42 32 00 	mov.b	&0x0032,r15	
    4f0a:	6f d3       	bis.b	#2,	r15	;r3 As==10
    4f0c:	c2 4f 32 00 	mov.b	r15,	&0x0032	
    4f10:	34 41       	pop	r4		
    4f12:	30 41       	ret			

00004f14 <TOSH_SEL_SIMO1_IOFUNC>:
    4f14:	04 12       	push	r4		
    4f16:	04 41       	mov	r1,	r4	
    4f18:	24 53       	incd	r4		
    4f1a:	5f 42 33 00 	mov.b	&0x0033,r15	
    4f1e:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    4f22:	c2 4f 33 00 	mov.b	r15,	&0x0033	
    4f26:	34 41       	pop	r4		
    4f28:	30 41       	ret			

00004f2a <TOSH_MAKE_UCLK1_OUTPUT>:
    4f2a:	04 12       	push	r4		
    4f2c:	04 41       	mov	r1,	r4	
    4f2e:	24 53       	incd	r4		
    4f30:	5f 42 32 00 	mov.b	&0x0032,r15	
    4f34:	7f d2       	bis.b	#8,	r15	;r2 As==11
    4f36:	c2 4f 32 00 	mov.b	r15,	&0x0032	
    4f3a:	34 41       	pop	r4		
    4f3c:	30 41       	ret			

00004f3e <TOSH_SEL_UCLK1_IOFUNC>:
    4f3e:	04 12       	push	r4		
    4f40:	04 41       	mov	r1,	r4	
    4f42:	24 53       	incd	r4		
    4f44:	5f 42 33 00 	mov.b	&0x0033,r15	
    4f48:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    4f4c:	c2 4f 33 00 	mov.b	r15,	&0x0033	
    4f50:	34 41       	pop	r4		
    4f52:	30 41       	ret			

00004f54 <TOSH_MAKE_URXD1_OUTPUT>:
    4f54:	04 12       	push	r4		
    4f56:	04 41       	mov	r1,	r4	
    4f58:	24 53       	incd	r4		
    4f5a:	5f 42 1a 00 	mov.b	&0x001a,r15	
    4f5e:	7f d0 80 ff 	bis.b	#-128,	r15	;#0xff80
    4f62:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    4f66:	34 41       	pop	r4		
    4f68:	30 41       	ret			

00004f6a <TOSH_SEL_URXD1_IOFUNC>:
    4f6a:	04 12       	push	r4		
    4f6c:	04 41       	mov	r1,	r4	
    4f6e:	24 53       	incd	r4		
    4f70:	5f 42 1b 00 	mov.b	&0x001b,r15	
    4f74:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    4f78:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    4f7c:	34 41       	pop	r4		
    4f7e:	30 41       	ret			

00004f80 <TOSH_MAKE_UTXD1_OUTPUT>:
    4f80:	04 12       	push	r4		
    4f82:	04 41       	mov	r1,	r4	
    4f84:	24 53       	incd	r4		
    4f86:	5f 42 1a 00 	mov.b	&0x001a,r15	
    4f8a:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    4f8e:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    4f92:	34 41       	pop	r4		
    4f94:	30 41       	ret			

00004f96 <TOSH_SEL_UTXD1_IOFUNC>:
    4f96:	04 12       	push	r4		
    4f98:	04 41       	mov	r1,	r4	
    4f9a:	24 53       	incd	r4		
    4f9c:	5f 42 1b 00 	mov.b	&0x001b,r15	
    4fa0:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    4fa4:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    4fa8:	34 41       	pop	r4		
    4faa:	30 41       	ret			

00004fac <TOSH_SET_URXD0_PIN>:
    4fac:	04 12       	push	r4		
    4fae:	04 41       	mov	r1,	r4	
    4fb0:	24 53       	incd	r4		
    4fb2:	5f 42 19 00 	mov.b	&0x0019,r15	
    4fb6:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    4fba:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    4fbe:	34 41       	pop	r4		
    4fc0:	30 41       	ret			

00004fc2 <TOSH_MAKE_URXD0_OUTPUT>:
    4fc2:	04 12       	push	r4		
    4fc4:	04 41       	mov	r1,	r4	
    4fc6:	24 53       	incd	r4		
    4fc8:	5f 42 1a 00 	mov.b	&0x001a,r15	
    4fcc:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    4fd0:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    4fd4:	34 41       	pop	r4		
    4fd6:	30 41       	ret			

00004fd8 <TOSH_SEL_URXD0_IOFUNC>:
    4fd8:	04 12       	push	r4		
    4fda:	04 41       	mov	r1,	r4	
    4fdc:	24 53       	incd	r4		
    4fde:	5f 42 1b 00 	mov.b	&0x001b,r15	
    4fe2:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    4fe6:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    4fea:	34 41       	pop	r4		
    4fec:	30 41       	ret			

00004fee <TOSH_MAKE_UTXD0_OUTPUT>:
    4fee:	04 12       	push	r4		
    4ff0:	04 41       	mov	r1,	r4	
    4ff2:	24 53       	incd	r4		
    4ff4:	5f 42 1a 00 	mov.b	&0x001a,r15	
    4ff8:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    4ffc:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    5000:	34 41       	pop	r4		
    5002:	30 41       	ret			

00005004 <TOSH_SEL_UTXD0_IOFUNC>:
    5004:	04 12       	push	r4		
    5006:	04 41       	mov	r1,	r4	
    5008:	24 53       	incd	r4		
    500a:	5f 42 1b 00 	mov.b	&0x001b,r15	
    500e:	7f f0 ef ff 	and.b	#-17,	r15	;#0xffef
    5012:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    5016:	34 41       	pop	r4		
    5018:	30 41       	ret			

0000501a <TOSH_MAKE_GIO1_OUTPUT>:
    501a:	04 12       	push	r4		
    501c:	04 41       	mov	r1,	r4	
    501e:	24 53       	incd	r4		
    5020:	5f 42 2a 00 	mov.b	&0x002a,r15	
    5024:	6f d3       	bis.b	#2,	r15	;r3 As==10
    5026:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    502a:	34 41       	pop	r4		
    502c:	30 41       	ret			

0000502e <TOSH_SEL_GIO1_IOFUNC>:
    502e:	04 12       	push	r4		
    5030:	04 41       	mov	r1,	r4	
    5032:	24 53       	incd	r4		
    5034:	5f 42 2e 00 	mov.b	&0x002e,r15	
    5038:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    503c:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    5040:	34 41       	pop	r4		
    5042:	30 41       	ret			

00005044 <TOSH_CLR_GIO0_PIN>:
    5044:	04 12       	push	r4		
    5046:	04 41       	mov	r1,	r4	
    5048:	24 53       	incd	r4		
    504a:	5f 42 29 00 	mov.b	&0x0029,r15	
    504e:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    5052:	c2 4f 29 00 	mov.b	r15,	&0x0029	
    5056:	34 41       	pop	r4		
    5058:	30 41       	ret			

0000505a <TOSH_MAKE_GIO0_OUTPUT>:
    505a:	04 12       	push	r4		
    505c:	04 41       	mov	r1,	r4	
    505e:	24 53       	incd	r4		
    5060:	5f 42 2a 00 	mov.b	&0x002a,r15	
    5064:	5f d3       	bis.b	#1,	r15	;r3 As==01
    5066:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    506a:	34 41       	pop	r4		
    506c:	30 41       	ret			

0000506e <TOSH_SEL_GIO0_IOFUNC>:
    506e:	04 12       	push	r4		
    5070:	04 41       	mov	r1,	r4	
    5072:	24 53       	incd	r4		
    5074:	5f 42 2e 00 	mov.b	&0x002e,r15	
    5078:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    507c:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    5080:	34 41       	pop	r4		
    5082:	30 41       	ret			

00005084 <TOSH_CLR_SER0_RTS_PIN>:
    5084:	04 12       	push	r4		
    5086:	04 41       	mov	r1,	r4	
    5088:	24 53       	incd	r4		
    508a:	5f 42 21 00 	mov.b	&0x0021,r15	
    508e:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    5092:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    5096:	34 41       	pop	r4		
    5098:	30 41       	ret			

0000509a <TOSH_MAKE_SER0_RTS_OUTPUT>:
    509a:	04 12       	push	r4		
    509c:	04 41       	mov	r1,	r4	
    509e:	24 53       	incd	r4		
    50a0:	5f 42 22 00 	mov.b	&0x0022,r15	
    50a4:	7f d2       	bis.b	#8,	r15	;r2 As==11
    50a6:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    50aa:	34 41       	pop	r4		
    50ac:	30 41       	ret			

000050ae <TOSH_SEL_SER0_RTS_IOFUNC>:
    50ae:	04 12       	push	r4		
    50b0:	04 41       	mov	r1,	r4	
    50b2:	24 53       	incd	r4		
    50b4:	5f 42 26 00 	mov.b	&0x0026,r15	
    50b8:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    50bc:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    50c0:	34 41       	pop	r4		
    50c2:	30 41       	ret			

000050c4 <TOSH_MAKE_SER0_CTS_OUTPUT>:
    50c4:	04 12       	push	r4		
    50c6:	04 41       	mov	r1,	r4	
    50c8:	24 53       	incd	r4		
    50ca:	5f 42 22 00 	mov.b	&0x0022,r15	
    50ce:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    50d2:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    50d6:	34 41       	pop	r4		
    50d8:	30 41       	ret			

000050da <TOSH_SEL_SER0_CTS_IOFUNC>:
    50da:	04 12       	push	r4		
    50dc:	04 41       	mov	r1,	r4	
    50de:	24 53       	incd	r4		
    50e0:	5f 42 26 00 	mov.b	&0x0026,r15	
    50e4:	7f f0 ef ff 	and.b	#-17,	r15	;#0xffef
    50e8:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    50ec:	34 41       	pop	r4		
    50ee:	30 41       	ret			

000050f0 <TOSH_CLR_PWRMUX_SEL_PIN>:
    50f0:	04 12       	push	r4		
    50f2:	04 41       	mov	r1,	r4	
    50f4:	24 53       	incd	r4		
    50f6:	5f 42 1d 00 	mov.b	&0x001d,r15	
    50fa:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    50fe:	c2 4f 1d 00 	mov.b	r15,	&0x001d	
    5102:	34 41       	pop	r4		
    5104:	30 41       	ret			

00005106 <TOSH_MAKE_PWRMUX_SEL_OUTPUT>:
    5106:	04 12       	push	r4		
    5108:	04 41       	mov	r1,	r4	
    510a:	24 53       	incd	r4		
    510c:	5f 42 1e 00 	mov.b	&0x001e,r15	
    5110:	6f d3       	bis.b	#2,	r15	;r3 As==10
    5112:	c2 4f 1e 00 	mov.b	r15,	&0x001e	
    5116:	34 41       	pop	r4		
    5118:	30 41       	ret			

0000511a <TOSH_SEL_PWRMUX_SEL_IOFUNC>:
    511a:	04 12       	push	r4		
    511c:	04 41       	mov	r1,	r4	
    511e:	24 53       	incd	r4		
    5120:	5f 42 1f 00 	mov.b	&0x001f,r15	
    5124:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    5128:	c2 4f 1f 00 	mov.b	r15,	&0x001f	
    512c:	34 41       	pop	r4		
    512e:	30 41       	ret			

00005130 <TOSH_CLR_ACCEL_SLEEP_N_PIN>:
    5130:	04 12       	push	r4		
    5132:	04 41       	mov	r1,	r4	
    5134:	24 53       	incd	r4		
    5136:	5f 42 31 00 	mov.b	&0x0031,r15	
    513a:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    513e:	c2 4f 31 00 	mov.b	r15,	&0x0031	
    5142:	34 41       	pop	r4		
    5144:	30 41       	ret			

00005146 <TOSH_MAKE_ACCEL_SLEEP_N_OUTPUT>:
    5146:	04 12       	push	r4		
    5148:	04 41       	mov	r1,	r4	
    514a:	24 53       	incd	r4		
    514c:	5f 42 32 00 	mov.b	&0x0032,r15	
    5150:	5f d3       	bis.b	#1,	r15	;r3 As==01
    5152:	c2 4f 32 00 	mov.b	r15,	&0x0032	
    5156:	34 41       	pop	r4		
    5158:	30 41       	ret			

0000515a <TOSH_SEL_ACCEL_SLEEP_N_IOFUNC>:
    515a:	04 12       	push	r4		
    515c:	04 41       	mov	r1,	r4	
    515e:	24 53       	incd	r4		
    5160:	5f 42 33 00 	mov.b	&0x0033,r15	
    5164:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    5168:	c2 4f 33 00 	mov.b	r15,	&0x0033	
    516c:	34 41       	pop	r4		
    516e:	30 41       	ret			

00005170 <TOSH_CLR_ACCEL_SEL0_PIN>:
    5170:	04 12       	push	r4		
    5172:	04 41       	mov	r1,	r4	
    5174:	24 53       	incd	r4		
    5176:	5f 42 1d 00 	mov.b	&0x001d,r15	
    517a:	7f f0 ef ff 	and.b	#-17,	r15	;#0xffef
    517e:	c2 4f 1d 00 	mov.b	r15,	&0x001d	
    5182:	34 41       	pop	r4		
    5184:	30 41       	ret			

00005186 <TOSH_MAKE_ACCEL_SEL0_OUTPUT>:
    5186:	04 12       	push	r4		
    5188:	04 41       	mov	r1,	r4	
    518a:	24 53       	incd	r4		
    518c:	5f 42 1e 00 	mov.b	&0x001e,r15	
    5190:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    5194:	c2 4f 1e 00 	mov.b	r15,	&0x001e	
    5198:	34 41       	pop	r4		
    519a:	30 41       	ret			

0000519c <TOSH_SEL_ACCEL_SEL0_IOFUNC>:
    519c:	04 12       	push	r4		
    519e:	04 41       	mov	r1,	r4	
    51a0:	24 53       	incd	r4		
    51a2:	5f 42 1f 00 	mov.b	&0x001f,r15	
    51a6:	7f f0 ef ff 	and.b	#-17,	r15	;#0xffef
    51aa:	c2 4f 1f 00 	mov.b	r15,	&0x001f	
    51ae:	34 41       	pop	r4		
    51b0:	30 41       	ret			

000051b2 <TOSH_SET_ONEWIRE_PIN>:
    51b2:	04 12       	push	r4		
    51b4:	04 41       	mov	r1,	r4	
    51b6:	24 53       	incd	r4		
    51b8:	5f 42 1d 00 	mov.b	&0x001d,r15	
    51bc:	7f d0 80 ff 	bis.b	#-128,	r15	;#0xff80
    51c0:	c2 4f 1d 00 	mov.b	r15,	&0x001d	
    51c4:	34 41       	pop	r4		
    51c6:	30 41       	ret			

000051c8 <TOSH_MAKE_ONEWIRE_OUTPUT>:
    51c8:	04 12       	push	r4		
    51ca:	04 41       	mov	r1,	r4	
    51cc:	24 53       	incd	r4		
    51ce:	5f 42 1e 00 	mov.b	&0x001e,r15	
    51d2:	7f d0 80 ff 	bis.b	#-128,	r15	;#0xff80
    51d6:	c2 4f 1e 00 	mov.b	r15,	&0x001e	
    51da:	34 41       	pop	r4		
    51dc:	30 41       	ret			

000051de <TOSH_SEL_ONEWIRE_IOFUNC>:
    51de:	04 12       	push	r4		
    51e0:	04 41       	mov	r1,	r4	
    51e2:	24 53       	incd	r4		
    51e4:	5f 42 1f 00 	mov.b	&0x001f,r15	
    51e8:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    51ec:	c2 4f 1f 00 	mov.b	r15,	&0x001f	
    51f0:	34 41       	pop	r4		
    51f2:	30 41       	ret			

000051f4 <TOSH_MAKE_ROSC_INPUT>:
    51f4:	04 12       	push	r4		
    51f6:	04 41       	mov	r1,	r4	
    51f8:	24 53       	incd	r4		
    51fa:	5f 42 2a 00 	mov.b	&0x002a,r15	
    51fe:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    5202:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    5206:	34 41       	pop	r4		
    5208:	30 41       	ret			

0000520a <TOSH_SEL_ROSC_IOFUNC>:
    520a:	04 12       	push	r4		
    520c:	04 41       	mov	r1,	r4	
    520e:	24 53       	incd	r4		
    5210:	5f 42 2e 00 	mov.b	&0x002e,r15	
    5214:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    5218:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    521c:	34 41       	pop	r4		
    521e:	30 41       	ret			

00005220 <TOSH_MAKE_ADC_ACCELX_INPUT>:
    5220:	04 12       	push	r4		
    5222:	04 41       	mov	r1,	r4	
    5224:	24 53       	incd	r4		
    5226:	5f 42 36 00 	mov.b	&0x0036,r15	
    522a:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    522e:	c2 4f 36 00 	mov.b	r15,	&0x0036	
    5232:	34 41       	pop	r4		
    5234:	30 41       	ret			

00005236 <TOSH_SEL_ADC_ACCELX_IOFUNC>:
    5236:	04 12       	push	r4		
    5238:	04 41       	mov	r1,	r4	
    523a:	24 53       	incd	r4		
    523c:	5f 42 37 00 	mov.b	&0x0037,r15	
    5240:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    5244:	c2 4f 37 00 	mov.b	r15,	&0x0037	
    5248:	34 41       	pop	r4		
    524a:	30 41       	ret			

0000524c <TOSH_MAKE_ADC_ACCELY_INPUT>:
    524c:	04 12       	push	r4		
    524e:	04 41       	mov	r1,	r4	
    5250:	24 53       	incd	r4		
    5252:	5f 42 36 00 	mov.b	&0x0036,r15	
    5256:	7f f0 ef ff 	and.b	#-17,	r15	;#0xffef
    525a:	c2 4f 36 00 	mov.b	r15,	&0x0036	
    525e:	34 41       	pop	r4		
    5260:	30 41       	ret			

00005262 <TOSH_SEL_ADC_ACCELY_IOFUNC>:
    5262:	04 12       	push	r4		
    5264:	04 41       	mov	r1,	r4	
    5266:	24 53       	incd	r4		
    5268:	5f 42 37 00 	mov.b	&0x0037,r15	
    526c:	7f f0 ef ff 	and.b	#-17,	r15	;#0xffef
    5270:	c2 4f 37 00 	mov.b	r15,	&0x0037	
    5274:	34 41       	pop	r4		
    5276:	30 41       	ret			

00005278 <TOSH_MAKE_ADC_ACCELZ_INPUT>:
    5278:	04 12       	push	r4		
    527a:	04 41       	mov	r1,	r4	
    527c:	24 53       	incd	r4		
    527e:	5f 42 36 00 	mov.b	&0x0036,r15	
    5282:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    5286:	c2 4f 36 00 	mov.b	r15,	&0x0036	
    528a:	34 41       	pop	r4		
    528c:	30 41       	ret			

0000528e <TOSH_SEL_ADC_ACCELZ_IOFUNC>:
    528e:	04 12       	push	r4		
    5290:	04 41       	mov	r1,	r4	
    5292:	24 53       	incd	r4		
    5294:	5f 42 37 00 	mov.b	&0x0037,r15	
    5298:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    529c:	c2 4f 37 00 	mov.b	r15,	&0x0037	
    52a0:	34 41       	pop	r4		
    52a2:	30 41       	ret			

000052a4 <TOSH_MAKE_ADC_7_OUTPUT>:
    52a4:	04 12       	push	r4		
    52a6:	04 41       	mov	r1,	r4	
    52a8:	24 53       	incd	r4		
    52aa:	5f 42 36 00 	mov.b	&0x0036,r15	
    52ae:	7f d0 80 ff 	bis.b	#-128,	r15	;#0xff80
    52b2:	c2 4f 36 00 	mov.b	r15,	&0x0036	
    52b6:	34 41       	pop	r4		
    52b8:	30 41       	ret			

000052ba <TOSH_SEL_ADC_7_IOFUNC>:
    52ba:	04 12       	push	r4		
    52bc:	04 41       	mov	r1,	r4	
    52be:	24 53       	incd	r4		
    52c0:	5f 42 37 00 	mov.b	&0x0037,r15	
    52c4:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    52c8:	c2 4f 37 00 	mov.b	r15,	&0x0037	
    52cc:	34 41       	pop	r4		
    52ce:	30 41       	ret			

000052d0 <TOSH_MAKE_ADC_6_OUTPUT>:
    52d0:	04 12       	push	r4		
    52d2:	04 41       	mov	r1,	r4	
    52d4:	24 53       	incd	r4		
    52d6:	5f 42 36 00 	mov.b	&0x0036,r15	
    52da:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    52de:	c2 4f 36 00 	mov.b	r15,	&0x0036	
    52e2:	34 41       	pop	r4		
    52e4:	30 41       	ret			

000052e6 <TOSH_SEL_ADC_6_IOFUNC>:
    52e6:	04 12       	push	r4		
    52e8:	04 41       	mov	r1,	r4	
    52ea:	24 53       	incd	r4		
    52ec:	5f 42 37 00 	mov.b	&0x0037,r15	
    52f0:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    52f4:	c2 4f 37 00 	mov.b	r15,	&0x0037	
    52f8:	34 41       	pop	r4		
    52fa:	30 41       	ret			

000052fc <TOSH_MAKE_ADC_2_OUTPUT>:
    52fc:	04 12       	push	r4		
    52fe:	04 41       	mov	r1,	r4	
    5300:	24 53       	incd	r4		
    5302:	5f 42 36 00 	mov.b	&0x0036,r15	
    5306:	6f d2       	bis.b	#4,	r15	;r2 As==10
    5308:	c2 4f 36 00 	mov.b	r15,	&0x0036	
    530c:	34 41       	pop	r4		
    530e:	30 41       	ret			

00005310 <TOSH_SEL_ADC_2_IOFUNC>:
    5310:	04 12       	push	r4		
    5312:	04 41       	mov	r1,	r4	
    5314:	24 53       	incd	r4		
    5316:	5f 42 37 00 	mov.b	&0x0037,r15	
    531a:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    531e:	c2 4f 37 00 	mov.b	r15,	&0x0037	
    5322:	34 41       	pop	r4		
    5324:	30 41       	ret			

00005326 <TOSH_MAKE_ADC_1_OUTPUT>:
    5326:	04 12       	push	r4		
    5328:	04 41       	mov	r1,	r4	
    532a:	24 53       	incd	r4		
    532c:	5f 42 36 00 	mov.b	&0x0036,r15	
    5330:	6f d3       	bis.b	#2,	r15	;r3 As==10
    5332:	c2 4f 36 00 	mov.b	r15,	&0x0036	
    5336:	34 41       	pop	r4		
    5338:	30 41       	ret			

0000533a <TOSH_SEL_ADC_1_IOFUNC>:
    533a:	04 12       	push	r4		
    533c:	04 41       	mov	r1,	r4	
    533e:	24 53       	incd	r4		
    5340:	5f 42 37 00 	mov.b	&0x0037,r15	
    5344:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    5348:	c2 4f 37 00 	mov.b	r15,	&0x0037	
    534c:	34 41       	pop	r4		
    534e:	30 41       	ret			

00005350 <TOSH_MAKE_ADC_0_OUTPUT>:
    5350:	04 12       	push	r4		
    5352:	04 41       	mov	r1,	r4	
    5354:	24 53       	incd	r4		
    5356:	5f 42 36 00 	mov.b	&0x0036,r15	
    535a:	5f d3       	bis.b	#1,	r15	;r3 As==01
    535c:	c2 4f 36 00 	mov.b	r15,	&0x0036	
    5360:	34 41       	pop	r4		
    5362:	30 41       	ret			

00005364 <TOSH_SEL_ADC_0_IOFUNC>:
    5364:	04 12       	push	r4		
    5366:	04 41       	mov	r1,	r4	
    5368:	24 53       	incd	r4		
    536a:	5f 42 37 00 	mov.b	&0x0037,r15	
    536e:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    5372:	c2 4f 37 00 	mov.b	r15,	&0x0037	
    5376:	34 41       	pop	r4		
    5378:	30 41       	ret			

0000537a <TOSH_SEL_PROG_OUT_IOFUNC>:
    537a:	04 12       	push	r4		
    537c:	04 41       	mov	r1,	r4	
    537e:	24 53       	incd	r4		
    5380:	5f 42 26 00 	mov.b	&0x0026,r15	
    5384:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    5388:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    538c:	34 41       	pop	r4		
    538e:	30 41       	ret			

00005390 <TOSH_SEL_PROG_IN_IOFUNC>:
    5390:	04 12       	push	r4		
    5392:	04 41       	mov	r1,	r4	
    5394:	24 53       	incd	r4		
    5396:	5f 42 2e 00 	mov.b	&0x002e,r15	
    539a:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    539e:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    53a2:	34 41       	pop	r4		
    53a4:	30 41       	ret			

000053a6 <TOSH_SET_PROG_OUT_PIN>:
    53a6:	04 12       	push	r4		
    53a8:	04 41       	mov	r1,	r4	
    53aa:	24 53       	incd	r4		
    53ac:	5f 42 21 00 	mov.b	&0x0021,r15	
    53b0:	6f d3       	bis.b	#2,	r15	;r3 As==10
    53b2:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    53b6:	34 41       	pop	r4		
    53b8:	30 41       	ret			

000053ba <TOSH_MAKE_PROG_OUT_OUTPUT>:
    53ba:	04 12       	push	r4		
    53bc:	04 41       	mov	r1,	r4	
    53be:	24 53       	incd	r4		
    53c0:	5f 42 22 00 	mov.b	&0x0022,r15	
    53c4:	6f d3       	bis.b	#2,	r15	;r3 As==10
    53c6:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    53ca:	34 41       	pop	r4		
    53cc:	30 41       	ret			

000053ce <TOSH_MAKE_PROG_IN_OUTPUT>:
    53ce:	04 12       	push	r4		
    53d0:	04 41       	mov	r1,	r4	
    53d2:	24 53       	incd	r4		
    53d4:	5f 42 2a 00 	mov.b	&0x002a,r15	
    53d8:	6f d2       	bis.b	#4,	r15	;r2 As==10
    53da:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    53de:	34 41       	pop	r4		
    53e0:	30 41       	ret			

000053e2 <TOSH_SEL_BT_RXD_IOFUNC>:
    53e2:	04 12       	push	r4		
    53e4:	04 41       	mov	r1,	r4	
    53e6:	24 53       	incd	r4		
    53e8:	5f 42 1b 00 	mov.b	&0x001b,r15	
    53ec:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    53f0:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    53f4:	34 41       	pop	r4		
    53f6:	30 41       	ret			

000053f8 <TOSH_MAKE_BT_RXD_INPUT>:
    53f8:	04 12       	push	r4		
    53fa:	04 41       	mov	r1,	r4	
    53fc:	24 53       	incd	r4		
    53fe:	5f 42 1a 00 	mov.b	&0x001a,r15	
    5402:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    5406:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    540a:	34 41       	pop	r4		
    540c:	30 41       	ret			

0000540e <TOSH_SEL_BT_TXD_IOFUNC>:
    540e:	04 12       	push	r4		
    5410:	04 41       	mov	r1,	r4	
    5412:	24 53       	incd	r4		
    5414:	5f 42 1b 00 	mov.b	&0x001b,r15	
    5418:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    541c:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    5420:	34 41       	pop	r4		
    5422:	30 41       	ret			

00005424 <TOSH_MAKE_BT_TXD_OUTPUT>:
    5424:	04 12       	push	r4		
    5426:	04 41       	mov	r1,	r4	
    5428:	24 53       	incd	r4		
    542a:	5f 42 1a 00 	mov.b	&0x001a,r15	
    542e:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    5432:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    5436:	34 41       	pop	r4		
    5438:	30 41       	ret			

0000543a <TOSH_SEL_BT_CTS_IOFUNC>:
    543a:	04 12       	push	r4		
    543c:	04 41       	mov	r1,	r4	
    543e:	24 53       	incd	r4		
    5440:	5f 42 26 00 	mov.b	&0x0026,r15	
    5444:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    5448:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    544c:	34 41       	pop	r4		
    544e:	30 41       	ret			

00005450 <TOSH_MAKE_BT_CTS_OUTPUT>:
    5450:	04 12       	push	r4		
    5452:	04 41       	mov	r1,	r4	
    5454:	24 53       	incd	r4		
    5456:	5f 42 22 00 	mov.b	&0x0022,r15	
    545a:	7f d0 80 ff 	bis.b	#-128,	r15	;#0xff80
    545e:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    5462:	34 41       	pop	r4		
    5464:	30 41       	ret			

00005466 <TOSH_SEL_BT_PIO_IOFUNC>:
    5466:	04 12       	push	r4		
    5468:	04 41       	mov	r1,	r4	
    546a:	24 53       	incd	r4		
    546c:	5f 42 2e 00 	mov.b	&0x002e,r15	
    5470:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    5474:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    5478:	34 41       	pop	r4		
    547a:	30 41       	ret			

0000547c <TOSH_MAKE_BT_PIO_INPUT>:
    547c:	04 12       	push	r4		
    547e:	04 41       	mov	r1,	r4	
    5480:	24 53       	incd	r4		
    5482:	5f 42 2a 00 	mov.b	&0x002a,r15	
    5486:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    548a:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    548e:	34 41       	pop	r4		
    5490:	30 41       	ret			

00005492 <TOSH_SEL_BT_RTS_IOFUNC>:
    5492:	04 12       	push	r4		
    5494:	04 41       	mov	r1,	r4	
    5496:	24 53       	incd	r4		
    5498:	5f 42 26 00 	mov.b	&0x0026,r15	
    549c:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    54a0:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    54a4:	34 41       	pop	r4		
    54a6:	30 41       	ret			

000054a8 <TOSH_MAKE_BT_RTS_INPUT>:
    54a8:	04 12       	push	r4		
    54aa:	04 41       	mov	r1,	r4	
    54ac:	24 53       	incd	r4		
    54ae:	5f 42 22 00 	mov.b	&0x0022,r15	
    54b2:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    54b6:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    54ba:	34 41       	pop	r4		
    54bc:	30 41       	ret			

000054be <TOSH_CLR_BT_RESET_PIN>:
    54be:	04 12       	push	r4		
    54c0:	04 41       	mov	r1,	r4	
    54c2:	24 53       	incd	r4		
    54c4:	5f 42 31 00 	mov.b	&0x0031,r15	
    54c8:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    54cc:	c2 4f 31 00 	mov.b	r15,	&0x0031	
    54d0:	34 41       	pop	r4		
    54d2:	30 41       	ret			

000054d4 <TOSH_SEL_BT_RESET_IOFUNC>:
    54d4:	04 12       	push	r4		
    54d6:	04 41       	mov	r1,	r4	
    54d8:	24 53       	incd	r4		
    54da:	5f 42 33 00 	mov.b	&0x0033,r15	
    54de:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    54e2:	c2 4f 33 00 	mov.b	r15,	&0x0033	
    54e6:	34 41       	pop	r4		
    54e8:	30 41       	ret			

000054ea <TOSH_MAKE_BT_RESET_OUTPUT>:
    54ea:	04 12       	push	r4		
    54ec:	04 41       	mov	r1,	r4	
    54ee:	24 53       	incd	r4		
    54f0:	5f 42 32 00 	mov.b	&0x0032,r15	
    54f4:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    54f8:	c2 4f 32 00 	mov.b	r15,	&0x0032	
    54fc:	34 41       	pop	r4		
    54fe:	30 41       	ret			

00005500 <TOSH_MAKE_TILT_INPUT>:
    5500:	04 12       	push	r4		
    5502:	04 41       	mov	r1,	r4	
    5504:	24 53       	incd	r4		
    5506:	5f 42 2a 00 	mov.b	&0x002a,r15	
    550a:	7f f0 ef ff 	and.b	#-17,	r15	;#0xffef
    550e:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    5512:	34 41       	pop	r4		
    5514:	30 41       	ret			

00005516 <TOSH_SEL_TILT_IOFUNC>:
    5516:	04 12       	push	r4		
    5518:	04 41       	mov	r1,	r4	
    551a:	24 53       	incd	r4		
    551c:	5f 42 2e 00 	mov.b	&0x002e,r15	
    5520:	7f f0 ef ff 	and.b	#-17,	r15	;#0xffef
    5524:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    5528:	34 41       	pop	r4		
    552a:	30 41       	ret			

0000552c <TOSH_MAKE_RADIO_SFD_INPUT>:
    552c:	04 12       	push	r4		
    552e:	04 41       	mov	r1,	r4	
    5530:	24 53       	incd	r4		
    5532:	5f 42 22 00 	mov.b	&0x0022,r15	
    5536:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    553a:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    553e:	34 41       	pop	r4		
    5540:	30 41       	ret			

00005542 <TOSH_SEL_RADIO_SFD_IOFUNC>:
    5542:	04 12       	push	r4		
    5544:	04 41       	mov	r1,	r4	
    5546:	24 53       	incd	r4		
    5548:	5f 42 26 00 	mov.b	&0x0026,r15	
    554c:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    5550:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    5554:	34 41       	pop	r4		
    5556:	30 41       	ret			

00005558 <TOSH_MAKE_RADIO_FIFOP_INPUT>:
    5558:	04 12       	push	r4		
    555a:	04 41       	mov	r1,	r4	
    555c:	24 53       	incd	r4		
    555e:	5f 42 22 00 	mov.b	&0x0022,r15	
    5562:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    5566:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    556a:	34 41       	pop	r4		
    556c:	30 41       	ret			

0000556e <TOSH_SEL_RADIO_FIFOP_IOFUNC>:
    556e:	04 12       	push	r4		
    5570:	04 41       	mov	r1,	r4	
    5572:	24 53       	incd	r4		
    5574:	5f 42 26 00 	mov.b	&0x0026,r15	
    5578:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    557c:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    5580:	34 41       	pop	r4		
    5582:	30 41       	ret			

00005584 <TOSH_MAKE_RADIO_FIFO_INPUT>:
    5584:	04 12       	push	r4		
    5586:	04 41       	mov	r1,	r4	
    5588:	24 53       	incd	r4		
    558a:	5f 42 22 00 	mov.b	&0x0022,r15	
    558e:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    5592:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    5596:	34 41       	pop	r4		
    5598:	30 41       	ret			

0000559a <TOSH_SEL_RADIO_FIFO_IOFUNC>:
    559a:	04 12       	push	r4		
    559c:	04 41       	mov	r1,	r4	
    559e:	24 53       	incd	r4		
    55a0:	5f 42 26 00 	mov.b	&0x0026,r15	
    55a4:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    55a8:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    55ac:	34 41       	pop	r4		
    55ae:	30 41       	ret			

000055b0 <TOSH_MAKE_RADIO_CCA_INPUT>:
    55b0:	04 12       	push	r4		
    55b2:	04 41       	mov	r1,	r4	
    55b4:	24 53       	incd	r4		
    55b6:	5f 42 2a 00 	mov.b	&0x002a,r15	
    55ba:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    55be:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    55c2:	34 41       	pop	r4		
    55c4:	30 41       	ret			

000055c6 <TOSH_SEL_RADIO_CCA_IOFUNC>:
    55c6:	04 12       	push	r4		
    55c8:	04 41       	mov	r1,	r4	
    55ca:	24 53       	incd	r4		
    55cc:	5f 42 2e 00 	mov.b	&0x002e,r15	
    55d0:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    55d4:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    55d8:	34 41       	pop	r4		
    55da:	30 41       	ret			

000055dc <TOSH_CLR_RADIO_RESET_PIN>:
    55dc:	04 12       	push	r4		
    55de:	04 41       	mov	r1,	r4	
    55e0:	24 53       	incd	r4		
    55e2:	5f 42 31 00 	mov.b	&0x0031,r15	
    55e6:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    55ea:	c2 4f 31 00 	mov.b	r15,	&0x0031	
    55ee:	34 41       	pop	r4		
    55f0:	30 41       	ret			

000055f2 <TOSH_SEL_RADIO_RESET_IOFUNC>:
    55f2:	04 12       	push	r4		
    55f4:	04 41       	mov	r1,	r4	
    55f6:	24 53       	incd	r4		
    55f8:	5f 42 33 00 	mov.b	&0x0033,r15	
    55fc:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    5600:	c2 4f 33 00 	mov.b	r15,	&0x0033	
    5604:	34 41       	pop	r4		
    5606:	30 41       	ret			

00005608 <TOSH_MAKE_RADIO_RESET_OUTPUT>:
    5608:	04 12       	push	r4		
    560a:	04 41       	mov	r1,	r4	
    560c:	24 53       	incd	r4		
    560e:	5f 42 32 00 	mov.b	&0x0032,r15	
    5612:	7f d0 80 ff 	bis.b	#-128,	r15	;#0xff80
    5616:	c2 4f 32 00 	mov.b	r15,	&0x0032	
    561a:	34 41       	pop	r4		
    561c:	30 41       	ret			

0000561e <TOSH_SET_RADIO_CSN_PIN>:
    561e:	04 12       	push	r4		
    5620:	04 41       	mov	r1,	r4	
    5622:	24 53       	incd	r4		
    5624:	5f 42 31 00 	mov.b	&0x0031,r15	
    5628:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    562c:	c2 4f 31 00 	mov.b	r15,	&0x0031	
    5630:	34 41       	pop	r4		
    5632:	30 41       	ret			

00005634 <TOSH_SEL_RADIO_CSN_IOFUNC>:
    5634:	04 12       	push	r4		
    5636:	04 41       	mov	r1,	r4	
    5638:	24 53       	incd	r4		
    563a:	5f 42 33 00 	mov.b	&0x0033,r15	
    563e:	7f f0 ef ff 	and.b	#-17,	r15	;#0xffef
    5642:	c2 4f 33 00 	mov.b	r15,	&0x0033	
    5646:	34 41       	pop	r4		
    5648:	30 41       	ret			

0000564a <TOSH_MAKE_RADIO_CSN_OUTPUT>:
    564a:	04 12       	push	r4		
    564c:	04 41       	mov	r1,	r4	
    564e:	24 53       	incd	r4		
    5650:	5f 42 32 00 	mov.b	&0x0032,r15	
    5654:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    5658:	c2 4f 32 00 	mov.b	r15,	&0x0032	
    565c:	34 41       	pop	r4		
    565e:	30 41       	ret			

00005660 <TOSH_CLR_RADIO_VREF_PIN>:
    5660:	04 12       	push	r4		
    5662:	04 41       	mov	r1,	r4	
    5664:	24 53       	incd	r4		
    5666:	5f 42 31 00 	mov.b	&0x0031,r15	
    566a:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    566e:	c2 4f 31 00 	mov.b	r15,	&0x0031	
    5672:	34 41       	pop	r4		
    5674:	30 41       	ret			

00005676 <TOSH_SEL_RADIO_VREF_IOFUNC>:
    5676:	04 12       	push	r4		
    5678:	04 41       	mov	r1,	r4	
    567a:	24 53       	incd	r4		
    567c:	5f 42 33 00 	mov.b	&0x0033,r15	
    5680:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    5684:	c2 4f 33 00 	mov.b	r15,	&0x0033	
    5688:	34 41       	pop	r4		
    568a:	30 41       	ret			

0000568c <TOSH_MAKE_RADIO_VREF_OUTPUT>:
    568c:	04 12       	push	r4		
    568e:	04 41       	mov	r1,	r4	
    5690:	24 53       	incd	r4		
    5692:	5f 42 32 00 	mov.b	&0x0032,r15	
    5696:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    569a:	c2 4f 32 00 	mov.b	r15,	&0x0032	
    569e:	34 41       	pop	r4		
    56a0:	30 41       	ret			

000056a2 <TOSH_SET_GREEN_LED_PIN>:
    56a2:	04 12       	push	r4		
    56a4:	04 41       	mov	r1,	r4	
    56a6:	24 53       	incd	r4		
    56a8:	5f 42 1d 00 	mov.b	&0x001d,r15	
    56ac:	7f d2       	bis.b	#8,	r15	;r2 As==11
    56ae:	c2 4f 1d 00 	mov.b	r15,	&0x001d	
    56b2:	34 41       	pop	r4		
    56b4:	30 41       	ret			

000056b6 <TOSH_SET_YELLOW_LED_PIN>:
    56b6:	04 12       	push	r4		
    56b8:	04 41       	mov	r1,	r4	
    56ba:	24 53       	incd	r4		
    56bc:	5f 42 1d 00 	mov.b	&0x001d,r15	
    56c0:	6f d2       	bis.b	#4,	r15	;r2 As==10
    56c2:	c2 4f 1d 00 	mov.b	r15,	&0x001d	
    56c6:	34 41       	pop	r4		
    56c8:	30 41       	ret			

000056ca <TOSH_SET_RED_LED_PIN>:
    56ca:	04 12       	push	r4		
    56cc:	04 41       	mov	r1,	r4	
    56ce:	24 53       	incd	r4		
    56d0:	5f 42 1d 00 	mov.b	&0x001d,r15	
    56d4:	5f d3       	bis.b	#1,	r15	;r3 As==01
    56d6:	c2 4f 1d 00 	mov.b	r15,	&0x001d	
    56da:	34 41       	pop	r4		
    56dc:	30 41       	ret			

000056de <TOSH_MAKE_GREEN_LED_OUTPUT>:
    56de:	04 12       	push	r4		
    56e0:	04 41       	mov	r1,	r4	
    56e2:	24 53       	incd	r4		
    56e4:	5f 42 1e 00 	mov.b	&0x001e,r15	
    56e8:	7f d2       	bis.b	#8,	r15	;r2 As==11
    56ea:	c2 4f 1e 00 	mov.b	r15,	&0x001e	
    56ee:	34 41       	pop	r4		
    56f0:	30 41       	ret			

000056f2 <TOSH_SEL_GREEN_LED_IOFUNC>:
    56f2:	04 12       	push	r4		
    56f4:	04 41       	mov	r1,	r4	
    56f6:	24 53       	incd	r4		
    56f8:	5f 42 1f 00 	mov.b	&0x001f,r15	
    56fc:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    5700:	c2 4f 1f 00 	mov.b	r15,	&0x001f	
    5704:	34 41       	pop	r4		
    5706:	30 41       	ret			

00005708 <TOSH_MAKE_YELLOW_LED_OUTPUT>:
    5708:	04 12       	push	r4		
    570a:	04 41       	mov	r1,	r4	
    570c:	24 53       	incd	r4		
    570e:	5f 42 1e 00 	mov.b	&0x001e,r15	
    5712:	6f d2       	bis.b	#4,	r15	;r2 As==10
    5714:	c2 4f 1e 00 	mov.b	r15,	&0x001e	
    5718:	34 41       	pop	r4		
    571a:	30 41       	ret			

0000571c <TOSH_SEL_YELLOW_LED_IOFUNC>:
    571c:	04 12       	push	r4		
    571e:	04 41       	mov	r1,	r4	
    5720:	24 53       	incd	r4		
    5722:	5f 42 1f 00 	mov.b	&0x001f,r15	
    5726:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    572a:	c2 4f 1f 00 	mov.b	r15,	&0x001f	
    572e:	34 41       	pop	r4		
    5730:	30 41       	ret			

00005732 <TOSH_MAKE_RED_LED_OUTPUT>:
    5732:	04 12       	push	r4		
    5734:	04 41       	mov	r1,	r4	
    5736:	24 53       	incd	r4		
    5738:	5f 42 1e 00 	mov.b	&0x001e,r15	
    573c:	5f d3       	bis.b	#1,	r15	;r3 As==01
    573e:	c2 4f 1e 00 	mov.b	r15,	&0x001e	
    5742:	34 41       	pop	r4		
    5744:	30 41       	ret			

00005746 <TOSH_SEL_RED_LED_IOFUNC>:
    5746:	04 12       	push	r4		
    5748:	04 41       	mov	r1,	r4	
    574a:	24 53       	incd	r4		
    574c:	5f 42 1f 00 	mov.b	&0x001f,r15	
    5750:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    5754:	c2 4f 1f 00 	mov.b	r15,	&0x001f	
    5758:	34 41       	pop	r4		
    575a:	30 41       	ret			

0000575c <TOSH_SET_SW_BT_PWR_N_PIN>:
    575c:	04 12       	push	r4		
    575e:	04 41       	mov	r1,	r4	
    5760:	24 53       	incd	r4		
    5762:	5f 42 1d 00 	mov.b	&0x001d,r15	
    5766:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    576a:	c2 4f 1d 00 	mov.b	r15,	&0x001d	
    576e:	34 41       	pop	r4		
    5770:	30 41       	ret			

00005772 <TOSH_MAKE_SW_BT_PWR_N_OUTPUT>:
    5772:	04 12       	push	r4		
    5774:	04 41       	mov	r1,	r4	
    5776:	24 53       	incd	r4		
    5778:	5f 42 1e 00 	mov.b	&0x001e,r15	
    577c:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    5780:	c2 4f 1e 00 	mov.b	r15,	&0x001e	
    5784:	34 41       	pop	r4		
    5786:	30 41       	ret			

00005788 <TOSH_SEL_SW_BT_PWR_N_IOFUNC>:
    5788:	04 12       	push	r4		
    578a:	04 41       	mov	r1,	r4	
    578c:	24 53       	incd	r4		
    578e:	5f 42 1f 00 	mov.b	&0x001f,r15	
    5792:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    5796:	c2 4f 1f 00 	mov.b	r15,	&0x001f	
    579a:	34 41       	pop	r4		
    579c:	30 41       	ret			

0000579e <TOSH_CLR_SD_CLK_PIN>:
    579e:	04 12       	push	r4		
    57a0:	04 41       	mov	r1,	r4	
    57a2:	24 53       	incd	r4		
    57a4:	5f 42 19 00 	mov.b	&0x0019,r15	
    57a8:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    57ac:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    57b0:	34 41       	pop	r4		
    57b2:	30 41       	ret			

000057b4 <TOSH_CLR_SD_DI_PIN>:
    57b4:	04 12       	push	r4		
    57b6:	04 41       	mov	r1,	r4	
    57b8:	24 53       	incd	r4		
    57ba:	5f 42 19 00 	mov.b	&0x0019,r15	
    57be:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    57c2:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    57c6:	34 41       	pop	r4		
    57c8:	30 41       	ret			

000057ca <TOSH_CLR_SD_CS_N_PIN>:
    57ca:	04 12       	push	r4		
    57cc:	04 41       	mov	r1,	r4	
    57ce:	24 53       	incd	r4		
    57d0:	5f 42 19 00 	mov.b	&0x0019,r15	
    57d4:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    57d8:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    57dc:	34 41       	pop	r4		
    57de:	30 41       	ret			

000057e0 <TOSH_SET_SW_SD_PWR_N_PIN>:
    57e0:	04 12       	push	r4		
    57e2:	04 41       	mov	r1,	r4	
    57e4:	24 53       	incd	r4		
    57e6:	5f 42 1d 00 	mov.b	&0x001d,r15	
    57ea:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    57ee:	c2 4f 1d 00 	mov.b	r15,	&0x001d	
    57f2:	34 41       	pop	r4		
    57f4:	30 41       	ret			

000057f6 <TOSH_MAKE_SD_DI_OUTPUT>:
    57f6:	04 12       	push	r4		
    57f8:	04 41       	mov	r1,	r4	
    57fa:	24 53       	incd	r4		
    57fc:	5f 42 1a 00 	mov.b	&0x001a,r15	
    5800:	6f d3       	bis.b	#2,	r15	;r3 As==10
    5802:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    5806:	34 41       	pop	r4		
    5808:	30 41       	ret			

0000580a <TOSH_SEL_SD_DI_IOFUNC>:
    580a:	04 12       	push	r4		
    580c:	04 41       	mov	r1,	r4	
    580e:	24 53       	incd	r4		
    5810:	5f 42 1b 00 	mov.b	&0x001b,r15	
    5814:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    5818:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    581c:	34 41       	pop	r4		
    581e:	30 41       	ret			

00005820 <TOSH_MAKE_SD_DO_INPUT>:
    5820:	04 12       	push	r4		
    5822:	04 41       	mov	r1,	r4	
    5824:	24 53       	incd	r4		
    5826:	5f 42 1a 00 	mov.b	&0x001a,r15	
    582a:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    582e:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    5832:	34 41       	pop	r4		
    5834:	30 41       	ret			

00005836 <TOSH_SEL_SD_DO_IOFUNC>:
    5836:	04 12       	push	r4		
    5838:	04 41       	mov	r1,	r4	
    583a:	24 53       	incd	r4		
    583c:	5f 42 1b 00 	mov.b	&0x001b,r15	
    5840:	7f f0 fb ff 	and.b	#-5,	r15	;#0xfffb
    5844:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    5848:	34 41       	pop	r4		
    584a:	30 41       	ret			

0000584c <TOSH_MAKE_SD_CLK_OUTPUT>:
    584c:	04 12       	push	r4		
    584e:	04 41       	mov	r1,	r4	
    5850:	24 53       	incd	r4		
    5852:	5f 42 1a 00 	mov.b	&0x001a,r15	
    5856:	7f d2       	bis.b	#8,	r15	;r2 As==11
    5858:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    585c:	34 41       	pop	r4		
    585e:	30 41       	ret			

00005860 <TOSH_SEL_SD_CLK_IOFUNC>:
    5860:	04 12       	push	r4		
    5862:	04 41       	mov	r1,	r4	
    5864:	24 53       	incd	r4		
    5866:	5f 42 1b 00 	mov.b	&0x001b,r15	
    586a:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    586e:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    5872:	34 41       	pop	r4		
    5874:	30 41       	ret			

00005876 <TOSH_MAKE_SD_CS_N_OUTPUT>:
    5876:	04 12       	push	r4		
    5878:	04 41       	mov	r1,	r4	
    587a:	24 53       	incd	r4		
    587c:	5f 42 1a 00 	mov.b	&0x001a,r15	
    5880:	5f d3       	bis.b	#1,	r15	;r3 As==01
    5882:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    5886:	34 41       	pop	r4		
    5888:	30 41       	ret			

0000588a <TOSH_SEL_SD_CS_N_IOFUNC>:
    588a:	04 12       	push	r4		
    588c:	04 41       	mov	r1,	r4	
    588e:	24 53       	incd	r4		
    5890:	5f 42 1b 00 	mov.b	&0x001b,r15	
    5894:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    5898:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    589c:	34 41       	pop	r4		
    589e:	30 41       	ret			

000058a0 <TOSH_MAKE_SW_SD_PWR_N_OUTPUT>:
    58a0:	04 12       	push	r4		
    58a2:	04 41       	mov	r1,	r4	
    58a4:	24 53       	incd	r4		
    58a6:	5f 42 1e 00 	mov.b	&0x001e,r15	
    58aa:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    58ae:	c2 4f 1e 00 	mov.b	r15,	&0x001e	
    58b2:	34 41       	pop	r4		
    58b4:	30 41       	ret			

000058b6 <TOSH_SEL_SW_SD_PWR_N_IOFUNC>:
    58b6:	04 12       	push	r4		
    58b8:	04 41       	mov	r1,	r4	
    58ba:	24 53       	incd	r4		
    58bc:	5f 42 1f 00 	mov.b	&0x001f,r15	
    58c0:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    58c4:	c2 4f 1f 00 	mov.b	r15,	&0x001f	
    58c8:	34 41       	pop	r4		
    58ca:	30 41       	ret			

000058cc <TOSH_SET_DOCK_N_PIN>:
    58cc:	04 12       	push	r4		
    58ce:	04 41       	mov	r1,	r4	
    58d0:	24 53       	incd	r4		
    58d2:	5f 42 29 00 	mov.b	&0x0029,r15	
    58d6:	7f d2       	bis.b	#8,	r15	;r2 As==11
    58d8:	c2 4f 29 00 	mov.b	r15,	&0x0029	
    58dc:	34 41       	pop	r4		
    58de:	30 41       	ret			

000058e0 <TOSH_MAKE_DOCK_N_OUTPUT>:
    58e0:	04 12       	push	r4		
    58e2:	04 41       	mov	r1,	r4	
    58e4:	24 53       	incd	r4		
    58e6:	5f 42 2a 00 	mov.b	&0x002a,r15	
    58ea:	7f d2       	bis.b	#8,	r15	;r2 As==11
    58ec:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    58f0:	34 41       	pop	r4		
    58f2:	30 41       	ret			

000058f4 <TOSH_SEL_DOCK_N_IOFUNC>:
    58f4:	04 12       	push	r4		
    58f6:	04 41       	mov	r1,	r4	
    58f8:	24 53       	incd	r4		
    58fa:	5f 42 2e 00 	mov.b	&0x002e,r15	
    58fe:	7f f0 f7 ff 	and.b	#-9,	r15	;#0xfff7
    5902:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    5906:	34 41       	pop	r4		
    5908:	30 41       	ret			

0000590a <MotePlatformC__Init__init>:
    590a:	04 12       	push	r4		
    590c:	04 41       	mov	r1,	r4	
    590e:	24 53       	incd	r4		
    5910:	b0 12 f4 58 	call	#0x58f4	
    5914:	b0 12 e0 58 	call	#0x58e0	
    5918:	b0 12 cc 58 	call	#0x58cc	
    591c:	b0 12 b6 58 	call	#0x58b6	
    5920:	b0 12 a0 58 	call	#0x58a0	
    5924:	b0 12 8a 58 	call	#0x588a	
    5928:	b0 12 76 58 	call	#0x5876	
    592c:	b0 12 60 58 	call	#0x5860	
    5930:	b0 12 4c 58 	call	#0x584c	
    5934:	b0 12 36 58 	call	#0x5836	
    5938:	b0 12 20 58 	call	#0x5820	
    593c:	b0 12 0a 58 	call	#0x580a	
    5940:	b0 12 f6 57 	call	#0x57f6	
    5944:	b0 12 e0 57 	call	#0x57e0	
    5948:	b0 12 ca 57 	call	#0x57ca	
    594c:	b0 12 b4 57 	call	#0x57b4	
    5950:	b0 12 9e 57 	call	#0x579e	
    5954:	b0 12 88 57 	call	#0x5788	
    5958:	b0 12 72 57 	call	#0x5772	
    595c:	b0 12 5c 57 	call	#0x575c	
    5960:	b0 12 46 57 	call	#0x5746	
    5964:	b0 12 32 57 	call	#0x5732	
    5968:	b0 12 1c 57 	call	#0x571c	
    596c:	b0 12 08 57 	call	#0x5708	
    5970:	b0 12 f2 56 	call	#0x56f2	
    5974:	b0 12 de 56 	call	#0x56de	
    5978:	b0 12 ca 56 	call	#0x56ca	
    597c:	b0 12 b6 56 	call	#0x56b6	
    5980:	b0 12 a2 56 	call	#0x56a2	
    5984:	b0 12 8c 56 	call	#0x568c	
    5988:	b0 12 76 56 	call	#0x5676	
    598c:	b0 12 60 56 	call	#0x5660	
    5990:	b0 12 4a 56 	call	#0x564a	
    5994:	b0 12 34 56 	call	#0x5634	
    5998:	b0 12 1e 56 	call	#0x561e	
    599c:	b0 12 08 56 	call	#0x5608	
    59a0:	b0 12 f2 55 	call	#0x55f2	
    59a4:	b0 12 dc 55 	call	#0x55dc	
    59a8:	b0 12 c6 55 	call	#0x55c6	
    59ac:	b0 12 b0 55 	call	#0x55b0	
    59b0:	b0 12 9a 55 	call	#0x559a	
    59b4:	b0 12 84 55 	call	#0x5584	
    59b8:	b0 12 6e 55 	call	#0x556e	
    59bc:	b0 12 58 55 	call	#0x5558	
    59c0:	b0 12 42 55 	call	#0x5542	
    59c4:	b0 12 2c 55 	call	#0x552c	
    59c8:	b0 12 16 55 	call	#0x5516	
    59cc:	b0 12 00 55 	call	#0x5500	
    59d0:	b0 12 ea 54 	call	#0x54ea	
    59d4:	b0 12 d4 54 	call	#0x54d4	
    59d8:	b0 12 be 54 	call	#0x54be	
    59dc:	b0 12 a8 54 	call	#0x54a8	
    59e0:	b0 12 92 54 	call	#0x5492	
    59e4:	b0 12 7c 54 	call	#0x547c	
    59e8:	b0 12 66 54 	call	#0x5466	
    59ec:	b0 12 50 54 	call	#0x5450	
    59f0:	b0 12 3a 54 	call	#0x543a	
    59f4:	b0 12 24 54 	call	#0x5424	
    59f8:	b0 12 0e 54 	call	#0x540e	
    59fc:	b0 12 f8 53 	call	#0x53f8	
    5a00:	b0 12 e2 53 	call	#0x53e2	
    5a04:	b0 12 ce 53 	call	#0x53ce	
    5a08:	b0 12 ba 53 	call	#0x53ba	
    5a0c:	b0 12 a6 53 	call	#0x53a6	
    5a10:	b0 12 90 53 	call	#0x5390	
    5a14:	b0 12 7a 53 	call	#0x537a	
    5a18:	b0 12 64 53 	call	#0x5364	
    5a1c:	b0 12 50 53 	call	#0x5350	
    5a20:	b0 12 3a 53 	call	#0x533a	
    5a24:	b0 12 26 53 	call	#0x5326	
    5a28:	b0 12 10 53 	call	#0x5310	
    5a2c:	b0 12 fc 52 	call	#0x52fc	
    5a30:	b0 12 e6 52 	call	#0x52e6	
    5a34:	b0 12 d0 52 	call	#0x52d0	
    5a38:	b0 12 ba 52 	call	#0x52ba	
    5a3c:	b0 12 a4 52 	call	#0x52a4	
    5a40:	b0 12 8e 52 	call	#0x528e	
    5a44:	b0 12 78 52 	call	#0x5278	
    5a48:	b0 12 62 52 	call	#0x5262	
    5a4c:	b0 12 4c 52 	call	#0x524c	
    5a50:	b0 12 36 52 	call	#0x5236	
    5a54:	b0 12 20 52 	call	#0x5220	
    5a58:	b0 12 0a 52 	call	#0x520a	
    5a5c:	b0 12 f4 51 	call	#0x51f4	
    5a60:	b0 12 de 51 	call	#0x51de	
    5a64:	b0 12 c8 51 	call	#0x51c8	
    5a68:	b0 12 b2 51 	call	#0x51b2	
    5a6c:	b0 12 9c 51 	call	#0x519c	
    5a70:	b0 12 86 51 	call	#0x5186	
    5a74:	b0 12 70 51 	call	#0x5170	
    5a78:	b0 12 5a 51 	call	#0x515a	
    5a7c:	b0 12 46 51 	call	#0x5146	
    5a80:	b0 12 30 51 	call	#0x5130	
    5a84:	b0 12 1a 51 	call	#0x511a	
    5a88:	b0 12 06 51 	call	#0x5106	
    5a8c:	b0 12 f0 50 	call	#0x50f0	
    5a90:	b0 12 da 50 	call	#0x50da	
    5a94:	b0 12 c4 50 	call	#0x50c4	
    5a98:	b0 12 ae 50 	call	#0x50ae	
    5a9c:	b0 12 9a 50 	call	#0x509a	
    5aa0:	b0 12 84 50 	call	#0x5084	
    5aa4:	b0 12 6e 50 	call	#0x506e	
    5aa8:	b0 12 5a 50 	call	#0x505a	
    5aac:	b0 12 44 50 	call	#0x5044	
    5ab0:	b0 12 2e 50 	call	#0x502e	
    5ab4:	b0 12 1a 50 	call	#0x501a	
    5ab8:	b0 12 04 50 	call	#0x5004	
    5abc:	b0 12 ee 4f 	call	#0x4fee	
    5ac0:	b0 12 d8 4f 	call	#0x4fd8	
    5ac4:	b0 12 c2 4f 	call	#0x4fc2	
    5ac8:	b0 12 ac 4f 	call	#0x4fac	
    5acc:	b0 12 96 4f 	call	#0x4f96	
    5ad0:	b0 12 80 4f 	call	#0x4f80	
    5ad4:	b0 12 6a 4f 	call	#0x4f6a	
    5ad8:	b0 12 54 4f 	call	#0x4f54	
    5adc:	b0 12 3e 4f 	call	#0x4f3e	
    5ae0:	b0 12 2a 4f 	call	#0x4f2a	
    5ae4:	b0 12 14 4f 	call	#0x4f14	
    5ae8:	b0 12 00 4f 	call	#0x4f00	
    5aec:	b0 12 ea 4e 	call	#0x4eea	
    5af0:	b0 12 d4 4e 	call	#0x4ed4	
    5af4:	b0 12 c0 4e 	call	#0x4ec0	
    5af8:	b0 12 ac 4e 	call	#0x4eac	
    5afc:	b0 12 98 4e 	call	#0x4e98	
    5b00:	b0 12 84 4e 	call	#0x4e84	
    5b04:	b0 12 70 4e 	call	#0x4e70	
    5b08:	b0 12 5a 4e 	call	#0x4e5a	
    5b0c:	4f 43       	clr.b	r15		
    5b0e:	34 41       	pop	r4		
    5b10:	30 41       	ret			

00005b12 <PlatformP__MoteInit__init>:
    5b12:	04 12       	push	r4		
    5b14:	04 41       	mov	r1,	r4	
    5b16:	24 53       	incd	r4		
    5b18:	21 83       	decd	r1		
    5b1a:	b0 12 0a 59 	call	#0x590a	
    5b1e:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    5b22:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    5b26:	21 53       	incd	r1		
    5b28:	34 41       	pop	r4		
    5b2a:	30 41       	ret			

00005b2c <Msp430ClockP__startTimerB>:
    5b2c:	04 12       	push	r4		
    5b2e:	04 41       	mov	r1,	r4	
    5b30:	24 53       	incd	r4		
    5b32:	1f 42 80 01 	mov	&0x0180,r15	
    5b36:	3f f0 cf ff 	and	#-49,	r15	;#0xffcf
    5b3a:	3f d0 20 00 	bis	#32,	r15	;#0x0020
    5b3e:	82 4f 80 01 	mov	r15,	&0x0180	
    5b42:	34 41       	pop	r4		
    5b44:	30 41       	ret			

00005b46 <Msp430ClockP__startTimerA>:
    5b46:	04 12       	push	r4		
    5b48:	04 41       	mov	r1,	r4	
    5b4a:	24 53       	incd	r4		
    5b4c:	1f 42 60 01 	mov	&0x0160,r15	
    5b50:	3f f0 cf ff 	and	#-49,	r15	;#0xffcf
    5b54:	3f d0 20 00 	bis	#32,	r15	;#0x0020
    5b58:	82 4f 60 01 	mov	r15,	&0x0160	
    5b5c:	34 41       	pop	r4		
    5b5e:	30 41       	ret			

00005b60 <Msp430ClockP__Msp430ClockInit__defaultInitTimerB>:
    5b60:	04 12       	push	r4		
    5b62:	04 41       	mov	r1,	r4	
    5b64:	24 53       	incd	r4		
    5b66:	82 43 90 01 	mov	#0,	&0x0190	;r3 As==00
    5b6a:	b2 40 02 01 80 01 	mov	#258,	&0x0180	;#0x0102
    5b70:	34 41       	pop	r4		
    5b72:	30 41       	ret			

00005b74 <Msp430ClockP__Msp430ClockInit__default__initTimerB>:
    5b74:	04 12       	push	r4		
    5b76:	04 41       	mov	r1,	r4	
    5b78:	24 53       	incd	r4		
    5b7a:	b0 12 60 5b 	call	#0x5b60	
    5b7e:	34 41       	pop	r4		
    5b80:	30 41       	ret			

00005b82 <Msp430ClockP__Msp430ClockInit__initTimerB>:
    5b82:	04 12       	push	r4		
    5b84:	04 41       	mov	r1,	r4	
    5b86:	24 53       	incd	r4		
    5b88:	b0 12 74 5b 	call	#0x5b74	
    5b8c:	34 41       	pop	r4		
    5b8e:	30 41       	ret			

00005b90 <Msp430ClockP__Msp430ClockInit__defaultInitTimerA>:
    5b90:	04 12       	push	r4		
    5b92:	04 41       	mov	r1,	r4	
    5b94:	24 53       	incd	r4		
    5b96:	82 43 70 01 	mov	#0,	&0x0170	;r3 As==00
    5b9a:	b2 40 02 02 60 01 	mov	#514,	&0x0160	;#0x0202
    5ba0:	34 41       	pop	r4		
    5ba2:	30 41       	ret			

00005ba4 <Msp430ClockP__Msp430ClockInit__default__initTimerA>:
    5ba4:	04 12       	push	r4		
    5ba6:	04 41       	mov	r1,	r4	
    5ba8:	24 53       	incd	r4		
    5baa:	b0 12 90 5b 	call	#0x5b90	
    5bae:	34 41       	pop	r4		
    5bb0:	30 41       	ret			

00005bb2 <Msp430ClockP__Msp430ClockInit__initTimerA>:
    5bb2:	04 12       	push	r4		
    5bb4:	04 41       	mov	r1,	r4	
    5bb6:	24 53       	incd	r4		
    5bb8:	b0 12 a4 5b 	call	#0x5ba4	
    5bbc:	34 41       	pop	r4		
    5bbe:	30 41       	ret			

00005bc0 <Msp430ClockP__Msp430ClockInit__defaultInitClocks>:
    5bc0:	04 12       	push	r4		
    5bc2:	04 41       	mov	r1,	r4	
    5bc4:	24 53       	incd	r4		
    5bc6:	5f 42 57 00 	mov.b	&0x0057,r15	
    5bca:	7f f0 07 00 	and.b	#7,	r15	;#0x0007
    5bce:	7f d0 80 ff 	bis.b	#-128,	r15	;#0xff80
    5bd2:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    5bd6:	e2 42 58 00 	mov.b	#4,	&0x0058	;r2 As==10
    5bda:	5f 42 00 00 	mov.b	&0x0000,r15	
    5bde:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    5be2:	c2 4f 00 00 	mov.b	r15,	&0x0000	
    5be6:	34 41       	pop	r4		
    5be8:	30 41       	ret			

00005bea <Msp430ClockP__Msp430ClockInit__default__initClocks>:
    5bea:	04 12       	push	r4		
    5bec:	04 41       	mov	r1,	r4	
    5bee:	24 53       	incd	r4		
    5bf0:	b0 12 c0 5b 	call	#0x5bc0	
    5bf4:	34 41       	pop	r4		
    5bf6:	30 41       	ret			

00005bf8 <Msp430ClockP__Msp430ClockInit__initClocks>:
    5bf8:	04 12       	push	r4		
    5bfa:	04 41       	mov	r1,	r4	
    5bfc:	24 53       	incd	r4		
    5bfe:	b0 12 ea 5b 	call	#0x5bea	
    5c02:	34 41       	pop	r4		
    5c04:	30 41       	ret			

00005c06 <Msp430ClockP__test_calib_busywait_delta>:
    5c06:	04 12       	push	r4		
    5c08:	04 41       	mov	r1,	r4	
    5c0a:	24 53       	incd	r4		
    5c0c:	31 82       	sub	#8,	r1	;r2 As==11
    5c0e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    5c12:	e4 43 f6 ff 	mov.b	#2,	-10(r4)	;r3 As==10, 0xfff6(r4)
    5c16:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    5c1a:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    5c1e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5c22:	b0 12 b8 71 	call	#0x71b8	
    5c26:	17 3c       	jmp	$+48     	;abs 0x5c56
    5c28:	1f 42 90 01 	mov	&0x0190,r15	
    5c2c:	3f 52       	add	#8,	r15	;r2 As==11
    5c2e:	82 4f 92 01 	mov	r15,	&0x0192	
    5c32:	1f 42 82 01 	mov	&0x0182,r15	
    5c36:	3f f0 fe ff 	and	#-2,	r15	;#0xfffe
    5c3a:	82 4f 82 01 	mov	r15,	&0x0182	
    5c3e:	03 43       	nop			
    5c40:	1f 42 82 01 	mov	&0x0182,r15	
    5c44:	1f f3       	and	#1,	r15	;r3 As==01
    5c46:	0f 93       	tst	r15		
    5c48:	fb 27       	jz	$-8      	;abs 0x5c40
    5c4a:	94 44 fa ff f8 ff 	mov	-6(r4),	-8(r4)	;0xfffa(r4), 0xfff8(r4)
    5c50:	94 42 70 01 fa ff 	mov	&0x0170,-6(r4)	;0xfffa(r4)
    5c56:	5f 43       	mov.b	#1,	r15	;r3 As==01
    5c58:	d4 93 f6 ff 	cmp.b	#1,	-10(r4)	;r3 As==01, 0xfff6(r4)
    5c5c:	01 34       	jge	$+4      	;abs 0x5c60
    5c5e:	4f 43       	clr.b	r15		
    5c60:	f4 53 f6 ff 	add.b	#-1,	-10(r4)	;r3 As==11, 0xfff6(r4)
    5c64:	4f 93       	tst.b	r15		
    5c66:	e0 23       	jnz	$-62     	;abs 0x5c28
    5c68:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5c6c:	1f 84 f8 ff 	sub	-8(r4),	r15	;0xfff8(r4)
    5c70:	31 52       	add	#8,	r1	;r2 As==11
    5c72:	34 41       	pop	r4		
    5c74:	30 41       	ret			

00005c76 <Msp430ClockP__busyCalibrateDco>:
    5c76:	04 12       	push	r4		
    5c78:	04 41       	mov	r1,	r4	
    5c7a:	24 53       	incd	r4		
    5c7c:	21 82       	sub	#4,	r1	;r2 As==10
    5c7e:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    5c82:	b4 40 00 08 fc ff 	mov	#2048,	-4(r4)	;#0x0800, 0xfffc(r4)
    5c88:	11 3c       	jmp	$+36     	;abs 0x5cac
    5c8a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5c8e:	1f d4 fc ff 	bis	-4(r4),	r15	;0xfffc(r4)
    5c92:	b0 12 06 5c 	call	#0x5c06	
    5c96:	3f 90 01 04 	cmp	#1025,	r15	;#0x0401
    5c9a:	03 2c       	jc	$+8      	;abs 0x5ca2
    5c9c:	94 d4 fc ff fa ff 	bis	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    5ca2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5ca6:	0f 11       	rra	r15		
    5ca8:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    5cac:	84 93 fc ff 	tst	-4(r4)		;0xfffc(r4)
    5cb0:	ec 23       	jnz	$-38     	;abs 0x5c8a
    5cb2:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5cb6:	3f f0 e0 00 	and	#224,	r15	;#0x00e0
    5cba:	3f 90 e0 00 	cmp	#224,	r15	;#0x00e0
    5cbe:	03 20       	jnz	$+8      	;abs 0x5cc6
    5cc0:	b4 f0 e0 ff fa ff 	and	#-32,	-6(r4)	;#0xffe0, 0xfffa(r4)
    5cc6:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    5cca:	b0 12 b8 71 	call	#0x71b8	
    5cce:	21 52       	add	#4,	r1	;r2 As==10
    5cd0:	34 41       	pop	r4		
    5cd2:	30 41       	ret			

00005cd4 <Msp430ClockP__Msp430ClockInit__defaultSetupDcoCalibrate>:
    5cd4:	04 12       	push	r4		
    5cd6:	04 41       	mov	r1,	r4	
    5cd8:	24 53       	incd	r4		
    5cda:	b2 40 20 02 60 01 	mov	#544,	&0x0160	;#0x0220
    5ce0:	b2 40 20 01 80 01 	mov	#288,	&0x0180	;#0x0120
    5ce6:	f2 40 84 ff 57 00 	mov.b	#-124,	&0x0057	;#0xff84
    5cec:	c2 43 58 00 	mov.b	#0,	&0x0058	;r3 As==00
    5cf0:	b2 40 00 40 82 01 	mov	#16384,	&0x0182	;#0x4000
    5cf6:	34 41       	pop	r4		
    5cf8:	30 41       	ret			

00005cfa <Msp430ClockP__Msp430ClockInit__default__setupDcoCalibrate>:
    5cfa:	04 12       	push	r4		
    5cfc:	04 41       	mov	r1,	r4	
    5cfe:	24 53       	incd	r4		
    5d00:	b0 12 d4 5c 	call	#0x5cd4	
    5d04:	34 41       	pop	r4		
    5d06:	30 41       	ret			

00005d08 <Msp430ClockP__Msp430ClockInit__setupDcoCalibrate>:
    5d08:	04 12       	push	r4		
    5d0a:	04 41       	mov	r1,	r4	
    5d0c:	24 53       	incd	r4		
    5d0e:	b0 12 fa 5c 	call	#0x5cfa	
    5d12:	34 41       	pop	r4		
    5d14:	30 41       	ret			

00005d16 <Msp430ClockP__Init__init>:
    5d16:	04 12       	push	r4		
    5d18:	04 41       	mov	r1,	r4	
    5d1a:	24 53       	incd	r4		
    5d1c:	a2 42 60 01 	mov	#4,	&0x0160	;r2 As==10
    5d20:	82 43 2e 01 	mov	#0,	&0x012e	;r3 As==00
    5d24:	a2 42 80 01 	mov	#4,	&0x0180	;r2 As==10
    5d28:	82 43 1e 01 	mov	#0,	&0x011e	;r3 As==00
    5d2c:	b0 12 08 5d 	call	#0x5d08	
    5d30:	b0 12 76 5c 	call	#0x5c76	
    5d34:	b0 12 f8 5b 	call	#0x5bf8	
    5d38:	b0 12 b2 5b 	call	#0x5bb2	
    5d3c:	b0 12 82 5b 	call	#0x5b82	
    5d40:	b0 12 46 5b 	call	#0x5b46	
    5d44:	b0 12 2c 5b 	call	#0x5b2c	
    5d48:	4f 43       	clr.b	r15		
    5d4a:	34 41       	pop	r4		
    5d4c:	30 41       	ret			

00005d4e <PlatformP__MoteClockInit__init>:
    5d4e:	04 12       	push	r4		
    5d50:	04 41       	mov	r1,	r4	
    5d52:	24 53       	incd	r4		
    5d54:	21 83       	decd	r1		
    5d56:	b0 12 16 5d 	call	#0x5d16	
    5d5a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    5d5e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    5d62:	21 53       	incd	r1		
    5d64:	34 41       	pop	r4		
    5d66:	30 41       	ret			

00005d68 <PlatformP__Init__init>:
    5d68:	04 12       	push	r4		
    5d6a:	04 41       	mov	r1,	r4	
    5d6c:	24 53       	incd	r4		
    5d6e:	b2 40 80 5a 20 01 	mov	#23168,	&0x0120	;#0x5a80
    5d74:	b0 12 4e 5d 	call	#0x5d4e	
    5d78:	b0 12 12 5b 	call	#0x5b12	
    5d7c:	b0 12 40 4e 	call	#0x4e40	
    5d80:	4f 43       	clr.b	r15		
    5d82:	34 41       	pop	r4		
    5d84:	30 41       	ret			

00005d86 <RealMainP__PlatformInit__init>:
    5d86:	04 12       	push	r4		
    5d88:	04 41       	mov	r1,	r4	
    5d8a:	24 53       	incd	r4		
    5d8c:	21 83       	decd	r1		
    5d8e:	b0 12 68 5d 	call	#0x5d68	
    5d92:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    5d96:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    5d9a:	21 53       	incd	r1		
    5d9c:	34 41       	pop	r4		
    5d9e:	30 41       	ret			

00005da0 <RealMainP__Scheduler__runNextTask>:
    5da0:	04 12       	push	r4		
    5da2:	04 41       	mov	r1,	r4	
    5da4:	24 53       	incd	r4		
    5da6:	21 83       	decd	r1		
    5da8:	b0 12 7c 72 	call	#0x727c	
    5dac:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    5db0:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    5db4:	21 53       	incd	r1		
    5db6:	34 41       	pop	r4		
    5db8:	30 41       	ret			

00005dba <VirtualizeTimerC__0__Timer__stop>:
    5dba:	04 12       	push	r4		
    5dbc:	04 41       	mov	r1,	r4	
    5dbe:	24 53       	incd	r4		
    5dc0:	21 83       	decd	r1		
    5dc2:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    5dc6:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    5dca:	0e 4f       	mov	r15,	r14	
    5dcc:	0f 4e       	mov	r14,	r15	
    5dce:	0f 5f       	rla	r15		
    5dd0:	0e 4f       	mov	r15,	r14	
    5dd2:	0f 4e       	mov	r14,	r15	
    5dd4:	0f 5f       	rla	r15		
    5dd6:	0f 5f       	rla	r15		
    5dd8:	0e 5f       	add	r15,	r14	
    5dda:	0f 4e       	mov	r14,	r15	
    5ddc:	3f 50 28 11 	add	#4392,	r15	;#0x1128
    5de0:	6e 4f       	mov.b	@r15,	r14	
    5de2:	7e f0 fd ff 	and.b	#-3,	r14	;#0xfffd
    5de6:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    5dea:	21 53       	incd	r1		
    5dec:	34 41       	pop	r4		
    5dee:	30 41       	ret			

00005df0 <AsyncDeferredPowerManagerP__0__TimerMilli__stop>:
    5df0:	04 12       	push	r4		
    5df2:	04 41       	mov	r1,	r4	
    5df4:	24 53       	incd	r4		
    5df6:	6f 43       	mov.b	#2,	r15	;r3 As==10
    5df8:	b0 12 ba 5d 	call	#0x5dba	
    5dfc:	34 41       	pop	r4		
    5dfe:	30 41       	ret			

00005e00 <AsyncDeferredPowerManagerP__0__stopTimerTask__runTask>:
    5e00:	04 12       	push	r4		
    5e02:	04 41       	mov	r1,	r4	
    5e04:	24 53       	incd	r4		
    5e06:	b0 12 f0 5d 	call	#0x5df0	
    5e0a:	c2 43 08 11 	mov.b	#0,	&0x1108	;r3 As==00
    5e0e:	34 41       	pop	r4		
    5e10:	30 41       	ret			

00005e12 <TransformAlarmC__0__Counter__get>:
    5e12:	04 12       	push	r4		
    5e14:	04 41       	mov	r1,	r4	
    5e16:	24 53       	incd	r4		
    5e18:	21 82       	sub	#4,	r1	;r2 As==10
    5e1a:	b0 12 9c 70 	call	#0x709c	
    5e1e:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    5e22:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    5e26:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    5e2a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5e2e:	21 52       	add	#4,	r1	;r2 As==10
    5e30:	34 41       	pop	r4		
    5e32:	30 41       	ret			

00005e34 <TransformAlarmC__0__Alarm__getNow>:
    5e34:	04 12       	push	r4		
    5e36:	04 41       	mov	r1,	r4	
    5e38:	24 53       	incd	r4		
    5e3a:	b0 12 12 5e 	call	#0x5e12	
    5e3e:	34 41       	pop	r4		
    5e40:	30 41       	ret			

00005e42 <AlarmToTimerC__0__Alarm__getNow>:
    5e42:	04 12       	push	r4		
    5e44:	04 41       	mov	r1,	r4	
    5e46:	24 53       	incd	r4		
    5e48:	21 82       	sub	#4,	r1	;r2 As==10
    5e4a:	b0 12 34 5e 	call	#0x5e34	
    5e4e:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    5e52:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    5e56:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    5e5a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5e5e:	21 52       	add	#4,	r1	;r2 As==10
    5e60:	34 41       	pop	r4		
    5e62:	30 41       	ret			

00005e64 <AlarmToTimerC__0__Timer__getNow>:
    5e64:	04 12       	push	r4		
    5e66:	04 41       	mov	r1,	r4	
    5e68:	24 53       	incd	r4		
    5e6a:	b0 12 42 5e 	call	#0x5e42	
    5e6e:	34 41       	pop	r4		
    5e70:	30 41       	ret			

00005e72 <VirtualizeTimerC__0__TimerFrom__getNow>:
    5e72:	04 12       	push	r4		
    5e74:	04 41       	mov	r1,	r4	
    5e76:	24 53       	incd	r4		
    5e78:	21 82       	sub	#4,	r1	;r2 As==10
    5e7a:	b0 12 64 5e 	call	#0x5e64	
    5e7e:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    5e82:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    5e86:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    5e8a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    5e8e:	21 52       	add	#4,	r1	;r2 As==10
    5e90:	34 41       	pop	r4		
    5e92:	30 41       	ret			

00005e94 <VirtualizeTimerC__0__Timer__startOneShot>:
    5e94:	04 12       	push	r4		
    5e96:	04 41       	mov	r1,	r4	
    5e98:	24 53       	incd	r4		
    5e9a:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    5e9e:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    5ea2:	84 4d fa ff 	mov	r13,	-6(r4)	;0xfffa(r4)
    5ea6:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    5eaa:	b0 12 72 5e 	call	#0x5e72	
    5eae:	53 12       	push.b	#1		;r3 As==01
    5eb0:	14 12 fc ff 	push	-4(r4)		;0xfffc(r4)
    5eb4:	14 12 fa ff 	push	-6(r4)		;0xfffa(r4)
    5eb8:	0d 4e       	mov	r14,	r13	
    5eba:	0e 4f       	mov	r15,	r14	
    5ebc:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    5ec0:	b0 12 0c 73 	call	#0x730c	
    5ec4:	31 50 06 00 	add	#6,	r1	;#0x0006
    5ec8:	31 50 06 00 	add	#6,	r1	;#0x0006
    5ecc:	34 41       	pop	r4		
    5ece:	30 41       	ret			

00005ed0 <AsyncDeferredPowerManagerP__0__TimerMilli__startOneShot>:
    5ed0:	04 12       	push	r4		
    5ed2:	04 41       	mov	r1,	r4	
    5ed4:	24 53       	incd	r4		
    5ed6:	21 82       	sub	#4,	r1	;r2 As==10
    5ed8:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    5edc:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    5ee0:	1d 44 fa ff 	mov	-6(r4),	r13	;0xfffa(r4)
    5ee4:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    5ee8:	6f 43       	mov.b	#2,	r15	;r3 As==10
    5eea:	b0 12 94 5e 	call	#0x5e94	
    5eee:	21 52       	add	#4,	r1	;r2 As==10
    5ef0:	34 41       	pop	r4		
    5ef2:	30 41       	ret			

00005ef4 <AsyncDeferredPowerManagerP__0__timerTask__runTask>:
    5ef4:	04 12       	push	r4		
    5ef6:	04 41       	mov	r1,	r4	
    5ef8:	24 53       	incd	r4		
    5efa:	5f 42 08 11 	mov.b	&0x1108,r15	
    5efe:	4f 93       	tst.b	r15		
    5f00:	05 20       	jnz	$+12     	;abs 0x5f0c
    5f02:	3e 40 ee 02 	mov	#750,	r14	;#0x02ee
    5f06:	0f 43       	clr	r15		
    5f08:	b0 12 d0 5e 	call	#0x5ed0	
    5f0c:	34 41       	pop	r4		
    5f0e:	30 41       	ret			

00005f10 <VirtualizeTimerC__0__updateFromTimer__postTask>:
    5f10:	04 12       	push	r4		
    5f12:	04 41       	mov	r1,	r4	
    5f14:	24 53       	incd	r4		
    5f16:	21 83       	decd	r1		
    5f18:	5f 43       	mov.b	#1,	r15	;r3 As==01
    5f1a:	b0 12 dc 6e 	call	#0x6edc	
    5f1e:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    5f22:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    5f26:	21 53       	incd	r1		
    5f28:	34 41       	pop	r4		
    5f2a:	30 41       	ret			

00005f2c <Msp430GpioC__2__HplGeneralIO__clr>:
    5f2c:	04 12       	push	r4		
    5f2e:	04 41       	mov	r1,	r4	
    5f30:	24 53       	incd	r4		
    5f32:	b0 12 b6 73 	call	#0x73b6	
    5f36:	34 41       	pop	r4		
    5f38:	30 41       	ret			

00005f3a <Msp430GpioC__2__GeneralIO__clr>:
    5f3a:	04 12       	push	r4		
    5f3c:	04 41       	mov	r1,	r4	
    5f3e:	24 53       	incd	r4		
    5f40:	b0 12 2c 5f 	call	#0x5f2c	
    5f44:	34 41       	pop	r4		
    5f46:	30 41       	ret			

00005f48 <LedsP__Led2__clr>:
    5f48:	04 12       	push	r4		
    5f4a:	04 41       	mov	r1,	r4	
    5f4c:	24 53       	incd	r4		
    5f4e:	b0 12 3a 5f 	call	#0x5f3a	
    5f52:	34 41       	pop	r4		
    5f54:	30 41       	ret			

00005f56 <LedsP__Leds__led2On>:
    5f56:	04 12       	push	r4		
    5f58:	04 41       	mov	r1,	r4	
    5f5a:	24 53       	incd	r4		
    5f5c:	b0 12 48 5f 	call	#0x5f48	
    5f60:	34 41       	pop	r4		
    5f62:	30 41       	ret			

00005f64 <TestPowerManagerC__Leds__led2On>:
    5f64:	04 12       	push	r4		
    5f66:	04 41       	mov	r1,	r4	
    5f68:	24 53       	incd	r4		
    5f6a:	b0 12 56 5f 	call	#0x5f56	
    5f6e:	34 41       	pop	r4		
    5f70:	30 41       	ret			

00005f72 <TestPowerManagerC__Resource1__granted>:
    5f72:	04 12       	push	r4		
    5f74:	04 41       	mov	r1,	r4	
    5f76:	24 53       	incd	r4		
    5f78:	d2 43 1e 11 	mov.b	#1,	&0x111e	;r3 As==01
    5f7c:	b0 12 64 5f 	call	#0x5f64	
    5f80:	3e 40 f4 01 	mov	#500,	r14	;#0x01f4
    5f84:	0f 43       	clr	r15		
    5f86:	b0 12 90 73 	call	#0x7390	
    5f8a:	34 41       	pop	r4		
    5f8c:	30 41       	ret			

00005f8e <HplMsp430GeneralIOP__26__IO__clr>:
    5f8e:	04 12       	push	r4		
    5f90:	04 41       	mov	r1,	r4	
    5f92:	24 53       	incd	r4		
    5f94:	21 83       	decd	r1		
    5f96:	b0 12 3e 6d 	call	#0x6d3e	
    5f9a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    5f9e:	3f 40 1d 00 	mov	#29,	r15	;#0x001d
    5fa2:	3e 40 1d 00 	mov	#29,	r14	;#0x001d
    5fa6:	6e 4e       	mov.b	@r14,	r14	
    5fa8:	7e f0 fb ff 	and.b	#-5,	r14	;#0xfffb
    5fac:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    5fb0:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    5fb4:	b0 12 66 6d 	call	#0x6d66	
    5fb8:	21 53       	incd	r1		
    5fba:	34 41       	pop	r4		
    5fbc:	30 41       	ret			

00005fbe <Msp430GpioC__1__HplGeneralIO__clr>:
    5fbe:	04 12       	push	r4		
    5fc0:	04 41       	mov	r1,	r4	
    5fc2:	24 53       	incd	r4		
    5fc4:	b0 12 8e 5f 	call	#0x5f8e	
    5fc8:	34 41       	pop	r4		
    5fca:	30 41       	ret			

00005fcc <Msp430GpioC__1__GeneralIO__clr>:
    5fcc:	04 12       	push	r4		
    5fce:	04 41       	mov	r1,	r4	
    5fd0:	24 53       	incd	r4		
    5fd2:	b0 12 be 5f 	call	#0x5fbe	
    5fd6:	34 41       	pop	r4		
    5fd8:	30 41       	ret			

00005fda <LedsP__Led1__clr>:
    5fda:	04 12       	push	r4		
    5fdc:	04 41       	mov	r1,	r4	
    5fde:	24 53       	incd	r4		
    5fe0:	b0 12 cc 5f 	call	#0x5fcc	
    5fe4:	34 41       	pop	r4		
    5fe6:	30 41       	ret			

00005fe8 <LedsP__Leds__led1On>:
    5fe8:	04 12       	push	r4		
    5fea:	04 41       	mov	r1,	r4	
    5fec:	24 53       	incd	r4		
    5fee:	b0 12 da 5f 	call	#0x5fda	
    5ff2:	34 41       	pop	r4		
    5ff4:	30 41       	ret			

00005ff6 <TestPowerManagerC__Leds__led1On>:
    5ff6:	04 12       	push	r4		
    5ff8:	04 41       	mov	r1,	r4	
    5ffa:	24 53       	incd	r4		
    5ffc:	b0 12 e8 5f 	call	#0x5fe8	
    6000:	34 41       	pop	r4		
    6002:	30 41       	ret			

00006004 <TestPowerManagerC__Resource0__granted>:
    6004:	04 12       	push	r4		
    6006:	04 41       	mov	r1,	r4	
    6008:	24 53       	incd	r4		
    600a:	c2 43 1e 11 	mov.b	#0,	&0x111e	;r3 As==00
    600e:	b0 12 f6 5f 	call	#0x5ff6	
    6012:	3e 40 f4 01 	mov	#500,	r14	;#0x01f4
    6016:	0f 43       	clr	r15		
    6018:	b0 12 90 73 	call	#0x7390	
    601c:	34 41       	pop	r4		
    601e:	30 41       	ret			

00006020 <ArbiterP__0__Resource__default__granted>:
    6020:	04 12       	push	r4		
    6022:	04 41       	mov	r1,	r4	
    6024:	24 53       	incd	r4		
    6026:	21 83       	decd	r1		
    6028:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    602c:	21 53       	incd	r1		
    602e:	34 41       	pop	r4		
    6030:	30 41       	ret			

00006032 <ArbiterP__0__Resource__granted>:
    6032:	04 12       	push	r4		
    6034:	04 41       	mov	r1,	r4	
    6036:	24 53       	incd	r4		
    6038:	21 83       	decd	r1		
    603a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    603e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6042:	0f 93       	tst	r15		
    6044:	03 24       	jz	$+8      	;abs 0x604c
    6046:	1f 93       	cmp	#1,	r15	;r3 As==01
    6048:	04 24       	jz	$+10     	;abs 0x6052
    604a:	06 3c       	jmp	$+14     	;abs 0x6058
    604c:	b0 12 04 60 	call	#0x6004	
    6050:	08 3c       	jmp	$+18     	;abs 0x6062
    6052:	b0 12 72 5f 	call	#0x5f72	
    6056:	05 3c       	jmp	$+12     	;abs 0x6062
    6058:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    605c:	b0 12 20 60 	call	#0x6020	
    6060:	03 43       	nop			
    6062:	21 53       	incd	r1		
    6064:	34 41       	pop	r4		
    6066:	30 41       	ret			

00006068 <ArbiterP__0__ResourceConfigure__default__configure>:
    6068:	04 12       	push	r4		
    606a:	04 41       	mov	r1,	r4	
    606c:	24 53       	incd	r4		
    606e:	21 83       	decd	r1		
    6070:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6074:	21 53       	incd	r1		
    6076:	34 41       	pop	r4		
    6078:	30 41       	ret			

0000607a <ArbiterP__0__ResourceConfigure__configure>:
    607a:	04 12       	push	r4		
    607c:	04 41       	mov	r1,	r4	
    607e:	24 53       	incd	r4		
    6080:	21 83       	decd	r1		
    6082:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6086:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    608a:	b0 12 68 60 	call	#0x6068	
    608e:	21 53       	incd	r1		
    6090:	34 41       	pop	r4		
    6092:	30 41       	ret			

00006094 <ArbiterP__0__grantedTask__runTask>:
    6094:	04 12       	push	r4		
    6096:	04 41       	mov	r1,	r4	
    6098:	24 53       	incd	r4		
    609a:	21 83       	decd	r1		
    609c:	b0 12 3e 6d 	call	#0x6d3e	
    60a0:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    60a4:	5f 42 48 11 	mov.b	&0x1148,r15	
    60a8:	c2 4f 03 11 	mov.b	r15,	&0x1103	
    60ac:	f2 40 03 00 06 11 	mov.b	#3,	&0x1106	;#0x0003
    60b2:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    60b6:	b0 12 66 6d 	call	#0x6d66	
    60ba:	5f 42 03 11 	mov.b	&0x1103,r15	
    60be:	b0 12 7a 60 	call	#0x607a	
    60c2:	5f 42 03 11 	mov.b	&0x1103,r15	
    60c6:	b0 12 32 60 	call	#0x6032	
    60ca:	21 53       	incd	r1		
    60cc:	34 41       	pop	r4		
    60ce:	30 41       	ret			

000060d0 <AlarmToTimerC__0__Alarm__startAt>:
    60d0:	04 12       	push	r4		
    60d2:	04 41       	mov	r1,	r4	
    60d4:	24 53       	incd	r4		
    60d6:	31 82       	sub	#8,	r1	;r2 As==11
    60d8:	84 4e f6 ff 	mov	r14,	-10(r4)	;0xfff6(r4)
    60dc:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    60e0:	84 4c fa ff 	mov	r12,	-6(r4)	;0xfffa(r4)
    60e4:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    60e8:	1c 44 fa ff 	mov	-6(r4),	r12	;0xfffa(r4)
    60ec:	1d 44 fc ff 	mov	-4(r4),	r13	;0xfffc(r4)
    60f0:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    60f4:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    60f8:	b0 12 6c 76 	call	#0x766c	
    60fc:	31 52       	add	#8,	r1	;r2 As==11
    60fe:	34 41       	pop	r4		
    6100:	30 41       	ret			

00006102 <AlarmToTimerC__0__start>:
    6102:	04 12       	push	r4		
    6104:	04 41       	mov	r1,	r4	
    6106:	24 53       	incd	r4		
    6108:	31 82       	sub	#8,	r1	;r2 As==11
    610a:	84 4e f6 ff 	mov	r14,	-10(r4)	;0xfff6(r4)
    610e:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    6112:	84 4c fa ff 	mov	r12,	-6(r4)	;0xfffa(r4)
    6116:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    611a:	92 44 fa ff 4a 11 	mov	-6(r4),	&0x114a	;0xfffa(r4)
    6120:	92 44 fc ff 4c 11 	mov	-4(r4),	&0x114c	;0xfffc(r4)
    6126:	d2 44 02 00 0f 11 	mov.b	2(r4),	&0x110f	;0x0002(r4)
    612c:	1c 44 fa ff 	mov	-6(r4),	r12	;0xfffa(r4)
    6130:	1d 44 fc ff 	mov	-4(r4),	r13	;0xfffc(r4)
    6134:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    6138:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    613c:	b0 12 d0 60 	call	#0x60d0	
    6140:	31 52       	add	#8,	r1	;r2 As==11
    6142:	34 41       	pop	r4		
    6144:	30 41       	ret			

00006146 <AlarmToTimerC__0__Timer__startOneShotAt>:
    6146:	04 12       	push	r4		
    6148:	04 41       	mov	r1,	r4	
    614a:	24 53       	incd	r4		
    614c:	31 82       	sub	#8,	r1	;r2 As==11
    614e:	84 4e f6 ff 	mov	r14,	-10(r4)	;0xfff6(r4)
    6152:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    6156:	84 4c fa ff 	mov	r12,	-6(r4)	;0xfffa(r4)
    615a:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    615e:	53 12       	push.b	#1		;r3 As==01
    6160:	1c 44 fa ff 	mov	-6(r4),	r12	;0xfffa(r4)
    6164:	1d 44 fc ff 	mov	-4(r4),	r13	;0xfffc(r4)
    6168:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    616c:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    6170:	b0 12 02 61 	call	#0x6102	
    6174:	21 53       	incd	r1		
    6176:	31 52       	add	#8,	r1	;r2 As==11
    6178:	34 41       	pop	r4		
    617a:	30 41       	ret			

0000617c <VirtualizeTimerC__0__TimerFrom__startOneShotAt>:
    617c:	04 12       	push	r4		
    617e:	04 41       	mov	r1,	r4	
    6180:	24 53       	incd	r4		
    6182:	31 82       	sub	#8,	r1	;r2 As==11
    6184:	84 4e f6 ff 	mov	r14,	-10(r4)	;0xfff6(r4)
    6188:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    618c:	84 4c fa ff 	mov	r12,	-6(r4)	;0xfffa(r4)
    6190:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    6194:	1c 44 fa ff 	mov	-6(r4),	r12	;0xfffa(r4)
    6198:	1d 44 fc ff 	mov	-4(r4),	r13	;0xfffc(r4)
    619c:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    61a0:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    61a4:	b0 12 46 61 	call	#0x6146	
    61a8:	31 52       	add	#8,	r1	;r2 As==11
    61aa:	34 41       	pop	r4		
    61ac:	30 41       	ret			

000061ae <Msp430AlarmC__0__Alarm__stop>:
    61ae:	04 12       	push	r4		
    61b0:	04 41       	mov	r1,	r4	
    61b2:	24 53       	incd	r4		
    61b4:	b0 12 d4 44 	call	#0x44d4	
    61b8:	34 41       	pop	r4		
    61ba:	30 41       	ret			

000061bc <TransformAlarmC__0__AlarmFrom__stop>:
    61bc:	04 12       	push	r4		
    61be:	04 41       	mov	r1,	r4	
    61c0:	24 53       	incd	r4		
    61c2:	b0 12 ae 61 	call	#0x61ae	
    61c6:	34 41       	pop	r4		
    61c8:	30 41       	ret			

000061ca <TransformAlarmC__0__Alarm__stop>:
    61ca:	04 12       	push	r4		
    61cc:	04 41       	mov	r1,	r4	
    61ce:	24 53       	incd	r4		
    61d0:	b0 12 bc 61 	call	#0x61bc	
    61d4:	34 41       	pop	r4		
    61d6:	30 41       	ret			

000061d8 <AlarmToTimerC__0__Alarm__stop>:
    61d8:	04 12       	push	r4		
    61da:	04 41       	mov	r1,	r4	
    61dc:	24 53       	incd	r4		
    61de:	b0 12 ca 61 	call	#0x61ca	
    61e2:	34 41       	pop	r4		
    61e4:	30 41       	ret			

000061e6 <AlarmToTimerC__0__Timer__stop>:
    61e6:	04 12       	push	r4		
    61e8:	04 41       	mov	r1,	r4	
    61ea:	24 53       	incd	r4		
    61ec:	b0 12 d8 61 	call	#0x61d8	
    61f0:	34 41       	pop	r4		
    61f2:	30 41       	ret			

000061f4 <VirtualizeTimerC__0__TimerFrom__stop>:
    61f4:	04 12       	push	r4		
    61f6:	04 41       	mov	r1,	r4	
    61f8:	24 53       	incd	r4		
    61fa:	b0 12 e6 61 	call	#0x61e6	
    61fe:	34 41       	pop	r4		
    6200:	30 41       	ret			

00006202 <VirtualizeTimerC__0__updateFromTimer__runTask>:
    6202:	04 12       	push	r4		
    6204:	04 41       	mov	r1,	r4	
    6206:	24 53       	incd	r4		
    6208:	31 50 ea ff 	add	#-22,	r1	;#0xffea
    620c:	b0 12 72 5e 	call	#0x5e72	
    6210:	84 4e f0 ff 	mov	r14,	-16(r4)	;0xfff0(r4)
    6214:	84 4f f2 ff 	mov	r15,	-14(r4)	;0xfff2(r4)
    6218:	b4 43 e8 ff 	mov	#-1,	-24(r4)	;r3 As==11, 0xffe8(r4)
    621c:	b4 40 ff 7f ea ff 	mov	#32767,	-22(r4)	;#0x7fff, 0xffea(r4)
    6222:	c4 43 ec ff 	mov.b	#0,	-20(r4)	;r3 As==00, 0xffec(r4)
    6226:	b0 12 f4 61 	call	#0x61f4	
    622a:	84 43 ee ff 	mov	#0,	-18(r4)	;r3 As==00, 0xffee(r4)
    622e:	49 3c       	jmp	$+148    	;abs 0x62c2
    6230:	1f 44 ee ff 	mov	-18(r4),r15	;0xffee(r4)
    6234:	0e 4f       	mov	r15,	r14	
    6236:	0f 4e       	mov	r14,	r15	
    6238:	0f 5f       	rla	r15		
    623a:	0e 4f       	mov	r15,	r14	
    623c:	0f 4e       	mov	r14,	r15	
    623e:	0f 5f       	rla	r15		
    6240:	0f 5f       	rla	r15		
    6242:	0f 5e       	add	r14,	r15	
    6244:	0c 4f       	mov	r15,	r12	
    6246:	3c 50 20 11 	add	#4384,	r12	;#0x1120
    624a:	84 4c f4 ff 	mov	r12,	-12(r4)	;0xfff4(r4)
    624e:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    6252:	5f 4f 08 00 	mov.b	8(r15),	r15	;0x0008(r15)
    6256:	6f f3       	and.b	#2,	r15	;r3 As==10
    6258:	4f 93       	tst.b	r15		
    625a:	31 24       	jz	$+100    	;abs 0x62be
    625c:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    6260:	2e 4f       	mov	@r15,	r14	
    6262:	1f 4f 02 00 	mov	2(r15),	r15	;0x0002(r15)
    6266:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfff0(r4)
    626a:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfff2(r4)
    626e:	0c 8e       	sub	r14,	r12	
    6270:	0d 7f       	subc	r15,	r13	
    6272:	84 4c f6 ff 	mov	r12,	-10(r4)	;0xfff6(r4)
    6276:	84 4d f8 ff 	mov	r13,	-8(r4)	;0xfff8(r4)
    627a:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    627e:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    6282:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    6286:	1e 84 f6 ff 	sub	-10(r4),r14	;0xfff6(r4)
    628a:	1f 74 f8 ff 	subc	-8(r4),	r15	;0xfff8(r4)
    628e:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    6292:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    6296:	94 94 ea ff fc ff 	cmp	-22(r4),-4(r4)	;0xffea(r4), 0xfffc(r4)
    629c:	08 38       	jl	$+18     	;abs 0x62ae
    629e:	94 94 fc ff ea ff 	cmp	-4(r4),	-22(r4)	;0xfffc(r4), 0xffea(r4)
    62a4:	0c 38       	jl	$+26     	;abs 0x62be
    62a6:	94 94 e8 ff fa ff 	cmp	-24(r4),-6(r4)	;0xffe8(r4), 0xfffa(r4)
    62ac:	08 2c       	jc	$+18     	;abs 0x62be
    62ae:	94 44 fa ff e8 ff 	mov	-6(r4),	-24(r4)	;0xfffa(r4), 0xffe8(r4)
    62b4:	94 44 fc ff ea ff 	mov	-4(r4),	-22(r4)	;0xfffc(r4), 0xffea(r4)
    62ba:	d4 43 ec ff 	mov.b	#1,	-20(r4)	;r3 As==01, 0xffec(r4)
    62be:	94 53 ee ff 	inc	-18(r4)	;0xffee(r4)
    62c2:	a4 92 ee ff 	cmp	#4,	-18(r4)	;r2 As==10, 0xffee(r4)
    62c6:	b4 2b       	jnc	$-150    	;abs 0x6230
    62c8:	c4 93 ec ff 	tst.b	-20(r4)	;0xffec(r4)
    62cc:	1c 24       	jz	$+58     	;abs 0x6306
    62ce:	84 93 ea ff 	tst	-22(r4)	;0xffea(r4)
    62d2:	06 38       	jl	$+14     	;abs 0x62e0
    62d4:	94 93 ea ff 	cmp	#1,	-22(r4)	;r3 As==01, 0xffea(r4)
    62d8:	0a 34       	jge	$+22     	;abs 0x62ee
    62da:	94 93 e8 ff 	cmp	#1,	-24(r4)	;r3 As==01, 0xffe8(r4)
    62de:	07 2c       	jc	$+16     	;abs 0x62ee
    62e0:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    62e4:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    62e8:	b0 12 e6 73 	call	#0x73e6	
    62ec:	0c 3c       	jmp	$+26     	;abs 0x6306
    62ee:	1e 44 e8 ff 	mov	-24(r4),r14	;0xffe8(r4)
    62f2:	1f 44 ea ff 	mov	-22(r4),r15	;0xffea(r4)
    62f6:	0c 4e       	mov	r14,	r12	
    62f8:	0d 4f       	mov	r15,	r13	
    62fa:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    62fe:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    6302:	b0 12 7c 61 	call	#0x617c	
    6306:	31 50 16 00 	add	#22,	r1	;#0x0016
    630a:	34 41       	pop	r4		
    630c:	30 41       	ret			

0000630e <MyComponentP__SplitControl__default__startDone>:
    630e:	04 12       	push	r4		
    6310:	04 41       	mov	r1,	r4	
    6312:	24 53       	incd	r4		
    6314:	21 83       	decd	r1		
    6316:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    631a:	21 53       	incd	r1		
    631c:	34 41       	pop	r4		
    631e:	30 41       	ret			

00006320 <MyComponentP__SplitControl__startDone>:
    6320:	04 12       	push	r4		
    6322:	04 41       	mov	r1,	r4	
    6324:	24 53       	incd	r4		
    6326:	21 83       	decd	r1		
    6328:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    632c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6330:	b0 12 0e 63 	call	#0x630e	
    6334:	21 53       	incd	r1		
    6336:	34 41       	pop	r4		
    6338:	30 41       	ret			

0000633a <Msp430GpioC__0__HplGeneralIO__clr>:
    633a:	04 12       	push	r4		
    633c:	04 41       	mov	r1,	r4	
    633e:	24 53       	incd	r4		
    6340:	b0 12 ce 74 	call	#0x74ce	
    6344:	34 41       	pop	r4		
    6346:	30 41       	ret			

00006348 <Msp430GpioC__0__GeneralIO__clr>:
    6348:	04 12       	push	r4		
    634a:	04 41       	mov	r1,	r4	
    634c:	24 53       	incd	r4		
    634e:	b0 12 3a 63 	call	#0x633a	
    6352:	34 41       	pop	r4		
    6354:	30 41       	ret			

00006356 <LedsP__Led0__clr>:
    6356:	04 12       	push	r4		
    6358:	04 41       	mov	r1,	r4	
    635a:	24 53       	incd	r4		
    635c:	b0 12 48 63 	call	#0x6348	
    6360:	34 41       	pop	r4		
    6362:	30 41       	ret			

00006364 <LedsP__Leds__led0On>:
    6364:	04 12       	push	r4		
    6366:	04 41       	mov	r1,	r4	
    6368:	24 53       	incd	r4		
    636a:	b0 12 56 63 	call	#0x6356	
    636e:	34 41       	pop	r4		
    6370:	30 41       	ret			

00006372 <MyComponentP__Leds__led0On>:
    6372:	04 12       	push	r4		
    6374:	04 41       	mov	r1,	r4	
    6376:	24 53       	incd	r4		
    6378:	b0 12 64 63 	call	#0x6364	
    637c:	34 41       	pop	r4		
    637e:	30 41       	ret			

00006380 <MyComponentP__StartTimer__fired>:
    6380:	04 12       	push	r4		
    6382:	04 41       	mov	r1,	r4	
    6384:	24 53       	incd	r4		
    6386:	b0 12 72 63 	call	#0x6372	
    638a:	4f 43       	clr.b	r15		
    638c:	b0 12 20 63 	call	#0x6320	
    6390:	34 41       	pop	r4		
    6392:	30 41       	ret			

00006394 <MyComponentP__SplitControl__default__stopDone>:
    6394:	04 12       	push	r4		
    6396:	04 41       	mov	r1,	r4	
    6398:	24 53       	incd	r4		
    639a:	21 83       	decd	r1		
    639c:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    63a0:	21 53       	incd	r1		
    63a2:	34 41       	pop	r4		
    63a4:	30 41       	ret			

000063a6 <MyComponentP__SplitControl__stopDone>:
    63a6:	04 12       	push	r4		
    63a8:	04 41       	mov	r1,	r4	
    63aa:	24 53       	incd	r4		
    63ac:	21 83       	decd	r1		
    63ae:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    63b2:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    63b6:	b0 12 94 63 	call	#0x6394	
    63ba:	21 53       	incd	r1		
    63bc:	34 41       	pop	r4		
    63be:	30 41       	ret			

000063c0 <LedsP__Leds__led0Off>:
    63c0:	04 12       	push	r4		
    63c2:	04 41       	mov	r1,	r4	
    63c4:	24 53       	incd	r4		
    63c6:	b0 12 42 4d 	call	#0x4d42	
    63ca:	34 41       	pop	r4		
    63cc:	30 41       	ret			

000063ce <MyComponentP__Leds__led0Off>:
    63ce:	04 12       	push	r4		
    63d0:	04 41       	mov	r1,	r4	
    63d2:	24 53       	incd	r4		
    63d4:	b0 12 c0 63 	call	#0x63c0	
    63d8:	34 41       	pop	r4		
    63da:	30 41       	ret			

000063dc <MyComponentP__StopTimer__fired>:
    63dc:	04 12       	push	r4		
    63de:	04 41       	mov	r1,	r4	
    63e0:	24 53       	incd	r4		
    63e2:	b0 12 ce 63 	call	#0x63ce	
    63e6:	4f 43       	clr.b	r15		
    63e8:	b0 12 a6 63 	call	#0x63a6	
    63ec:	34 41       	pop	r4		
    63ee:	30 41       	ret			

000063f0 <MyComponentP__AsyncStdControl__stop>:
    63f0:	04 12       	push	r4		
    63f2:	04 41       	mov	r1,	r4	
    63f4:	24 53       	incd	r4		
    63f6:	b0 12 ce 63 	call	#0x63ce	
    63fa:	4f 43       	clr.b	r15		
    63fc:	34 41       	pop	r4		
    63fe:	30 41       	ret			

00006400 <AsyncDeferredPowerManagerP__0__AsyncStdControl__stop>:
    6400:	04 12       	push	r4		
    6402:	04 41       	mov	r1,	r4	
    6404:	24 53       	incd	r4		
    6406:	21 83       	decd	r1		
    6408:	b0 12 f0 63 	call	#0x63f0	
    640c:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6410:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6414:	21 53       	incd	r1		
    6416:	34 41       	pop	r4		
    6418:	30 41       	ret			

0000641a <AsyncDeferredPowerManagerP__0__PowerDownCleanup__default__cleanup>:
    641a:	04 12       	push	r4		
    641c:	04 41       	mov	r1,	r4	
    641e:	24 53       	incd	r4		
    6420:	34 41       	pop	r4		
    6422:	30 41       	ret			

00006424 <AsyncDeferredPowerManagerP__0__PowerDownCleanup__cleanup>:
    6424:	04 12       	push	r4		
    6426:	04 41       	mov	r1,	r4	
    6428:	24 53       	incd	r4		
    642a:	b0 12 1a 64 	call	#0x641a	
    642e:	34 41       	pop	r4		
    6430:	30 41       	ret			

00006432 <AsyncDeferredPowerManagerP__0__TimerMilli__fired>:
    6432:	04 12       	push	r4		
    6434:	04 41       	mov	r1,	r4	
    6436:	24 53       	incd	r4		
    6438:	5f 42 08 11 	mov.b	&0x1108,r15	
    643c:	4f 93       	tst.b	r15		
    643e:	04 20       	jnz	$+10     	;abs 0x6448
    6440:	b0 12 24 64 	call	#0x6424	
    6444:	b0 12 00 64 	call	#0x6400	
    6448:	34 41       	pop	r4		
    644a:	30 41       	ret			

0000644c <TestPowerManagerC__Resource1__release>:
    644c:	04 12       	push	r4		
    644e:	04 41       	mov	r1,	r4	
    6450:	24 53       	incd	r4		
    6452:	21 83       	decd	r1		
    6454:	5f 43       	mov.b	#1,	r15	;r3 As==01
    6456:	b0 12 e8 75 	call	#0x75e8	
    645a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    645e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6462:	21 53       	incd	r1		
    6464:	34 41       	pop	r4		
    6466:	30 41       	ret			

00006468 <LedsP__Leds__led2Off>:
    6468:	04 12       	push	r4		
    646a:	04 41       	mov	r1,	r4	
    646c:	24 53       	incd	r4		
    646e:	b0 12 ee 4c 	call	#0x4cee	
    6472:	34 41       	pop	r4		
    6474:	30 41       	ret			

00006476 <TestPowerManagerC__Leds__led2Off>:
    6476:	04 12       	push	r4		
    6478:	04 41       	mov	r1,	r4	
    647a:	24 53       	incd	r4		
    647c:	b0 12 68 64 	call	#0x6468	
    6480:	34 41       	pop	r4		
    6482:	30 41       	ret			

00006484 <TestPowerManagerC__Resource0__release>:
    6484:	04 12       	push	r4		
    6486:	04 41       	mov	r1,	r4	
    6488:	24 53       	incd	r4		
    648a:	21 83       	decd	r1		
    648c:	4f 43       	clr.b	r15		
    648e:	b0 12 e8 75 	call	#0x75e8	
    6492:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6496:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    649a:	21 53       	incd	r1		
    649c:	34 41       	pop	r4		
    649e:	30 41       	ret			

000064a0 <LedsP__Leds__led1Off>:
    64a0:	04 12       	push	r4		
    64a2:	04 41       	mov	r1,	r4	
    64a4:	24 53       	incd	r4		
    64a6:	b0 12 18 4d 	call	#0x4d18	
    64aa:	34 41       	pop	r4		
    64ac:	30 41       	ret			

000064ae <TestPowerManagerC__Leds__led1Off>:
    64ae:	04 12       	push	r4		
    64b0:	04 41       	mov	r1,	r4	
    64b2:	24 53       	incd	r4		
    64b4:	b0 12 a0 64 	call	#0x64a0	
    64b8:	34 41       	pop	r4		
    64ba:	30 41       	ret			

000064bc <TestPowerManagerC__Resource0__request>:
    64bc:	04 12       	push	r4		
    64be:	04 41       	mov	r1,	r4	
    64c0:	24 53       	incd	r4		
    64c2:	21 83       	decd	r1		
    64c4:	4f 43       	clr.b	r15		
    64c6:	b0 12 6c 75 	call	#0x756c	
    64ca:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    64ce:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    64d2:	21 53       	incd	r1		
    64d4:	34 41       	pop	r4		
    64d6:	30 41       	ret			

000064d8 <TestPowerManagerC__Resource1__request>:
    64d8:	04 12       	push	r4		
    64da:	04 41       	mov	r1,	r4	
    64dc:	24 53       	incd	r4		
    64de:	21 83       	decd	r1		
    64e0:	5f 43       	mov.b	#1,	r15	;r3 As==01
    64e2:	b0 12 6c 75 	call	#0x756c	
    64e6:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    64ea:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    64ee:	21 53       	incd	r1		
    64f0:	34 41       	pop	r4		
    64f2:	30 41       	ret			

000064f4 <AsyncDeferredPowerManagerP__0__ResourceDefaultOwner__release>:
    64f4:	04 12       	push	r4		
    64f6:	04 41       	mov	r1,	r4	
    64f8:	24 53       	incd	r4		
    64fa:	21 83       	decd	r1		
    64fc:	b0 12 fe 74 	call	#0x74fe	
    6500:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6504:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6508:	21 53       	incd	r1		
    650a:	34 41       	pop	r4		
    650c:	30 41       	ret			

0000650e <MyComponentP__AsyncStdControl__start>:
    650e:	04 12       	push	r4		
    6510:	04 41       	mov	r1,	r4	
    6512:	24 53       	incd	r4		
    6514:	b0 12 72 63 	call	#0x6372	
    6518:	4f 43       	clr.b	r15		
    651a:	34 41       	pop	r4		
    651c:	30 41       	ret			

0000651e <AsyncDeferredPowerManagerP__0__AsyncStdControl__start>:
    651e:	04 12       	push	r4		
    6520:	04 41       	mov	r1,	r4	
    6522:	24 53       	incd	r4		
    6524:	21 83       	decd	r1		
    6526:	b0 12 0e 65 	call	#0x650e	
    652a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    652e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6532:	21 53       	incd	r1		
    6534:	34 41       	pop	r4		
    6536:	30 41       	ret			

00006538 <AsyncDeferredPowerManagerP__0__stopTimerTask__postTask>:
    6538:	04 12       	push	r4		
    653a:	04 41       	mov	r1,	r4	
    653c:	24 53       	incd	r4		
    653e:	21 83       	decd	r1		
    6540:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
    6544:	b0 12 dc 6e 	call	#0x6edc	
    6548:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    654c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6550:	21 53       	incd	r1		
    6552:	34 41       	pop	r4		
    6554:	30 41       	ret			

00006556 <AsyncDeferredPowerManagerP__0__ResourceDefaultOwner__immediateRequested>:
    6556:	04 12       	push	r4		
    6558:	04 41       	mov	r1,	r4	
    655a:	24 53       	incd	r4		
    655c:	d2 43 08 11 	mov.b	#1,	&0x1108	;r3 As==01
    6560:	b0 12 38 65 	call	#0x6538	
    6564:	b0 12 1e 65 	call	#0x651e	
    6568:	b0 12 f4 64 	call	#0x64f4	
    656c:	34 41       	pop	r4		
    656e:	30 41       	ret			

00006570 <ArbiterP__0__ResourceDefaultOwner__immediateRequested>:
    6570:	04 12       	push	r4		
    6572:	04 41       	mov	r1,	r4	
    6574:	24 53       	incd	r4		
    6576:	b0 12 56 65 	call	#0x6556	
    657a:	34 41       	pop	r4		
    657c:	30 41       	ret			

0000657e <ArbiterP__0__ResourceRequested__default__immediateRequested>:
    657e:	04 12       	push	r4		
    6580:	04 41       	mov	r1,	r4	
    6582:	24 53       	incd	r4		
    6584:	21 83       	decd	r1		
    6586:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    658a:	21 53       	incd	r1		
    658c:	34 41       	pop	r4		
    658e:	30 41       	ret			

00006590 <ArbiterP__0__ResourceRequested__immediateRequested>:
    6590:	04 12       	push	r4		
    6592:	04 41       	mov	r1,	r4	
    6594:	24 53       	incd	r4		
    6596:	21 83       	decd	r1		
    6598:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    659c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    65a0:	b0 12 7e 65 	call	#0x657e	
    65a4:	21 53       	incd	r1		
    65a6:	34 41       	pop	r4		
    65a8:	30 41       	ret			

000065aa <ArbiterP__0__Resource__immediateRequest>:
    65aa:	04 12       	push	r4		
    65ac:	04 41       	mov	r1,	r4	
    65ae:	24 53       	incd	r4		
    65b0:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    65b4:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    65b8:	5f 42 03 11 	mov.b	&0x1103,r15	
    65bc:	b0 12 90 65 	call	#0x6590	
    65c0:	b0 12 3e 6d 	call	#0x6d3e	
    65c4:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    65c8:	5f 42 06 11 	mov.b	&0x1106,r15	
    65cc:	4f 93       	tst.b	r15		
    65ce:	11 20       	jnz	$+36     	;abs 0x65f2
    65d0:	e2 43 06 11 	mov.b	#2,	&0x1106	;r3 As==10
    65d4:	d2 44 fc ff 48 11 	mov.b	-4(r4),	&0x1148	;0xfffc(r4)
    65da:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    65de:	b0 12 66 6d 	call	#0x6d66	
    65e2:	b0 12 70 65 	call	#0x6570	
    65e6:	5f 42 03 11 	mov.b	&0x1103,r15	
    65ea:	5f 94 fc ff 	cmp.b	-4(r4),	r15	;0xfffc(r4)
    65ee:	0a 24       	jz	$+22     	;abs 0x6604
    65f0:	0f 3c       	jmp	$+32     	;abs 0x6610
    65f2:	d4 43 fa ff 	mov.b	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    65f6:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    65fa:	b0 12 66 6d 	call	#0x6d66	
    65fe:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    6602:	11 3c       	jmp	$+36     	;abs 0x6626
    6604:	5f 42 03 11 	mov.b	&0x1103,r15	
    6608:	b0 12 7a 60 	call	#0x607a	
    660c:	4f 43       	clr.b	r15		
    660e:	0b 3c       	jmp	$+24     	;abs 0x6626
    6610:	b0 12 3e 6d 	call	#0x6d3e	
    6614:	c4 4f f9 ff 	mov.b	r15,	-7(r4)	;0xfff9(r4)
    6618:	c2 43 06 11 	mov.b	#0,	&0x1106	;r3 As==00
    661c:	5f 44 f9 ff 	mov.b	-7(r4),	r15	;0xfff9(r4)
    6620:	b0 12 66 6d 	call	#0x6d66	
    6624:	5f 43       	mov.b	#1,	r15	;r3 As==01
    6626:	31 50 06 00 	add	#6,	r1	;#0x0006
    662a:	34 41       	pop	r4		
    662c:	30 41       	ret			

0000662e <TestPowerManagerC__Resource1__immediateRequest>:
    662e:	04 12       	push	r4		
    6630:	04 41       	mov	r1,	r4	
    6632:	24 53       	incd	r4		
    6634:	21 83       	decd	r1		
    6636:	5f 43       	mov.b	#1,	r15	;r3 As==01
    6638:	b0 12 aa 65 	call	#0x65aa	
    663c:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6640:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6644:	21 53       	incd	r1		
    6646:	34 41       	pop	r4		
    6648:	30 41       	ret			

0000664a <TestPowerManagerC__TimerMilli__fired>:
    664a:	04 12       	push	r4		
    664c:	04 41       	mov	r1,	r4	
    664e:	24 53       	incd	r4		
    6650:	5f 42 4e 11 	mov.b	&0x114e,r15	
    6654:	5f 93       	cmp.b	#1,	r15	;r3 As==01
    6656:	1d 20       	jnz	$+60     	;abs 0x6692
    6658:	c2 43 4e 11 	mov.b	#0,	&0x114e	;r3 As==00
    665c:	5f 42 1e 11 	mov.b	&0x111e,r15	
    6660:	4f 93       	tst.b	r15		
    6662:	10 20       	jnz	$+34     	;abs 0x6684
    6664:	b0 12 2e 66 	call	#0x662e	
    6668:	4f 93       	tst.b	r15		
    666a:	0a 20       	jnz	$+22     	;abs 0x6680
    666c:	d2 43 1e 11 	mov.b	#1,	&0x111e	;r3 As==01
    6670:	b0 12 64 5f 	call	#0x5f64	
    6674:	3e 40 f4 01 	mov	#500,	r14	;#0x01f4
    6678:	0f 43       	clr	r15		
    667a:	b0 12 90 73 	call	#0x7390	
    667e:	20 3c       	jmp	$+66     	;abs 0x66c0
    6680:	b0 12 d8 64 	call	#0x64d8	
    6684:	5f 42 1e 11 	mov.b	&0x111e,r15	
    6688:	5f 93       	cmp.b	#1,	r15	;r3 As==01
    668a:	1a 20       	jnz	$+54     	;abs 0x66c0
    668c:	b0 12 bc 64 	call	#0x64bc	
    6690:	17 3c       	jmp	$+48     	;abs 0x66c0
    6692:	5f 42 1e 11 	mov.b	&0x111e,r15	
    6696:	4f 93       	tst.b	r15		
    6698:	04 20       	jnz	$+10     	;abs 0x66a2
    669a:	b0 12 ae 64 	call	#0x64ae	
    669e:	b0 12 84 64 	call	#0x6484	
    66a2:	5f 42 1e 11 	mov.b	&0x111e,r15	
    66a6:	5f 93       	cmp.b	#1,	r15	;r3 As==01
    66a8:	04 20       	jnz	$+10     	;abs 0x66b2
    66aa:	b0 12 76 64 	call	#0x6476	
    66ae:	b0 12 4c 64 	call	#0x644c	
    66b2:	d2 43 4e 11 	mov.b	#1,	&0x114e	;r3 As==01
    66b6:	3e 40 e8 03 	mov	#1000,	r14	;#0x03e8
    66ba:	0f 43       	clr	r15		
    66bc:	b0 12 90 73 	call	#0x7390	
    66c0:	34 41       	pop	r4		
    66c2:	30 41       	ret			

000066c4 <VirtualizeTimerC__0__Timer__default__fired>:
    66c4:	04 12       	push	r4		
    66c6:	04 41       	mov	r1,	r4	
    66c8:	24 53       	incd	r4		
    66ca:	21 83       	decd	r1		
    66cc:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    66d0:	21 53       	incd	r1		
    66d2:	34 41       	pop	r4		
    66d4:	30 41       	ret			

000066d6 <VirtualizeTimerC__0__Timer__fired>:
    66d6:	04 12       	push	r4		
    66d8:	04 41       	mov	r1,	r4	
    66da:	24 53       	incd	r4		
    66dc:	21 83       	decd	r1		
    66de:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    66e2:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    66e6:	1f 93       	cmp	#1,	r15	;r3 As==01
    66e8:	0e 24       	jz	$+30     	;abs 0x6706
    66ea:	2f 93       	cmp	#2,	r15	;r3 As==10
    66ec:	03 34       	jge	$+8      	;abs 0x66f4
    66ee:	0f 93       	tst	r15		
    66f0:	07 24       	jz	$+16     	;abs 0x6700
    66f2:	12 3c       	jmp	$+38     	;abs 0x6718
    66f4:	2f 93       	cmp	#2,	r15	;r3 As==10
    66f6:	0a 24       	jz	$+22     	;abs 0x670c
    66f8:	3f 90 03 00 	cmp	#3,	r15	;#0x0003
    66fc:	0a 24       	jz	$+22     	;abs 0x6712
    66fe:	0c 3c       	jmp	$+26     	;abs 0x6718
    6700:	b0 12 80 63 	call	#0x6380	
    6704:	0e 3c       	jmp	$+30     	;abs 0x6722
    6706:	b0 12 dc 63 	call	#0x63dc	
    670a:	0b 3c       	jmp	$+24     	;abs 0x6722
    670c:	b0 12 32 64 	call	#0x6432	
    6710:	08 3c       	jmp	$+18     	;abs 0x6722
    6712:	b0 12 4a 66 	call	#0x664a	
    6716:	05 3c       	jmp	$+12     	;abs 0x6722
    6718:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    671c:	b0 12 c4 66 	call	#0x66c4	
    6720:	03 43       	nop			
    6722:	21 53       	incd	r1		
    6724:	34 41       	pop	r4		
    6726:	30 41       	ret			

00006728 <ArbiterP__0__grantedTask__postTask>:
    6728:	04 12       	push	r4		
    672a:	04 41       	mov	r1,	r4	
    672c:	24 53       	incd	r4		
    672e:	21 83       	decd	r1		
    6730:	6f 43       	mov.b	#2,	r15	;r3 As==10
    6732:	b0 12 dc 6e 	call	#0x6edc	
    6736:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    673a:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    673e:	21 53       	incd	r1		
    6740:	34 41       	pop	r4		
    6742:	30 41       	ret			

00006744 <ArbiterP__0__ResourceRequested__default__requested>:
    6744:	04 12       	push	r4		
    6746:	04 41       	mov	r1,	r4	
    6748:	24 53       	incd	r4		
    674a:	21 83       	decd	r1		
    674c:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6750:	21 53       	incd	r1		
    6752:	34 41       	pop	r4		
    6754:	30 41       	ret			

00006756 <ArbiterP__0__ResourceRequested__requested>:
    6756:	04 12       	push	r4		
    6758:	04 41       	mov	r1,	r4	
    675a:	24 53       	incd	r4		
    675c:	21 83       	decd	r1		
    675e:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6762:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6766:	b0 12 44 67 	call	#0x6744	
    676a:	21 53       	incd	r1		
    676c:	34 41       	pop	r4		
    676e:	30 41       	ret			

00006770 <FcfsResourceQueueC__0__FcfsQueue__isEnqueued>:
    6770:	04 12       	push	r4		
    6772:	04 41       	mov	r1,	r4	
    6774:	24 53       	incd	r4		
    6776:	21 82       	sub	#4,	r1	;r2 As==10
    6778:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    677c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6780:	5f 4f 10 11 	mov.b	4368(r15),r15	;0x1110(r15)
    6784:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    6786:	05 20       	jnz	$+12     	;abs 0x6792
    6788:	5f 42 02 11 	mov.b	&0x1102,r15	
    678c:	5f 94 fc ff 	cmp.b	-4(r4),	r15	;0xfffc(r4)
    6790:	02 20       	jnz	$+6      	;abs 0x6796
    6792:	1f 43       	mov	#1,	r15	;r3 As==01
    6794:	01 3c       	jmp	$+4      	;abs 0x6798
    6796:	0f 43       	clr	r15		
    6798:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    679c:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    67a0:	21 52       	add	#4,	r1	;r2 As==10
    67a2:	34 41       	pop	r4		
    67a4:	30 41       	ret			

000067a6 <FcfsResourceQueueC__0__FcfsQueue__enqueue>:
    67a6:	04 12       	push	r4		
    67a8:	04 41       	mov	r1,	r4	
    67aa:	24 53       	incd	r4		
    67ac:	21 82       	sub	#4,	r1	;r2 As==10
    67ae:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    67b2:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    67b6:	b0 12 70 67 	call	#0x6770	
    67ba:	4f 93       	tst.b	r15		
    67bc:	16 20       	jnz	$+46     	;abs 0x67ea
    67be:	5f 42 01 11 	mov.b	&0x1101,r15	
    67c2:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    67c4:	04 20       	jnz	$+10     	;abs 0x67ce
    67c6:	d2 44 fc ff 01 11 	mov.b	-4(r4),	&0x1101	;0xfffc(r4)
    67cc:	06 3c       	jmp	$+14     	;abs 0x67da
    67ce:	5f 42 02 11 	mov.b	&0x1102,r15	
    67d2:	4f 4f       	mov.b	r15,	r15	
    67d4:	df 44 fc ff 10 11 	mov.b	-4(r4),	4368(r15);0xfffc(r4), 0x1110(r15)
    67da:	d2 44 fc ff 02 11 	mov.b	-4(r4),	&0x1102	;0xfffc(r4)
    67e0:	c4 43 fa ff 	mov.b	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    67e4:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    67e8:	05 3c       	jmp	$+12     	;abs 0x67f4
    67ea:	f4 40 05 00 fb ff 	mov.b	#5,	-5(r4)	;#0x0005, 0xfffb(r4)
    67f0:	5f 44 fb ff 	mov.b	-5(r4),	r15	;0xfffb(r4)
    67f4:	21 52       	add	#4,	r1	;r2 As==10
    67f6:	34 41       	pop	r4		
    67f8:	30 41       	ret			

000067fa <ArbiterP__0__Queue__enqueue>:
    67fa:	04 12       	push	r4		
    67fc:	04 41       	mov	r1,	r4	
    67fe:	24 53       	incd	r4		
    6800:	21 82       	sub	#4,	r1	;r2 As==10
    6802:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6806:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    680a:	b0 12 a6 67 	call	#0x67a6	
    680e:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    6812:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    6816:	21 52       	add	#4,	r1	;r2 As==10
    6818:	34 41       	pop	r4		
    681a:	30 41       	ret			

0000681c <AsyncDeferredPowerManagerP__0__ResourceDefaultOwner__requested>:
    681c:	04 12       	push	r4		
    681e:	04 41       	mov	r1,	r4	
    6820:	24 53       	incd	r4		
    6822:	d2 43 08 11 	mov.b	#1,	&0x1108	;r3 As==01
    6826:	b0 12 38 65 	call	#0x6538	
    682a:	b0 12 1e 65 	call	#0x651e	
    682e:	b0 12 f4 64 	call	#0x64f4	
    6832:	34 41       	pop	r4		
    6834:	30 41       	ret			

00006836 <ArbiterP__0__ResourceDefaultOwner__requested>:
    6836:	04 12       	push	r4		
    6838:	04 41       	mov	r1,	r4	
    683a:	24 53       	incd	r4		
    683c:	b0 12 1c 68 	call	#0x681c	
    6840:	34 41       	pop	r4		
    6842:	30 41       	ret			

00006844 <FcfsResourceQueueC__0__FcfsQueue__isEmpty>:
    6844:	04 12       	push	r4		
    6846:	04 41       	mov	r1,	r4	
    6848:	24 53       	incd	r4		
    684a:	21 83       	decd	r1		
    684c:	5e 42 01 11 	mov.b	&0x1101,r14	
    6850:	5f 43       	mov.b	#1,	r15	;r3 As==01
    6852:	7e 93       	cmp.b	#-1,	r14	;r3 As==11
    6854:	01 24       	jz	$+4      	;abs 0x6858
    6856:	4f 43       	clr.b	r15		
    6858:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    685c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6860:	21 53       	incd	r1		
    6862:	34 41       	pop	r4		
    6864:	30 41       	ret			

00006866 <ArbiterP__0__Queue__isEmpty>:
    6866:	04 12       	push	r4		
    6868:	04 41       	mov	r1,	r4	
    686a:	24 53       	incd	r4		
    686c:	21 83       	decd	r1		
    686e:	b0 12 44 68 	call	#0x6844	
    6872:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6876:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    687a:	21 53       	incd	r1		
    687c:	34 41       	pop	r4		
    687e:	30 41       	ret			

00006880 <FcfsResourceQueueC__0__FcfsQueue__dequeue>:
    6880:	04 12       	push	r4		
    6882:	04 41       	mov	r1,	r4	
    6884:	24 53       	incd	r4		
    6886:	21 82       	sub	#4,	r1	;r2 As==10
    6888:	5f 42 01 11 	mov.b	&0x1101,r15	
    688c:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    688e:	1a 24       	jz	$+54     	;abs 0x68c4
    6890:	d4 42 01 11 fa ff 	mov.b	&0x1101,-6(r4)	;0xfffa(r4)
    6896:	5f 42 01 11 	mov.b	&0x1101,r15	
    689a:	4f 4f       	mov.b	r15,	r15	
    689c:	5f 4f 10 11 	mov.b	4368(r15),r15	;0x1110(r15)
    68a0:	c2 4f 01 11 	mov.b	r15,	&0x1101	
    68a4:	5f 42 01 11 	mov.b	&0x1101,r15	
    68a8:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    68aa:	02 20       	jnz	$+6      	;abs 0x68b0
    68ac:	f2 43 02 11 	mov.b	#-1,	&0x1102	;r3 As==11
    68b0:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    68b4:	ff 43 10 11 	mov.b	#-1,	4368(r15);r3 As==11, 0x1110(r15)
    68b8:	d4 44 fa ff fb ff 	mov.b	-6(r4),	-5(r4)	;0xfffa(r4), 0xfffb(r4)
    68be:	5f 44 fb ff 	mov.b	-5(r4),	r15	;0xfffb(r4)
    68c2:	04 3c       	jmp	$+10     	;abs 0x68cc
    68c4:	f4 43 fc ff 	mov.b	#-1,	-4(r4)	;r3 As==11, 0xfffc(r4)
    68c8:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    68cc:	21 52       	add	#4,	r1	;r2 As==10
    68ce:	34 41       	pop	r4		
    68d0:	30 41       	ret			

000068d2 <ArbiterP__0__Queue__dequeue>:
    68d2:	04 12       	push	r4		
    68d4:	04 41       	mov	r1,	r4	
    68d6:	24 53       	incd	r4		
    68d8:	21 83       	decd	r1		
    68da:	b0 12 80 68 	call	#0x6880	
    68de:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    68e2:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    68e6:	21 53       	incd	r1		
    68e8:	34 41       	pop	r4		
    68ea:	30 41       	ret			

000068ec <ArbiterP__0__ResourceConfigure__default__unconfigure>:
    68ec:	04 12       	push	r4		
    68ee:	04 41       	mov	r1,	r4	
    68f0:	24 53       	incd	r4		
    68f2:	21 83       	decd	r1		
    68f4:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    68f8:	21 53       	incd	r1		
    68fa:	34 41       	pop	r4		
    68fc:	30 41       	ret			

000068fe <ArbiterP__0__ResourceConfigure__unconfigure>:
    68fe:	04 12       	push	r4		
    6900:	04 41       	mov	r1,	r4	
    6902:	24 53       	incd	r4		
    6904:	21 83       	decd	r1		
    6906:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    690a:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    690e:	b0 12 ec 68 	call	#0x68ec	
    6912:	21 53       	incd	r1		
    6914:	34 41       	pop	r4		
    6916:	30 41       	ret			

00006918 <AsyncDeferredPowerManagerP__0__timerTask__postTask>:
    6918:	04 12       	push	r4		
    691a:	04 41       	mov	r1,	r4	
    691c:	24 53       	incd	r4		
    691e:	21 83       	decd	r1		
    6920:	6f 42       	mov.b	#4,	r15	;r2 As==10
    6922:	b0 12 dc 6e 	call	#0x6edc	
    6926:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    692a:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    692e:	21 53       	incd	r1		
    6930:	34 41       	pop	r4		
    6932:	30 41       	ret			

00006934 <AsyncDeferredPowerManagerP__0__ResourceDefaultOwner__granted>:
    6934:	04 12       	push	r4		
    6936:	04 41       	mov	r1,	r4	
    6938:	24 53       	incd	r4		
    693a:	b0 12 18 69 	call	#0x6918	
    693e:	34 41       	pop	r4		
    6940:	30 41       	ret			

00006942 <ArbiterP__0__ResourceDefaultOwner__granted>:
    6942:	04 12       	push	r4		
    6944:	04 41       	mov	r1,	r4	
    6946:	24 53       	incd	r4		
    6948:	b0 12 34 69 	call	#0x6934	
    694c:	34 41       	pop	r4		
    694e:	30 41       	ret			

00006950 <VirtualizeTimerC__0__TimerFrom__fired>:
    6950:	04 12       	push	r4		
    6952:	04 41       	mov	r1,	r4	
    6954:	24 53       	incd	r4		
    6956:	b0 12 72 5e 	call	#0x5e72	
    695a:	b0 12 e6 73 	call	#0x73e6	
    695e:	34 41       	pop	r4		
    6960:	30 41       	ret			

00006962 <AlarmToTimerC__0__Timer__fired>:
    6962:	04 12       	push	r4		
    6964:	04 41       	mov	r1,	r4	
    6966:	24 53       	incd	r4		
    6968:	b0 12 50 69 	call	#0x6950	
    696c:	34 41       	pop	r4		
    696e:	30 41       	ret			

00006970 <TransformAlarmC__0__Alarm__getAlarm>:
    6970:	0b 12       	push	r11		
    6972:	0a 12       	push	r10		
    6974:	04 12       	push	r4		
    6976:	04 41       	mov	r1,	r4	
    6978:	34 50 06 00 	add	#6,	r4	;#0x0006
    697c:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    6980:	b0 12 3e 6d 	call	#0x6d3e	
    6984:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    6988:	1c 42 16 11 	mov	&0x1116,r12	
    698c:	1d 42 18 11 	mov	&0x1118,r13	
    6990:	1e 42 12 11 	mov	&0x1112,r14	
    6994:	1f 42 14 11 	mov	&0x1114,r15	
    6998:	0a 4c       	mov	r12,	r10	
    699a:	0b 4d       	mov	r13,	r11	
    699c:	0a 5e       	add	r14,	r10	
    699e:	0b 6f       	addc	r15,	r11	
    69a0:	84 4a f6 ff 	mov	r10,	-10(r4)	;0xfff6(r4)
    69a4:	84 4b f8 ff 	mov	r11,	-8(r4)	;0xfff8(r4)
    69a8:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    69ac:	b0 12 66 6d 	call	#0x6d66	
    69b0:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    69b4:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    69b8:	31 50 06 00 	add	#6,	r1	;#0x0006
    69bc:	34 41       	pop	r4		
    69be:	3a 41       	pop	r10		
    69c0:	3b 41       	pop	r11		
    69c2:	30 41       	ret			

000069c4 <AlarmToTimerC__0__Alarm__getAlarm>:
    69c4:	04 12       	push	r4		
    69c6:	04 41       	mov	r1,	r4	
    69c8:	24 53       	incd	r4		
    69ca:	21 82       	sub	#4,	r1	;r2 As==10
    69cc:	b0 12 70 69 	call	#0x6970	
    69d0:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    69d4:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    69d8:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    69dc:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    69e0:	21 52       	add	#4,	r1	;r2 As==10
    69e2:	34 41       	pop	r4		
    69e4:	30 41       	ret			

000069e6 <AlarmToTimerC__0__fired__runTask>:
    69e6:	0b 12       	push	r11		
    69e8:	0a 12       	push	r10		
    69ea:	04 12       	push	r4		
    69ec:	04 41       	mov	r1,	r4	
    69ee:	34 50 06 00 	add	#6,	r4	;#0x0006
    69f2:	5f 42 0f 11 	mov.b	&0x110f,r15	
    69f6:	4f 93       	tst.b	r15		
    69f8:	0c 20       	jnz	$+26     	;abs 0x6a12
    69fa:	1a 42 4a 11 	mov	&0x114a,r10	
    69fe:	1b 42 4c 11 	mov	&0x114c,r11	
    6a02:	b0 12 c4 69 	call	#0x69c4	
    6a06:	43 12       	push.b	#0		;r3 As==00
    6a08:	0c 4a       	mov	r10,	r12	
    6a0a:	0d 4b       	mov	r11,	r13	
    6a0c:	b0 12 02 61 	call	#0x6102	
    6a10:	21 53       	incd	r1		
    6a12:	b0 12 62 69 	call	#0x6962	
    6a16:	34 41       	pop	r4		
    6a18:	3a 41       	pop	r10		
    6a1a:	3b 41       	pop	r11		
    6a1c:	30 41       	ret			

00006a1e <ecombine>:
    6a1e:	04 12       	push	r4		
    6a20:	04 41       	mov	r1,	r4	
    6a22:	24 53       	incd	r4		
    6a24:	21 83       	decd	r1		
    6a26:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6a2a:	c4 4e fd ff 	mov.b	r14,	-3(r4)	;0xfffd(r4)
    6a2e:	d4 94 fc ff fd ff 	cmp.b	-4(r4),	-3(r4)	;0xfffc(r4), 0xfffd(r4)
    6a34:	03 20       	jnz	$+8      	;abs 0x6a3c
    6a36:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6a3a:	01 3c       	jmp	$+4      	;abs 0x6a3e
    6a3c:	5f 43       	mov.b	#1,	r15	;r3 As==01
    6a3e:	21 53       	incd	r1		
    6a40:	34 41       	pop	r4		
    6a42:	30 41       	ret			

00006a44 <Msp430TimerCapComP__3__CC2int>:
    6a44:	04 12       	push	r4		
    6a46:	04 41       	mov	r1,	r4	
    6a48:	24 53       	incd	r4		
    6a4a:	21 82       	sub	#4,	r1	;r2 As==10
    6a4c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    6a50:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    6a54:	94 44 fc ff fa ff 	mov	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    6a5a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    6a5e:	21 52       	add	#4,	r1	;r2 As==10
    6a60:	34 41       	pop	r4		
    6a62:	30 41       	ret			

00006a64 <Msp430TimerCapComP__3__compareControl>:
    6a64:	04 12       	push	r4		
    6a66:	04 41       	mov	r1,	r4	
    6a68:	24 53       	incd	r4		
    6a6a:	21 83       	decd	r1		
    6a6c:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc(r4)
    6a70:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    6a74:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    6a78:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    6a7c:	c4 4f fd ff 	mov.b	r15,	-3(r4)	;0xfffd(r4)
    6a80:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    6a84:	b0 12 44 6a 	call	#0x6a44	
    6a88:	21 53       	incd	r1		
    6a8a:	34 41       	pop	r4		
    6a8c:	30 41       	ret			

00006a8e <Msp430TimerCapComP__3__Control__setControlAsCompare>:
    6a8e:	0b 12       	push	r11		
    6a90:	04 12       	push	r4		
    6a92:	04 41       	mov	r1,	r4	
    6a94:	24 52       	add	#4,	r4	;r2 As==10
    6a96:	3b 40 82 01 	mov	#386,	r11	;#0x0182
    6a9a:	b0 12 64 6a 	call	#0x6a64	
    6a9e:	8b 4f 00 00 	mov	r15,	0(r11)	;0x0000(r11)
    6aa2:	34 41       	pop	r4		
    6aa4:	3b 41       	pop	r11		
    6aa6:	30 41       	ret			

00006aa8 <Msp430AlarmC__0__Msp430TimerControl__setControlAsCompare>:
    6aa8:	04 12       	push	r4		
    6aaa:	04 41       	mov	r1,	r4	
    6aac:	24 53       	incd	r4		
    6aae:	b0 12 8e 6a 	call	#0x6a8e	
    6ab2:	34 41       	pop	r4		
    6ab4:	30 41       	ret			

00006ab6 <Msp430AlarmC__0__Init__init>:
    6ab6:	04 12       	push	r4		
    6ab8:	04 41       	mov	r1,	r4	
    6aba:	24 53       	incd	r4		
    6abc:	b0 12 d4 44 	call	#0x44d4	
    6ac0:	b0 12 a8 6a 	call	#0x6aa8	
    6ac4:	4f 43       	clr.b	r15		
    6ac6:	34 41       	pop	r4		
    6ac8:	30 41       	ret			

00006aca <FcfsResourceQueueC__0__Init__init>:
    6aca:	04 12       	push	r4		
    6acc:	04 41       	mov	r1,	r4	
    6ace:	24 53       	incd	r4		
    6ad0:	f2 43 10 11 	mov.b	#-1,	&0x1110	;r3 As==11
    6ad4:	f2 43 11 11 	mov.b	#-1,	&0x1111	;r3 As==11
    6ad8:	4f 43       	clr.b	r15		
    6ada:	34 41       	pop	r4		
    6adc:	30 41       	ret			

00006ade <RealMainP__SoftwareInit__init>:
    6ade:	04 12       	push	r4		
    6ae0:	04 41       	mov	r1,	r4	
    6ae2:	24 53       	incd	r4		
    6ae4:	21 83       	decd	r1		
    6ae6:	b0 12 ca 6a 	call	#0x6aca	
    6aea:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6aee:	b0 12 b6 6a 	call	#0x6ab6	
    6af2:	4e 4f       	mov.b	r15,	r14	
    6af4:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6af8:	b0 12 1e 6a 	call	#0x6a1e	
    6afc:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6b00:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6b04:	21 53       	incd	r1		
    6b06:	34 41       	pop	r4		
    6b08:	30 41       	ret			

00006b0a <TestPowerManagerC__Boot__booted>:
    6b0a:	04 12       	push	r4		
    6b0c:	04 41       	mov	r1,	r4	
    6b0e:	24 53       	incd	r4		
    6b10:	b0 12 bc 64 	call	#0x64bc	
    6b14:	c2 43 4e 11 	mov.b	#0,	&0x114e	;r3 As==00
    6b18:	34 41       	pop	r4		
    6b1a:	30 41       	ret			

00006b1c <RealMainP__Boot__booted>:
    6b1c:	04 12       	push	r4		
    6b1e:	04 41       	mov	r1,	r4	
    6b20:	24 53       	incd	r4		
    6b22:	b0 12 0a 6b 	call	#0x6b0a	
    6b26:	34 41       	pop	r4		
    6b28:	30 41       	ret			

00006b2a <__nesc_disable_interrupt>:
    6b2a:	04 12       	push	r4		
    6b2c:	04 41       	mov	r1,	r4	
    6b2e:	24 53       	incd	r4		
    6b30:	32 c2       	dint			
    6b32:	03 43       	nop			
    6b34:	03 43       	nop			
    6b36:	34 41       	pop	r4		
    6b38:	30 41       	ret			

00006b3a <Msp430ClockP__McuPowerOverride__lowestState>:
    6b3a:	04 12       	push	r4		
    6b3c:	04 41       	mov	r1,	r4	
    6b3e:	24 53       	incd	r4		
    6b40:	6f 42       	mov.b	#4,	r15	;r2 As==10
    6b42:	34 41       	pop	r4		
    6b44:	30 41       	ret			

00006b46 <McuSleepC__McuPowerOverride__lowestState>:
    6b46:	04 12       	push	r4		
    6b48:	04 41       	mov	r1,	r4	
    6b4a:	24 53       	incd	r4		
    6b4c:	21 83       	decd	r1		
    6b4e:	b0 12 3a 6b 	call	#0x6b3a	
    6b52:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6b56:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6b5a:	21 53       	incd	r1		
    6b5c:	34 41       	pop	r4		
    6b5e:	30 41       	ret			

00006b60 <McuSleepC__getPowerState>:
    6b60:	04 12       	push	r4		
    6b62:	04 41       	mov	r1,	r4	
    6b64:	24 53       	incd	r4		
    6b66:	21 83       	decd	r1		
    6b68:	f4 40 05 00 fc ff 	mov.b	#5,	-4(r4)	;#0x0005, 0xfffc(r4)
    6b6e:	1f 42 62 01 	mov	&0x0162,r15	
    6b72:	3f f0 10 00 	and	#16,	r15	;#0x0010
    6b76:	0f 93       	tst	r15		
    6b78:	0c 20       	jnz	$+26     	;abs 0x6b92
    6b7a:	1f 42 64 01 	mov	&0x0164,r15	
    6b7e:	3f f0 10 00 	and	#16,	r15	;#0x0010
    6b82:	0f 93       	tst	r15		
    6b84:	06 20       	jnz	$+14     	;abs 0x6b92
    6b86:	1f 42 66 01 	mov	&0x0166,r15	
    6b8a:	3f f0 10 00 	and	#16,	r15	;#0x0010
    6b8e:	0f 93       	tst	r15		
    6b90:	07 24       	jz	$+16     	;abs 0x6ba0
    6b92:	1f 42 60 01 	mov	&0x0160,r15	
    6b96:	3f f0 00 03 	and	#768,	r15	;#0x0300
    6b9a:	3f 90 00 02 	cmp	#512,	r15	;#0x0200
    6b9e:	3e 24       	jz	$+126    	;abs 0x6c1c
    6ba0:	5f 42 04 00 	mov.b	&0x0004,r15	
    6ba4:	4f 4f       	mov.b	r15,	r15	
    6ba6:	3f f0 c0 00 	and	#192,	r15	;#0x00c0
    6baa:	0f 93       	tst	r15		
    6bac:	07 24       	jz	$+16     	;abs 0x6bbc
    6bae:	5f 42 71 00 	mov.b	&0x0071,r15	
    6bb2:	4f 4f       	mov.b	r15,	r15	
    6bb4:	3f f0 20 00 	and	#32,	r15	;#0x0020
    6bb8:	0f 93       	tst	r15		
    6bba:	30 20       	jnz	$+98     	;abs 0x6c1c
    6bbc:	5f 42 05 00 	mov.b	&0x0005,r15	
    6bc0:	4f 4f       	mov.b	r15,	r15	
    6bc2:	3f f0 30 00 	and	#48,	r15	;#0x0030
    6bc6:	0f 93       	tst	r15		
    6bc8:	07 24       	jz	$+16     	;abs 0x6bd8
    6bca:	5f 42 79 00 	mov.b	&0x0079,r15	
    6bce:	4f 4f       	mov.b	r15,	r15	
    6bd0:	3f f0 20 00 	and	#32,	r15	;#0x0020
    6bd4:	0f 93       	tst	r15		
    6bd6:	22 20       	jnz	$+70     	;abs 0x6c1c
    6bd8:	5f 42 70 00 	mov.b	&0x0070,r15	
    6bdc:	4f 4f       	mov.b	r15,	r15	
    6bde:	1f f3       	and	#1,	r15	;r3 As==01
    6be0:	4f 4f       	mov.b	r15,	r15	
    6be2:	4f 93       	tst.b	r15		
    6be4:	1d 24       	jz	$+60     	;abs 0x6c20
    6be6:	5f 42 71 00 	mov.b	&0x0071,r15	
    6bea:	4f 4f       	mov.b	r15,	r15	
    6bec:	3f f0 20 00 	and	#32,	r15	;#0x0020
    6bf0:	0f 93       	tst	r15		
    6bf2:	16 24       	jz	$+46     	;abs 0x6c20
    6bf4:	5f 42 72 00 	mov.b	&0x0072,r15	
    6bf8:	4f 4f       	mov.b	r15,	r15	
    6bfa:	3f f0 20 00 	and	#32,	r15	;#0x0020
    6bfe:	0f 93       	tst	r15		
    6c00:	0f 24       	jz	$+32     	;abs 0x6c20
    6c02:	5f 42 70 00 	mov.b	&0x0070,r15	
    6c06:	4f 4f       	mov.b	r15,	r15	
    6c08:	2f f2       	and	#4,	r15	;r2 As==10
    6c0a:	0f 93       	tst	r15		
    6c0c:	09 24       	jz	$+20     	;abs 0x6c20
    6c0e:	5f 42 70 00 	mov.b	&0x0070,r15	
    6c12:	4f 4f       	mov.b	r15,	r15	
    6c14:	3f f0 20 00 	and	#32,	r15	;#0x0020
    6c18:	0f 93       	tst	r15		
    6c1a:	02 24       	jz	$+6      	;abs 0x6c20
    6c1c:	e4 43 fc ff 	mov.b	#2,	-4(r4)	;r3 As==10, 0xfffc(r4)
    6c20:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6c24:	21 53       	incd	r1		
    6c26:	34 41       	pop	r4		
    6c28:	30 41       	ret			

00006c2a <mcombine>:
    6c2a:	04 12       	push	r4		
    6c2c:	04 41       	mov	r1,	r4	
    6c2e:	24 53       	incd	r4		
    6c30:	21 83       	decd	r1		
    6c32:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6c36:	c4 4e fd ff 	mov.b	r14,	-3(r4)	;0xfffd(r4)
    6c3a:	5e 44 fc ff 	mov.b	-4(r4),	r14	;0xfffc(r4)
    6c3e:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    6c42:	4e 9f       	cmp.b	r15,	r14	
    6c44:	01 2c       	jc	$+4      	;abs 0x6c48
    6c46:	4f 4e       	mov.b	r14,	r15	
    6c48:	21 53       	incd	r1		
    6c4a:	34 41       	pop	r4		
    6c4c:	30 41       	ret			

00006c4e <McuSleepC__computePowerState>:
    6c4e:	0b 12       	push	r11		
    6c50:	04 12       	push	r4		
    6c52:	04 41       	mov	r1,	r4	
    6c54:	24 52       	add	#4,	r4	;r2 As==10
    6c56:	b0 12 46 6b 	call	#0x6b46	
    6c5a:	4b 4f       	mov.b	r15,	r11	
    6c5c:	b0 12 60 6b 	call	#0x6b60	
    6c60:	4e 4b       	mov.b	r11,	r14	
    6c62:	b0 12 2a 6c 	call	#0x6c2a	
    6c66:	c2 4f 04 11 	mov.b	r15,	&0x1104	
    6c6a:	34 41       	pop	r4		
    6c6c:	3b 41       	pop	r11		
    6c6e:	30 41       	ret			

00006c70 <McuSleepC__McuSleep__sleep>:
    6c70:	04 12       	push	r4		
    6c72:	04 41       	mov	r1,	r4	
    6c74:	24 53       	incd	r4		
    6c76:	21 83       	decd	r1		
    6c78:	5f 42 00 11 	mov.b	&0x1100,r15	
    6c7c:	4f 93       	tst.b	r15		
    6c7e:	02 24       	jz	$+6      	;abs 0x6c84
    6c80:	b0 12 4e 6c 	call	#0x6c4e	
    6c84:	5f 42 04 11 	mov.b	&0x1104,r15	
    6c88:	4f 4f       	mov.b	r15,	r15	
    6c8a:	0f 5f       	rla	r15		
    6c8c:	3f 50 bc 76 	add	#30396,	r15	;#0x76bc
    6c90:	2f 4f       	mov	@r15,	r15	
    6c92:	3f d2       	bis	#8,	r15	;r2 As==11
    6c94:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    6c98:	12 d4 fc ff 	bis	-4(r4),	r2	;0xfffc(r4)
    6c9c:	b0 12 2a 6b 	call	#0x6b2a	
    6ca0:	21 53       	incd	r1		
    6ca2:	34 41       	pop	r4		
    6ca4:	30 41       	ret			

00006ca6 <SchedulerBasicP__McuSleep__sleep>:
    6ca6:	04 12       	push	r4		
    6ca8:	04 41       	mov	r1,	r4	
    6caa:	24 53       	incd	r4		
    6cac:	b0 12 70 6c 	call	#0x6c70	
    6cb0:	34 41       	pop	r4		
    6cb2:	30 41       	ret			

00006cb4 <SchedulerBasicP__popTask>:
    6cb4:	04 12       	push	r4		
    6cb6:	04 41       	mov	r1,	r4	
    6cb8:	24 53       	incd	r4		
    6cba:	21 83       	decd	r1		
    6cbc:	5f 42 4f 11 	mov.b	&0x114f,r15	
    6cc0:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    6cc2:	17 24       	jz	$+48     	;abs 0x6cf2
    6cc4:	d4 42 4f 11 fc ff 	mov.b	&0x114f,-4(r4)	;0xfffc(r4)
    6cca:	5f 42 4f 11 	mov.b	&0x114f,r15	
    6cce:	4f 4f       	mov.b	r15,	r15	
    6cd0:	5f 4f 0a 11 	mov.b	4362(r15),r15	;0x110a(r15)
    6cd4:	c2 4f 4f 11 	mov.b	r15,	&0x114f	
    6cd8:	5f 42 4f 11 	mov.b	&0x114f,r15	
    6cdc:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    6cde:	02 20       	jnz	$+6      	;abs 0x6ce4
    6ce0:	f2 43 50 11 	mov.b	#-1,	&0x1150	;r3 As==11
    6ce4:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6ce8:	ff 43 0a 11 	mov.b	#-1,	4362(r15);r3 As==11, 0x110a(r15)
    6cec:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6cf0:	01 3c       	jmp	$+4      	;abs 0x6cf4
    6cf2:	7f 43       	mov.b	#-1,	r15	;r3 As==11
    6cf4:	21 53       	incd	r1		
    6cf6:	34 41       	pop	r4		
    6cf8:	30 41       	ret			

00006cfa <SchedulerBasicP__Scheduler__taskLoop>:
    6cfa:	04 12       	push	r4		
    6cfc:	04 41       	mov	r1,	r4	
    6cfe:	24 53       	incd	r4		
    6d00:	21 83       	decd	r1		
    6d02:	b0 12 3e 6d 	call	#0x6d3e	
    6d06:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6d0a:	02 3c       	jmp	$+6      	;abs 0x6d10
    6d0c:	b0 12 a6 6c 	call	#0x6ca6	
    6d10:	b0 12 b4 6c 	call	#0x6cb4	
    6d14:	c4 4f fd ff 	mov.b	r15,	-3(r4)	;0xfffd(r4)
    6d18:	f4 93 fd ff 	cmp.b	#-1,	-3(r4)	;r3 As==11, 0xfffd(r4)
    6d1c:	f7 27       	jz	$-16     	;abs 0x6d0c
    6d1e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6d22:	b0 12 66 6d 	call	#0x6d66	
    6d26:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    6d2a:	b0 12 be 72 	call	#0x72be	
    6d2e:	e9 3f       	jmp	$-44     	;abs 0x6d02

00006d30 <RealMainP__Scheduler__taskLoop>:
    6d30:	04 12       	push	r4		
    6d32:	04 41       	mov	r1,	r4	
    6d34:	24 53       	incd	r4		
    6d36:	b0 12 fa 6c 	call	#0x6cfa	
    6d3a:	34 41       	pop	r4		
    6d3c:	30 41       	ret			

00006d3e <__nesc_atomic_start>:
    6d3e:	04 12       	push	r4		
    6d40:	04 41       	mov	r1,	r4	
    6d42:	24 53       	incd	r4		
    6d44:	21 83       	decd	r1		
    6d46:	0f 42       	mov	r2,	r15	
    6d48:	0e 4f       	mov	r15,	r14	
    6d4a:	3e f2       	and	#8,	r14	;r2 As==11
    6d4c:	5f 43       	mov.b	#1,	r15	;r3 As==01
    6d4e:	0e 93       	tst	r14		
    6d50:	01 20       	jnz	$+4      	;abs 0x6d54
    6d52:	4f 43       	clr.b	r15		
    6d54:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6d58:	b0 12 2a 6b 	call	#0x6b2a	
    6d5c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6d60:	21 53       	incd	r1		
    6d62:	34 41       	pop	r4		
    6d64:	30 41       	ret			

00006d66 <__nesc_atomic_end>:
    6d66:	04 12       	push	r4		
    6d68:	04 41       	mov	r1,	r4	
    6d6a:	24 53       	incd	r4		
    6d6c:	21 83       	decd	r1		
    6d6e:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6d72:	c4 93 fc ff 	tst.b	-4(r4)		;0xfffc(r4)
    6d76:	02 24       	jz	$+6      	;abs 0x6d7c
    6d78:	b0 12 8e 40 	call	#0x408e	
    6d7c:	21 53       	incd	r1		
    6d7e:	34 41       	pop	r4		
    6d80:	30 41       	ret			

00006d82 <sig_TIMERA0_VECTOR>:
    6d82:	0f 12       	push	r15		
    6d84:	0e 12       	push	r14		
    6d86:	0d 12       	push	r13		
    6d88:	0c 12       	push	r12		
    6d8a:	04 12       	push	r4		
    6d8c:	04 41       	mov	r1,	r4	
    6d8e:	34 50 0a 00 	add	#10,	r4	;#0x000a
    6d92:	b0 12 50 41 	call	#0x4150	
    6d96:	34 41       	pop	r4		
    6d98:	3c 41       	pop	r12		
    6d9a:	3d 41       	pop	r13		
    6d9c:	3e 41       	pop	r14		
    6d9e:	3f 41       	pop	r15		
    6da0:	b1 c0 f0 00 00 00 	bic	#240,	0(r1)	;#0x00f0, 0x0000(r1)
    6da6:	00 13       	reti			

00006da8 <Msp430TimerCapComP__0__Event__fired>:
    6da8:	04 12       	push	r4		
    6daa:	04 41       	mov	r1,	r4	
    6dac:	24 53       	incd	r4		
    6dae:	b0 12 7e 41 	call	#0x417e	
    6db2:	8f 10       	swpb	r15		
    6db4:	4f 4f       	mov.b	r15,	r15	
    6db6:	4f 4f       	mov.b	r15,	r15	
    6db8:	5f f3       	and.b	#1,	r15	;r3 As==01
    6dba:	4f 93       	tst.b	r15		
    6dbc:	05 24       	jz	$+12     	;abs 0x6dc8
    6dbe:	b0 12 be 41 	call	#0x41be	
    6dc2:	b0 12 a4 41 	call	#0x41a4	
    6dc6:	02 3c       	jmp	$+6      	;abs 0x6dcc
    6dc8:	b0 12 d8 41 	call	#0x41d8	
    6dcc:	34 41       	pop	r4		
    6dce:	30 41       	ret			

00006dd0 <Msp430TimerCapComP__1__Event__fired>:
    6dd0:	04 12       	push	r4		
    6dd2:	04 41       	mov	r1,	r4	
    6dd4:	24 53       	incd	r4		
    6dd6:	b0 12 06 42 	call	#0x4206	
    6dda:	8f 10       	swpb	r15		
    6ddc:	4f 4f       	mov.b	r15,	r15	
    6dde:	4f 4f       	mov.b	r15,	r15	
    6de0:	5f f3       	and.b	#1,	r15	;r3 As==01
    6de2:	4f 93       	tst.b	r15		
    6de4:	05 24       	jz	$+12     	;abs 0x6df0
    6de6:	b0 12 46 42 	call	#0x4246	
    6dea:	b0 12 2c 42 	call	#0x422c	
    6dee:	02 3c       	jmp	$+6      	;abs 0x6df4
    6df0:	b0 12 60 42 	call	#0x4260	
    6df4:	34 41       	pop	r4		
    6df6:	30 41       	ret			

00006df8 <Msp430TimerCapComP__2__Event__fired>:
    6df8:	04 12       	push	r4		
    6dfa:	04 41       	mov	r1,	r4	
    6dfc:	24 53       	incd	r4		
    6dfe:	b0 12 8e 42 	call	#0x428e	
    6e02:	8f 10       	swpb	r15		
    6e04:	4f 4f       	mov.b	r15,	r15	
    6e06:	4f 4f       	mov.b	r15,	r15	
    6e08:	5f f3       	and.b	#1,	r15	;r3 As==01
    6e0a:	4f 93       	tst.b	r15		
    6e0c:	05 24       	jz	$+12     	;abs 0x6e18
    6e0e:	b0 12 ce 42 	call	#0x42ce	
    6e12:	b0 12 b4 42 	call	#0x42b4	
    6e16:	02 3c       	jmp	$+6      	;abs 0x6e1c
    6e18:	b0 12 e8 42 	call	#0x42e8	
    6e1c:	34 41       	pop	r4		
    6e1e:	30 41       	ret			

00006e20 <sig_TIMERA1_VECTOR>:
    6e20:	0f 12       	push	r15		
    6e22:	0e 12       	push	r14		
    6e24:	0d 12       	push	r13		
    6e26:	0c 12       	push	r12		
    6e28:	04 12       	push	r4		
    6e2a:	04 41       	mov	r1,	r4	
    6e2c:	34 50 0a 00 	add	#10,	r4	;#0x000a
    6e30:	b0 12 1c 43 	call	#0x431c	
    6e34:	34 41       	pop	r4		
    6e36:	3c 41       	pop	r12		
    6e38:	3d 41       	pop	r13		
    6e3a:	3e 41       	pop	r14		
    6e3c:	3f 41       	pop	r15		
    6e3e:	b1 c0 f0 00 00 00 	bic	#240,	0(r1)	;#0x00f0, 0x0000(r1)
    6e44:	00 13       	reti			

00006e46 <sig_TIMERB0_VECTOR>:
    6e46:	0f 12       	push	r15		
    6e48:	0e 12       	push	r14		
    6e4a:	0d 12       	push	r13		
    6e4c:	0c 12       	push	r12		
    6e4e:	04 12       	push	r4		
    6e50:	04 41       	mov	r1,	r4	
    6e52:	34 50 0a 00 	add	#10,	r4	;#0x000a
    6e56:	b0 12 3a 43 	call	#0x433a	
    6e5a:	34 41       	pop	r4		
    6e5c:	3c 41       	pop	r12		
    6e5e:	3d 41       	pop	r13		
    6e60:	3e 41       	pop	r14		
    6e62:	3f 41       	pop	r15		
    6e64:	b1 c0 f0 00 00 00 	bic	#240,	0(r1)	;#0x00f0, 0x0000(r1)
    6e6a:	00 13       	reti			

00006e6c <Msp430TimerP__1__Event__default__fired>:
    6e6c:	04 12       	push	r4		
    6e6e:	04 41       	mov	r1,	r4	
    6e70:	24 53       	incd	r4		
    6e72:	21 83       	decd	r1		
    6e74:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6e78:	21 53       	incd	r1		
    6e7a:	34 41       	pop	r4		
    6e7c:	30 41       	ret			

00006e7e <Msp430TimerP__1__Event__fired>:
    6e7e:	04 12       	push	r4		
    6e80:	04 41       	mov	r1,	r4	
    6e82:	24 53       	incd	r4		
    6e84:	21 83       	decd	r1		
    6e86:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6e8a:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6e8e:	3f 92       	cmp	#8,	r15	;r2 As==11
    6e90:	1d 2c       	jc	$+60     	;abs 0x6ecc
    6e92:	0f 5f       	rla	r15		
    6e94:	3f 50 c8 76 	add	#30408,	r15	;#0x76c8
    6e98:	2f 4f       	mov	@r15,	r15	
    6e9a:	00 4f       	br	r15		
    6e9c:	b0 12 72 45 	call	#0x4572	
    6ea0:	1a 3c       	jmp	$+54     	;abs 0x6ed6
    6ea2:	b0 12 c4 48 	call	#0x48c4	
    6ea6:	17 3c       	jmp	$+48     	;abs 0x6ed6
    6ea8:	b0 12 74 49 	call	#0x4974	
    6eac:	14 3c       	jmp	$+42     	;abs 0x6ed6
    6eae:	b0 12 24 4a 	call	#0x4a24	
    6eb2:	11 3c       	jmp	$+36     	;abs 0x6ed6
    6eb4:	b0 12 d4 4a 	call	#0x4ad4	
    6eb8:	0e 3c       	jmp	$+30     	;abs 0x6ed6
    6eba:	b0 12 84 4b 	call	#0x4b84	
    6ebe:	0b 3c       	jmp	$+24     	;abs 0x6ed6
    6ec0:	b0 12 34 4c 	call	#0x4c34	
    6ec4:	08 3c       	jmp	$+18     	;abs 0x6ed6
    6ec6:	b0 12 40 44 	call	#0x4440	
    6eca:	05 3c       	jmp	$+12     	;abs 0x6ed6
    6ecc:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6ed0:	b0 12 6c 6e 	call	#0x6e6c	
    6ed4:	03 43       	nop			
    6ed6:	21 53       	incd	r1		
    6ed8:	34 41       	pop	r4		
    6eda:	30 41       	ret			

00006edc <SchedulerBasicP__TaskBasic__postTask>:
    6edc:	04 12       	push	r4		
    6ede:	04 41       	mov	r1,	r4	
    6ee0:	24 53       	incd	r4		
    6ee2:	21 82       	sub	#4,	r1	;r2 As==10
    6ee4:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    6ee8:	b0 12 3e 6d 	call	#0x6d3e	
    6eec:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    6ef0:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    6ef4:	b0 12 ca 45 	call	#0x45ca	
    6ef8:	4f 93       	tst.b	r15		
    6efa:	02 24       	jz	$+6      	;abs 0x6f00
    6efc:	4f 43       	clr.b	r15		
    6efe:	02 3c       	jmp	$+6      	;abs 0x6f04
    6f00:	7f 40 05 00 	mov.b	#5,	r15	;#0x0005
    6f04:	c4 4f fb ff 	mov.b	r15,	-5(r4)	;0xfffb(r4)
    6f08:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    6f0c:	b0 12 66 6d 	call	#0x6d66	
    6f10:	5f 44 fb ff 	mov.b	-5(r4),	r15	;0xfffb(r4)
    6f14:	21 52       	add	#4,	r1	;r2 As==10
    6f16:	34 41       	pop	r4		
    6f18:	30 41       	ret			

00006f1a <TransformAlarmC__0__set_alarm>:
    6f1a:	0b 12       	push	r11		
    6f1c:	0a 12       	push	r10		
    6f1e:	04 12       	push	r4		
    6f20:	04 41       	mov	r1,	r4	
    6f22:	34 50 06 00 	add	#6,	r4	;#0x0006
    6f26:	31 50 f4 ff 	add	#-12,	r1	;#0xfff4
    6f2a:	b0 12 12 5e 	call	#0x5e12	
    6f2e:	84 4e f2 ff 	mov	r14,	-14(r4)	;0xfff2(r4)
    6f32:	84 4f f4 ff 	mov	r15,	-12(r4)	;0xfff4(r4)
    6f36:	1c 42 16 11 	mov	&0x1116,r12	
    6f3a:	1d 42 18 11 	mov	&0x1118,r13	
    6f3e:	1e 42 12 11 	mov	&0x1112,r14	
    6f42:	1f 42 14 11 	mov	&0x1114,r15	
    6f46:	0a 4c       	mov	r12,	r10	
    6f48:	0b 4d       	mov	r13,	r11	
    6f4a:	0a 5e       	add	r14,	r10	
    6f4c:	0b 6f       	addc	r15,	r11	
    6f4e:	84 4a f6 ff 	mov	r10,	-10(r4)	;0xfff6(r4)
    6f52:	84 4b f8 ff 	mov	r11,	-8(r4)	;0xfff8(r4)
    6f56:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    6f5a:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    6f5e:	1e 84 f2 ff 	sub	-14(r4),r14	;0xfff2(r4)
    6f62:	1f 74 f4 ff 	subc	-12(r4),r15	;0xfff4(r4)
    6f66:	84 4e ee ff 	mov	r14,	-18(r4)	;0xffee(r4)
    6f6a:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
    6f6e:	1e 42 16 11 	mov	&0x1116,r14	
    6f72:	1f 42 18 11 	mov	&0x1118,r15	
    6f76:	84 9f f4 ff 	cmp	r15,	-12(r4)	;0xfff4(r4)
    6f7a:	24 28       	jnc	$+74     	;abs 0x6fc4
    6f7c:	84 9f f4 ff 	cmp	r15,	-12(r4)	;0xfff4(r4)
    6f80:	03 20       	jnz	$+8      	;abs 0x6f88
    6f82:	84 9e f2 ff 	cmp	r14,	-14(r4)	;0xfff2(r4)
    6f86:	1e 28       	jnc	$+62     	;abs 0x6fc4
    6f88:	1e 42 16 11 	mov	&0x1116,r14	
    6f8c:	1f 42 18 11 	mov	&0x1118,r15	
    6f90:	84 9f f8 ff 	cmp	r15,	-8(r4)	;0xfff8(r4)
    6f94:	34 28       	jnc	$+106    	;abs 0x6ffe
    6f96:	84 9f f8 ff 	cmp	r15,	-8(r4)	;0xfff8(r4)
    6f9a:	03 20       	jnz	$+8      	;abs 0x6fa2
    6f9c:	84 9e f6 ff 	cmp	r14,	-10(r4)	;0xfff6(r4)
    6fa0:	2e 28       	jnc	$+94     	;abs 0x6ffe
    6fa2:	94 94 f8 ff f4 ff 	cmp	-8(r4),	-12(r4)	;0xfff8(r4), 0xfff4(r4)
    6fa8:	2a 28       	jnc	$+86     	;abs 0x6ffe
    6faa:	94 94 f8 ff f4 ff 	cmp	-8(r4),	-12(r4)	;0xfff8(r4), 0xfff4(r4)
    6fb0:	04 20       	jnz	$+10     	;abs 0x6fba
    6fb2:	94 94 f6 ff f2 ff 	cmp	-10(r4),-14(r4)	;0xfff6(r4), 0xfff2(r4)
    6fb8:	22 28       	jnc	$+70     	;abs 0x6ffe
    6fba:	84 43 ee ff 	mov	#0,	-18(r4)	;r3 As==00, 0xffee(r4)
    6fbe:	84 43 f0 ff 	mov	#0,	-16(r4)	;r3 As==00, 0xfff0(r4)
    6fc2:	1d 3c       	jmp	$+60     	;abs 0x6ffe
    6fc4:	1e 42 16 11 	mov	&0x1116,r14	
    6fc8:	1f 42 18 11 	mov	&0x1118,r15	
    6fcc:	84 9f f8 ff 	cmp	r15,	-8(r4)	;0xfff8(r4)
    6fd0:	06 28       	jnc	$+14     	;abs 0x6fde
    6fd2:	1f 94 f8 ff 	cmp	-8(r4),	r15	;0xfff8(r4)
    6fd6:	0f 28       	jnc	$+32     	;abs 0x6ff6
    6fd8:	84 9e f6 ff 	cmp	r14,	-10(r4)	;0xfff6(r4)
    6fdc:	0c 2c       	jc	$+26     	;abs 0x6ff6
    6fde:	94 94 f8 ff f4 ff 	cmp	-8(r4),	-12(r4)	;0xfff8(r4), 0xfff4(r4)
    6fe4:	0c 28       	jnc	$+26     	;abs 0x6ffe
    6fe6:	94 94 f8 ff f4 ff 	cmp	-8(r4),	-12(r4)	;0xfff8(r4), 0xfff4(r4)
    6fec:	04 20       	jnz	$+10     	;abs 0x6ff6
    6fee:	94 94 f6 ff f2 ff 	cmp	-10(r4),-14(r4)	;0xfff6(r4), 0xfff2(r4)
    6ff4:	04 28       	jnc	$+10     	;abs 0x6ffe
    6ff6:	84 43 ee ff 	mov	#0,	-18(r4)	;r3 As==00, 0xffee(r4)
    6ffa:	84 43 f0 ff 	mov	#0,	-16(r4)	;r3 As==00, 0xfff0(r4)
    6ffe:	84 93 f0 ff 	tst	-16(r4)	;0xfff0(r4)
    7002:	23 28       	jnc	$+72     	;abs 0x704a
    7004:	84 93 f0 ff 	tst	-16(r4)	;0xfff0(r4)
    7008:	04 20       	jnz	$+10     	;abs 0x7012
    700a:	b4 90 01 04 ee ff 	cmp	#1025,	-18(r4)	;#0x0401, 0xffee(r4)
    7010:	1c 28       	jnc	$+58     	;abs 0x704a
    7012:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    7016:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    701a:	3e 50 00 04 	add	#1024,	r14	;#0x0400
    701e:	0f 63       	adc	r15		
    7020:	82 4e 16 11 	mov	r14,	&0x1116	
    7024:	82 4f 18 11 	mov	r15,	&0x1118	
    7028:	1e 44 ee ff 	mov	-18(r4),r14	;0xffee(r4)
    702c:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    7030:	3e 50 00 fc 	add	#-1024,	r14	;#0xfc00
    7034:	3f 63       	addc	#-1,	r15	;r3 As==11
    7036:	82 4e 12 11 	mov	r14,	&0x1112	
    703a:	82 4f 14 11 	mov	r15,	&0x1114	
    703e:	b4 40 00 04 ee ff 	mov	#1024,	-18(r4)	;#0x0400, 0xffee(r4)
    7044:	84 43 f0 ff 	mov	#0,	-16(r4)	;r3 As==00, 0xfff0(r4)
    7048:	12 3c       	jmp	$+38     	;abs 0x706e
    704a:	1c 42 16 11 	mov	&0x1116,r12	
    704e:	1d 42 18 11 	mov	&0x1118,r13	
    7052:	1e 42 12 11 	mov	&0x1112,r14	
    7056:	1f 42 14 11 	mov	&0x1114,r15	
    705a:	0e 5c       	add	r12,	r14	
    705c:	0f 6d       	addc	r13,	r15	
    705e:	82 4e 16 11 	mov	r14,	&0x1116	
    7062:	82 4f 18 11 	mov	r15,	&0x1118	
    7066:	82 43 12 11 	mov	#0,	&0x1112	;r3 As==00
    706a:	82 43 14 11 	mov	#0,	&0x1114	;r3 As==00
    706e:	1f 44 ee ff 	mov	-18(r4),r15	;0xffee(r4)
    7072:	0e 4f       	mov	r15,	r14	
    7074:	0e 5e       	rla	r14		
    7076:	0e 5e       	rla	r14		
    7078:	0e 5e       	rla	r14		
    707a:	0e 5e       	rla	r14		
    707c:	0e 5e       	rla	r14		
    707e:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    7082:	0f 5f       	rla	r15		
    7084:	0f 5f       	rla	r15		
    7086:	0f 5f       	rla	r15		
    7088:	0f 5f       	rla	r15		
    708a:	0f 5f       	rla	r15		
    708c:	b0 12 1a 48 	call	#0x481a	
    7090:	31 50 0c 00 	add	#12,	r1	;#0x000c
    7094:	34 41       	pop	r4		
    7096:	3a 41       	pop	r10		
    7098:	3b 41       	pop	r11		
    709a:	30 41       	ret			

0000709c <TransformCounterC__0__Counter__get>:
    709c:	04 12       	push	r4		
    709e:	04 41       	mov	r1,	r4	
    70a0:	24 53       	incd	r4		
    70a2:	31 50 ec ff 	add	#-20,	r1	;#0xffec
    70a6:	84 43 f0 ff 	mov	#0,	-16(r4)	;r3 As==00, 0xfff0(r4)
    70aa:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2(r4)
    70ae:	b0 12 3e 6d 	call	#0x6d3e	
    70b2:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    70b6:	94 42 1a 11 ea ff 	mov	&0x111a,-22(r4)	;0xffea(r4)
    70bc:	94 42 1c 11 ec ff 	mov	&0x111c,-20(r4)	;0xffec(r4)
    70c2:	b0 12 3e 46 	call	#0x463e	
    70c6:	84 4f ee ff 	mov	r15,	-18(r4)	;0xffee(r4)
    70ca:	b0 12 94 46 	call	#0x4694	
    70ce:	4f 93       	tst.b	r15		
    70d0:	08 24       	jz	$+18     	;abs 0x70e2
    70d2:	94 53 ea ff 	inc	-22(r4)	;0xffea(r4)
    70d6:	84 63 ec ff 	adc	-20(r4)	;0xffec(r4)
    70da:	b0 12 3e 46 	call	#0x463e	
    70de:	84 4f ee ff 	mov	r15,	-18(r4)	;0xffee(r4)
    70e2:	94 44 ea ff f6 ff 	mov	-22(r4),-10(r4)	;0xffea(r4), 0xfff6(r4)
    70e8:	94 44 ec ff f8 ff 	mov	-20(r4),-8(r4)	;0xffec(r4), 0xfff8(r4)
    70ee:	1f 44 ee ff 	mov	-18(r4),r15	;0xffee(r4)
    70f2:	12 c3       	clrc			
    70f4:	0f 10       	rrc	r15		
    70f6:	12 c3       	clrc			
    70f8:	0f 10       	rrc	r15		
    70fa:	12 c3       	clrc			
    70fc:	0f 10       	rrc	r15		
    70fe:	12 c3       	clrc			
    7100:	0f 10       	rrc	r15		
    7102:	12 c3       	clrc			
    7104:	0f 10       	rrc	r15		
    7106:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    710a:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc(r4)
    710e:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfff6(r4)
    7112:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    7116:	4f ee       	xor.b	r14,	r15	
    7118:	0f ee       	xor	r14,	r15	
    711a:	8f 10       	swpb	r15		
    711c:	4e 4e       	mov.b	r14,	r14	
    711e:	8e 10       	swpb	r14		
    7120:	0e 5e       	rla	r14		
    7122:	0f 6f       	rlc	r15		
    7124:	0e 5e       	rla	r14		
    7126:	0f 6f       	rlc	r15		
    7128:	0e 5e       	rla	r14		
    712a:	0f 6f       	rlc	r15		
    712c:	0c 4e       	mov	r14,	r12	
    712e:	0d 4f       	mov	r15,	r13	
    7130:	1c d4 fa ff 	bis	-6(r4),	r12	;0xfffa(r4)
    7134:	1d d4 fc ff 	bis	-4(r4),	r13	;0xfffc(r4)
    7138:	84 4c f0 ff 	mov	r12,	-16(r4)	;0xfff0(r4)
    713c:	84 4d f2 ff 	mov	r13,	-14(r4)	;0xfff2(r4)
    7140:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    7144:	b0 12 66 6d 	call	#0x6d66	
    7148:	1e 44 f0 ff 	mov	-16(r4),r14	;0xfff0(r4)
    714c:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    7150:	31 50 14 00 	add	#20,	r1	;#0x0014
    7154:	34 41       	pop	r4		
    7156:	30 41       	ret			

00007158 <Msp430TimerP__1__Timer__get>:
    7158:	04 12       	push	r4		
    715a:	04 41       	mov	r1,	r4	
    715c:	24 53       	incd	r4		
    715e:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    7162:	3f 40 90 01 	mov	#400,	r15	;#0x0190
    7166:	a4 4f f8 ff 	mov	@r15,	-8(r4)	;0xfff8(r4)
    716a:	94 44 f8 ff fa ff 	mov	-8(r4),	-6(r4)	;0xfff8(r4), 0xfffa(r4)
    7170:	3f 40 90 01 	mov	#400,	r15	;#0x0190
    7174:	a4 4f f8 ff 	mov	@r15,	-8(r4)	;0xfff8(r4)
    7178:	94 94 f8 ff fa ff 	cmp	-8(r4),	-6(r4)	;0xfff8(r4), 0xfffa(r4)
    717e:	f5 23       	jnz	$-20     	;abs 0x716a
    7180:	94 44 f8 ff fc ff 	mov	-8(r4),	-4(r4)	;0xfff8(r4), 0xfffc(r4)
    7186:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    718a:	31 50 06 00 	add	#6,	r1	;#0x0006
    718e:	34 41       	pop	r4		
    7190:	30 41       	ret			

00007192 <sig_TIMERB1_VECTOR>:
    7192:	0f 12       	push	r15		
    7194:	0e 12       	push	r14		
    7196:	0d 12       	push	r13		
    7198:	0c 12       	push	r12		
    719a:	04 12       	push	r4		
    719c:	04 41       	mov	r1,	r4	
    719e:	34 50 0a 00 	add	#10,	r4	;#0x000a
    71a2:	b0 12 82 4c 	call	#0x4c82	
    71a6:	34 41       	pop	r4		
    71a8:	3c 41       	pop	r12		
    71aa:	3d 41       	pop	r13		
    71ac:	3e 41       	pop	r14		
    71ae:	3f 41       	pop	r15		
    71b0:	b1 c0 f0 00 00 00 	bic	#240,	0(r1)	;#0x00f0, 0x0000(r1)
    71b6:	00 13       	reti			

000071b8 <Msp430ClockP__set_dco_calib>:
    71b8:	04 12       	push	r4		
    71ba:	04 41       	mov	r1,	r4	
    71bc:	24 53       	incd	r4		
    71be:	21 83       	decd	r1		
    71c0:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    71c4:	5f 42 57 00 	mov.b	&0x0057,r15	
    71c8:	4e 4f       	mov.b	r15,	r14	
    71ca:	7e f0 f8 ff 	and.b	#-8,	r14	;#0xfff8
    71ce:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    71d2:	8f 10       	swpb	r15		
    71d4:	8f 11       	sxt	r15		
    71d6:	4f 4f       	mov.b	r15,	r15	
    71d8:	7f f0 07 00 	and.b	#7,	r15	;#0x0007
    71dc:	4f de       	bis.b	r14,	r15	
    71de:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    71e2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    71e6:	4f 4f       	mov.b	r15,	r15	
    71e8:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    71ec:	21 53       	incd	r1		
    71ee:	34 41       	pop	r4		
    71f0:	30 41       	ret			

000071f2 <HplMsp430GeneralIOP__24__IO__set>:
    71f2:	04 12       	push	r4		
    71f4:	04 41       	mov	r1,	r4	
    71f6:	24 53       	incd	r4		
    71f8:	21 83       	decd	r1		
    71fa:	b0 12 3e 6d 	call	#0x6d3e	
    71fe:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    7202:	3f 40 1d 00 	mov	#29,	r15	;#0x001d
    7206:	3e 40 1d 00 	mov	#29,	r14	;#0x001d
    720a:	6e 4e       	mov.b	@r14,	r14	
    720c:	5e d3       	bis.b	#1,	r14	;r3 As==01
    720e:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    7212:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    7216:	b0 12 66 6d 	call	#0x6d66	
    721a:	21 53       	incd	r1		
    721c:	34 41       	pop	r4		
    721e:	30 41       	ret			

00007220 <HplMsp430GeneralIOP__26__IO__set>:
    7220:	04 12       	push	r4		
    7222:	04 41       	mov	r1,	r4	
    7224:	24 53       	incd	r4		
    7226:	21 83       	decd	r1		
    7228:	b0 12 3e 6d 	call	#0x6d3e	
    722c:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    7230:	3f 40 1d 00 	mov	#29,	r15	;#0x001d
    7234:	3e 40 1d 00 	mov	#29,	r14	;#0x001d
    7238:	6e 4e       	mov.b	@r14,	r14	
    723a:	6e d2       	bis.b	#4,	r14	;r2 As==10
    723c:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    7240:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    7244:	b0 12 66 6d 	call	#0x6d66	
    7248:	21 53       	incd	r1		
    724a:	34 41       	pop	r4		
    724c:	30 41       	ret			

0000724e <HplMsp430GeneralIOP__27__IO__set>:
    724e:	04 12       	push	r4		
    7250:	04 41       	mov	r1,	r4	
    7252:	24 53       	incd	r4		
    7254:	21 83       	decd	r1		
    7256:	b0 12 3e 6d 	call	#0x6d3e	
    725a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    725e:	3f 40 1d 00 	mov	#29,	r15	;#0x001d
    7262:	3e 40 1d 00 	mov	#29,	r14	;#0x001d
    7266:	6e 4e       	mov.b	@r14,	r14	
    7268:	7e d2       	bis.b	#8,	r14	;r2 As==11
    726a:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    726e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    7272:	b0 12 66 6d 	call	#0x6d66	
    7276:	21 53       	incd	r1		
    7278:	34 41       	pop	r4		
    727a:	30 41       	ret			

0000727c <SchedulerBasicP__Scheduler__runNextTask>:
    727c:	04 12       	push	r4		
    727e:	04 41       	mov	r1,	r4	
    7280:	24 53       	incd	r4		
    7282:	21 83       	decd	r1		
    7284:	b0 12 b4 6c 	call	#0x6cb4	
    7288:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    728c:	f4 93 fc ff 	cmp.b	#-1,	-4(r4)	;r3 As==11, 0xfffc(r4)
    7290:	05 20       	jnz	$+12     	;abs 0x729c
    7292:	c4 43 fd ff 	mov.b	#0,	-3(r4)	;r3 As==00, 0xfffd(r4)
    7296:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    729a:	05 3c       	jmp	$+12     	;abs 0x72a6
    729c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    72a0:	b0 12 be 72 	call	#0x72be	
    72a4:	5f 43       	mov.b	#1,	r15	;r3 As==01
    72a6:	21 53       	incd	r1		
    72a8:	34 41       	pop	r4		
    72aa:	30 41       	ret			

000072ac <SchedulerBasicP__TaskBasic__default__runTask>:
    72ac:	04 12       	push	r4		
    72ae:	04 41       	mov	r1,	r4	
    72b0:	24 53       	incd	r4		
    72b2:	21 83       	decd	r1		
    72b4:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    72b8:	21 53       	incd	r1		
    72ba:	34 41       	pop	r4		
    72bc:	30 41       	ret			

000072be <SchedulerBasicP__TaskBasic__runTask>:
    72be:	04 12       	push	r4		
    72c0:	04 41       	mov	r1,	r4	
    72c2:	24 53       	incd	r4		
    72c4:	21 83       	decd	r1		
    72c6:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    72ca:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    72ce:	3f 90 05 00 	cmp	#5,	r15	;#0x0005
    72d2:	14 2c       	jc	$+42     	;abs 0x72fc
    72d4:	0f 5f       	rla	r15		
    72d6:	3f 50 d8 76 	add	#30424,	r15	;#0x76d8
    72da:	2f 4f       	mov	@r15,	r15	
    72dc:	00 4f       	br	r15		
    72de:	b0 12 e6 69 	call	#0x69e6	
    72e2:	11 3c       	jmp	$+36     	;abs 0x7306
    72e4:	b0 12 02 62 	call	#0x6202	
    72e8:	0e 3c       	jmp	$+30     	;abs 0x7306
    72ea:	b0 12 94 60 	call	#0x6094	
    72ee:	0b 3c       	jmp	$+24     	;abs 0x7306
    72f0:	b0 12 00 5e 	call	#0x5e00	
    72f4:	08 3c       	jmp	$+18     	;abs 0x7306
    72f6:	b0 12 f4 5e 	call	#0x5ef4	
    72fa:	05 3c       	jmp	$+12     	;abs 0x7306
    72fc:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    7300:	b0 12 ac 72 	call	#0x72ac	
    7304:	03 43       	nop			
    7306:	21 53       	incd	r1		
    7308:	34 41       	pop	r4		
    730a:	30 41       	ret			

0000730c <VirtualizeTimerC__0__startTimer>:
    730c:	04 12       	push	r4		
    730e:	04 41       	mov	r1,	r4	
    7310:	24 53       	incd	r4		
    7312:	31 82       	sub	#8,	r1	;r2 As==11
    7314:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    7318:	84 4d fa ff 	mov	r13,	-6(r4)	;0xfffa(r4)
    731c:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    7320:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    7324:	0e 4f       	mov	r15,	r14	
    7326:	0f 4e       	mov	r14,	r15	
    7328:	0f 5f       	rla	r15		
    732a:	0e 4f       	mov	r15,	r14	
    732c:	0f 4e       	mov	r14,	r15	
    732e:	0f 5f       	rla	r15		
    7330:	0f 5f       	rla	r15		
    7332:	0f 5e       	add	r14,	r15	
    7334:	0e 4f       	mov	r15,	r14	
    7336:	3e 50 20 11 	add	#4384,	r14	;#0x1120
    733a:	84 4e f6 ff 	mov	r14,	-10(r4)	;0xfff6(r4)
    733e:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    7342:	9f 44 fa ff 00 00 	mov	-6(r4),	0(r15)	;0xfffa(r4), 0x0000(r15)
    7348:	9f 44 fc ff 02 00 	mov	-4(r4),	2(r15)	;0xfffc(r4), 0x0002(r15)
    734e:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    7352:	9f 44 02 00 04 00 	mov	2(r4),	4(r15)	;0x0002(r4), 0x0004(r15)
    7358:	9f 44 04 00 06 00 	mov	4(r4),	6(r15)	;0x0004(r4), 0x0006(r15)
    735e:	5e 44 06 00 	mov.b	6(r4),	r14	;0x0006(r4)
    7362:	5e f3       	and.b	#1,	r14	;r3 As==01
    7364:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    7368:	5e f3       	and.b	#1,	r14	;r3 As==01
    736a:	5d 4f 08 00 	mov.b	8(r15),	r13	;0x0008(r15)
    736e:	7d f0 fe ff 	and.b	#-2,	r13	;#0xfffe
    7372:	4e dd       	bis.b	r13,	r14	
    7374:	cf 4e 08 00 	mov.b	r14,	8(r15)	;0x0008(r15)
    7378:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    737c:	5e 4f 08 00 	mov.b	8(r15),	r14	;0x0008(r15)
    7380:	6e d3       	bis.b	#2,	r14	;r3 As==10
    7382:	cf 4e 08 00 	mov.b	r14,	8(r15)	;0x0008(r15)
    7386:	b0 12 10 5f 	call	#0x5f10	
    738a:	31 52       	add	#8,	r1	;r2 As==11
    738c:	34 41       	pop	r4		
    738e:	30 41       	ret			

00007390 <TestPowerManagerC__TimerMilli__startOneShot>:
    7390:	04 12       	push	r4		
    7392:	04 41       	mov	r1,	r4	
    7394:	24 53       	incd	r4		
    7396:	21 82       	sub	#4,	r1	;r2 As==10
    7398:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    739c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    73a0:	1d 44 fa ff 	mov	-6(r4),	r13	;0xfffa(r4)
    73a4:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    73a8:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
    73ac:	b0 12 94 5e 	call	#0x5e94	
    73b0:	21 52       	add	#4,	r1	;r2 As==10
    73b2:	34 41       	pop	r4		
    73b4:	30 41       	ret			

000073b6 <HplMsp430GeneralIOP__27__IO__clr>:
    73b6:	04 12       	push	r4		
    73b8:	04 41       	mov	r1,	r4	
    73ba:	24 53       	incd	r4		
    73bc:	21 83       	decd	r1		
    73be:	b0 12 3e 6d 	call	#0x6d3e	
    73c2:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    73c6:	3f 40 1d 00 	mov	#29,	r15	;#0x001d
    73ca:	3e 40 1d 00 	mov	#29,	r14	;#0x001d
    73ce:	6e 4e       	mov.b	@r14,	r14	
    73d0:	7e f0 f7 ff 	and.b	#-9,	r14	;#0xfff7
    73d4:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    73d8:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    73dc:	b0 12 66 6d 	call	#0x6d66	
    73e0:	21 53       	incd	r1		
    73e2:	34 41       	pop	r4		
    73e4:	30 41       	ret			

000073e6 <VirtualizeTimerC__0__fireTimers>:
    73e6:	04 12       	push	r4		
    73e8:	04 41       	mov	r1,	r4	
    73ea:	24 53       	incd	r4		
    73ec:	31 50 f4 ff 	add	#-12,	r1	;#0xfff4
    73f0:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    73f4:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    73f8:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2(r4)
    73fc:	5f 3c       	jmp	$+192    	;abs 0x74bc
    73fe:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    7402:	0e 4f       	mov	r15,	r14	
    7404:	0f 4e       	mov	r14,	r15	
    7406:	0f 5f       	rla	r15		
    7408:	0e 4f       	mov	r15,	r14	
    740a:	0f 4e       	mov	r14,	r15	
    740c:	0f 5f       	rla	r15		
    740e:	0f 5f       	rla	r15		
    7410:	0f 5e       	add	r14,	r15	
    7412:	0c 4f       	mov	r15,	r12	
    7414:	3c 50 20 11 	add	#4384,	r12	;#0x1120
    7418:	84 4c f4 ff 	mov	r12,	-12(r4)	;0xfff4(r4)
    741c:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    7420:	5f 4f 08 00 	mov.b	8(r15),	r15	;0x0008(r15)
    7424:	6f f3       	and.b	#2,	r15	;r3 As==10
    7426:	4f 93       	tst.b	r15		
    7428:	47 24       	jz	$+144    	;abs 0x74b8
    742a:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    742e:	2e 4f       	mov	@r15,	r14	
    7430:	1f 4f 02 00 	mov	2(r15),	r15	;0x0002(r15)
    7434:	1c 44 fa ff 	mov	-6(r4),	r12	;0xfffa(r4)
    7438:	1d 44 fc ff 	mov	-4(r4),	r13	;0xfffc(r4)
    743c:	0c 8e       	sub	r14,	r12	
    743e:	0d 7f       	subc	r15,	r13	
    7440:	84 4c f6 ff 	mov	r12,	-10(r4)	;0xfff6(r4)
    7444:	84 4d f8 ff 	mov	r13,	-8(r4)	;0xfff8(r4)
    7448:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    744c:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    7450:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    7454:	84 9f f8 ff 	cmp	r15,	-8(r4)	;0xfff8(r4)
    7458:	2f 28       	jnc	$+96     	;abs 0x74b8
    745a:	84 9f f8 ff 	cmp	r15,	-8(r4)	;0xfff8(r4)
    745e:	03 20       	jnz	$+8      	;abs 0x7466
    7460:	84 9e f6 ff 	cmp	r14,	-10(r4)	;0xfff6(r4)
    7464:	29 28       	jnc	$+84     	;abs 0x74b8
    7466:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    746a:	5f 4f 08 00 	mov.b	8(r15),	r15	;0x0008(r15)
    746e:	5f f3       	and.b	#1,	r15	;r3 As==01
    7470:	4f 93       	tst.b	r15		
    7472:	09 24       	jz	$+20     	;abs 0x7486
    7474:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    7478:	5e 4f 08 00 	mov.b	8(r15),	r14	;0x0008(r15)
    747c:	7e f0 fd ff 	and.b	#-3,	r14	;#0xfffd
    7480:	cf 4e 08 00 	mov.b	r14,	8(r15)	;0x0008(r15)
    7484:	13 3c       	jmp	$+40     	;abs 0x74ac
    7486:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    748a:	2c 4f       	mov	@r15,	r12	
    748c:	1d 4f 02 00 	mov	2(r15),	r13	;0x0002(r15)
    7490:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    7494:	1e 4f 04 00 	mov	4(r15),	r14	;0x0004(r15)
    7498:	1f 4f 06 00 	mov	6(r15),	r15	;0x0006(r15)
    749c:	0e 5c       	add	r12,	r14	
    749e:	0f 6d       	addc	r13,	r15	
    74a0:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfff4(r4)
    74a4:	8d 4e 00 00 	mov	r14,	0(r13)	;0x0000(r13)
    74a8:	8d 4f 02 00 	mov	r15,	2(r13)	;0x0002(r13)
    74ac:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfff2(r4)
    74b0:	4f 4f       	mov.b	r15,	r15	
    74b2:	b0 12 d6 66 	call	#0x66d6	
    74b6:	05 3c       	jmp	$+12     	;abs 0x74c2
    74b8:	94 53 f2 ff 	inc	-14(r4)	;0xfff2(r4)
    74bc:	a4 92 f2 ff 	cmp	#4,	-14(r4)	;r2 As==10, 0xfff2(r4)
    74c0:	9e 2b       	jnc	$-194    	;abs 0x73fe
    74c2:	b0 12 10 5f 	call	#0x5f10	
    74c6:	31 50 0c 00 	add	#12,	r1	;#0x000c
    74ca:	34 41       	pop	r4		
    74cc:	30 41       	ret			

000074ce <HplMsp430GeneralIOP__24__IO__clr>:
    74ce:	04 12       	push	r4		
    74d0:	04 41       	mov	r1,	r4	
    74d2:	24 53       	incd	r4		
    74d4:	21 83       	decd	r1		
    74d6:	b0 12 3e 6d 	call	#0x6d3e	
    74da:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    74de:	3f 40 1d 00 	mov	#29,	r15	;#0x001d
    74e2:	3e 40 1d 00 	mov	#29,	r14	;#0x001d
    74e6:	6e 4e       	mov.b	@r14,	r14	
    74e8:	7e f0 fe ff 	and.b	#-2,	r14	;#0xfffe
    74ec:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    74f0:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    74f4:	b0 12 66 6d 	call	#0x6d66	
    74f8:	21 53       	incd	r1		
    74fa:	34 41       	pop	r4		
    74fc:	30 41       	ret			

000074fe <ArbiterP__0__ResourceDefaultOwner__release>:
    74fe:	04 12       	push	r4		
    7500:	04 41       	mov	r1,	r4	
    7502:	24 53       	incd	r4		
    7504:	21 82       	sub	#4,	r1	;r2 As==10
    7506:	b0 12 3e 6d 	call	#0x6d3e	
    750a:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    750e:	5f 42 03 11 	mov.b	&0x1103,r15	
    7512:	6f 93       	cmp.b	#2,	r15	;r3 As==10
    7514:	23 20       	jnz	$+72     	;abs 0x755c
    7516:	5f 42 06 11 	mov.b	&0x1106,r15	
    751a:	5f 93       	cmp.b	#1,	r15	;r3 As==01
    751c:	0b 20       	jnz	$+24     	;abs 0x7534
    751e:	b0 12 28 67 	call	#0x6728	
    7522:	c4 43 fb ff 	mov.b	#0,	-5(r4)	;r3 As==00, 0xfffb(r4)
    7526:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    752a:	b0 12 66 6d 	call	#0x6d66	
    752e:	5f 44 fb ff 	mov.b	-5(r4),	r15	;0xfffb(r4)
    7532:	19 3c       	jmp	$+52     	;abs 0x7566
    7534:	5f 42 06 11 	mov.b	&0x1106,r15	
    7538:	6f 93       	cmp.b	#2,	r15	;r3 As==10
    753a:	10 20       	jnz	$+34     	;abs 0x755c
    753c:	5f 42 48 11 	mov.b	&0x1148,r15	
    7540:	c2 4f 03 11 	mov.b	r15,	&0x1103	
    7544:	f2 40 03 00 06 11 	mov.b	#3,	&0x1106	;#0x0003
    754a:	c4 43 fc ff 	mov.b	#0,	-4(r4)	;r3 As==00, 0xfffc(r4)
    754e:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    7552:	b0 12 66 6d 	call	#0x6d66	
    7556:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    755a:	05 3c       	jmp	$+12     	;abs 0x7566
    755c:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    7560:	b0 12 66 6d 	call	#0x6d66	
    7564:	5f 43       	mov.b	#1,	r15	;r3 As==01
    7566:	21 52       	add	#4,	r1	;r2 As==10
    7568:	34 41       	pop	r4		
    756a:	30 41       	ret			

0000756c <ArbiterP__0__Resource__request>:
    756c:	04 12       	push	r4		
    756e:	04 41       	mov	r1,	r4	
    7570:	24 53       	incd	r4		
    7572:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    7576:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    757a:	5f 42 03 11 	mov.b	&0x1103,r15	
    757e:	b0 12 56 67 	call	#0x6756	
    7582:	b0 12 3e 6d 	call	#0x6d3e	
    7586:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    758a:	5f 42 06 11 	mov.b	&0x1106,r15	
    758e:	4f 93       	tst.b	r15		
    7590:	0d 20       	jnz	$+28     	;abs 0x75ac
    7592:	d2 43 06 11 	mov.b	#1,	&0x1106	;r3 As==01
    7596:	d2 44 fc ff 48 11 	mov.b	-4(r4),	&0x1148	;0xfffc(r4)
    759c:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    75a0:	b0 12 66 6d 	call	#0x6d66	
    75a4:	b0 12 36 68 	call	#0x6836	
    75a8:	4f 43       	clr.b	r15		
    75aa:	1a 3c       	jmp	$+54     	;abs 0x75e0
    75ac:	5f 42 48 11 	mov.b	&0x1148,r15	
    75b0:	5f 94 fc ff 	cmp.b	-4(r4),	r15	;0xfffc(r4)
    75b4:	09 20       	jnz	$+20     	;abs 0x75c8
    75b6:	c4 43 f9 ff 	mov.b	#0,	-7(r4)	;r3 As==00, 0xfff9(r4)
    75ba:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    75be:	b0 12 66 6d 	call	#0x6d66	
    75c2:	5f 44 f9 ff 	mov.b	-7(r4),	r15	;0xfff9(r4)
    75c6:	0c 3c       	jmp	$+26     	;abs 0x75e0
    75c8:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    75cc:	b0 12 fa 67 	call	#0x67fa	
    75d0:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    75d4:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    75d8:	b0 12 66 6d 	call	#0x6d66	
    75dc:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    75e0:	31 50 06 00 	add	#6,	r1	;#0x0006
    75e4:	34 41       	pop	r4		
    75e6:	30 41       	ret			

000075e8 <ArbiterP__0__Resource__release>:
    75e8:	04 12       	push	r4		
    75ea:	04 41       	mov	r1,	r4	
    75ec:	24 53       	incd	r4		
    75ee:	21 82       	sub	#4,	r1	;r2 As==10
    75f0:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    75f4:	b0 12 3e 6d 	call	#0x6d3e	
    75f8:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    75fc:	5f 42 06 11 	mov.b	&0x1106,r15	
    7600:	7f 90 03 00 	cmp.b	#3,	r15	;#0x0003
    7604:	2b 20       	jnz	$+88     	;abs 0x765c
    7606:	5f 42 03 11 	mov.b	&0x1103,r15	
    760a:	5f 94 fc ff 	cmp.b	-4(r4),	r15	;0xfffc(r4)
    760e:	26 20       	jnz	$+78     	;abs 0x765c
    7610:	b0 12 66 68 	call	#0x6866	
    7614:	4f 93       	tst.b	r15		
    7616:	0f 20       	jnz	$+32     	;abs 0x7636
    7618:	b0 12 d2 68 	call	#0x68d2	
    761c:	c2 4f 48 11 	mov.b	r15,	&0x1148	
    7620:	f2 43 03 11 	mov.b	#-1,	&0x1103	;r3 As==11
    7624:	d2 43 06 11 	mov.b	#1,	&0x1106	;r3 As==01
    7628:	b0 12 28 67 	call	#0x6728	
    762c:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    7630:	b0 12 fe 68 	call	#0x68fe	
    7634:	0a 3c       	jmp	$+22     	;abs 0x764a
    7636:	e2 43 03 11 	mov.b	#2,	&0x1103	;r3 As==10
    763a:	c2 43 06 11 	mov.b	#0,	&0x1106	;r3 As==00
    763e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    7642:	b0 12 fe 68 	call	#0x68fe	
    7646:	b0 12 42 69 	call	#0x6942	
    764a:	c4 43 fb ff 	mov.b	#0,	-5(r4)	;r3 As==00, 0xfffb(r4)
    764e:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    7652:	b0 12 66 6d 	call	#0x6d66	
    7656:	5f 44 fb ff 	mov.b	-5(r4),	r15	;0xfffb(r4)
    765a:	05 3c       	jmp	$+12     	;abs 0x7666
    765c:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    7660:	b0 12 66 6d 	call	#0x6d66	
    7664:	5f 43       	mov.b	#1,	r15	;r3 As==01
    7666:	21 52       	add	#4,	r1	;r2 As==10
    7668:	34 41       	pop	r4		
    766a:	30 41       	ret			

0000766c <TransformAlarmC__0__Alarm__startAt>:
    766c:	04 12       	push	r4		
    766e:	04 41       	mov	r1,	r4	
    7670:	24 53       	incd	r4		
    7672:	31 50 f6 ff 	add	#-10,	r1	;#0xfff6
    7676:	84 4e f6 ff 	mov	r14,	-10(r4)	;0xfff6(r4)
    767a:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    767e:	84 4c fa ff 	mov	r12,	-6(r4)	;0xfffa(r4)
    7682:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    7686:	b0 12 3e 6d 	call	#0x6d3e	
    768a:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    768e:	92 44 f6 ff 16 11 	mov	-10(r4),&0x1116	;0xfff6(r4)
    7694:	92 44 f8 ff 18 11 	mov	-8(r4),	&0x1118	;0xfff8(r4)
    769a:	92 44 fa ff 12 11 	mov	-6(r4),	&0x1112	;0xfffa(r4)
    76a0:	92 44 fc ff 14 11 	mov	-4(r4),	&0x1114	;0xfffc(r4)
    76a6:	b0 12 1a 6f 	call	#0x6f1a	
    76aa:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    76ae:	b0 12 66 6d 	call	#0x6d66	
    76b2:	31 50 0a 00 	add	#10,	r1	;#0x000a
    76b6:	34 41       	pop	r4		
    76b8:	30 41       	ret			

000076ba <_unexpected_>:
    76ba:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	8a 40 8a 40 8a 40 8a 40 8a 40 20 6e 82 6d 8a 40     .@.@.@.@.@ n.m.@
    fff0:	8a 40 8a 40 8a 40 8a 40 92 71 46 6e 8a 40 00 40     .@.@.@.@.qFn.@.@
